% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{toggle_button}
\alias{toggle_button}
\alias{toggle_icon}
\alias{toggle_title}
\title{Toggle button properties.}
\usage{
toggle_icon(input_id, icons, one_way = FALSE)

toggle_title(input_id, titles, one_way = FALSE)
}
\arguments{
\item{input_id}{\code{character(1)} (namespaced) id of the button}

\item{icons, titles}{\code{character(2)} vector specifing values between which to toggle}

\item{one_way}{\code{logical(1)} flag specifying whether to keep toggling;
if TRUE, the target will be changed
from the first element of \code{icons}/\code{titles} to the second}
}
\value{
Invisible NULL.
}
\description{
Switch between different icons or titles on a button.
}
\examples{
\dontrun{

# continuously switch between right- and down-pointing chevrons
toggle_icon("toggle_element", c("fa-angle-right", "fa-angle-down"))

# switch right- to down-pointing chevron
toggle_icon("toggle_element", c("fa-angle-right", "fa-angle-down"))
}

library(shiny)

ui <- fluidPage(
  shinyjs::useShinyjs(),
  actionButton("hide_content", label = "hide", icon = icon("xmark")),
  actionButton("show_content", label = "show", icon = icon("check")),
  actionButton("toggle_content", label = "toggle", icon = icon("angle-down")),
  br(),
  div(
    id = "content",
    verbatimTextOutput("printout")
  )
)

server <- function(input, output, session) {

  observeEvent(input[["hide_content"]], {
    shinyjs::hide("content")
    toggle_icon("toggle_content", c("fa-angle-down", "fa-angle-right"), one_way = TRUE)
  }, ignoreInit = TRUE)

  observeEvent(input[["show_content"]], {
    shinyjs::show("content")
    toggle_icon("toggle_content", c("fa-angle-right", "fa-angle-down"), one_way = TRUE)
  }, ignoreInit = TRUE)

  observeEvent(input[["toggle_content"]], {
    shinyjs::toggle("content")
    toggle_icon("toggle_content", c("fa-angle-right", "fa-angle-down"))
  }, ignoreInit = TRUE)

  output[["printout"]] <- renderPrint({
    head(faithful, 10)
  })

}

if (interactive()) {
  shinyApp(ui, server)
}

}
