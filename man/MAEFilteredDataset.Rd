% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MAEFilteredDataset.R
\name{MAEFilteredDataset}
\alias{MAEFilteredDataset}
\title{\code{MAEFilteredDataset} R6 class}
\description{
\code{MAEFilteredDataset} R6 class

\code{MAEFilteredDataset} R6 class
}
\examples{

## ------------------------------------------------
## Method `MAEFilteredDataset$set_filter_state`
## ------------------------------------------------

utils::data(miniACC, package = "MultiAssayExperiment")
dataset <- teal.slice:::MAEFilteredDataset$new(miniACC, "MAE")
fs <- list(
  subjects = list(
    years_to_birth = list(selected = c(30, 50), keep_na = TRUE, keep_inf = FALSE),
    vital_status = list(selected = "1", keep_na = FALSE),
    gender = list(selected = "female", keep_na = TRUE)
  ),
  RPPAArray = list(
    subset = list(ARRAY_TYPE = list(selected = "", keep_na = TRUE))
  )
)
dataset$set_filter_state(state = fs)
shiny::isolate(dataset$get_filter_state())
}
\keyword{internal}
\section{Super class}{
\code{\link[teal.slice:FilteredDataset]{teal.slice::FilteredDataset}} -> \code{MAEFilteredDataset}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MAEFilteredDataset-new}{\code{MAEFilteredDataset$new()}}
\item \href{#method-MAEFilteredDataset-get_call}{\code{MAEFilteredDataset$get_call()}}
\item \href{#method-MAEFilteredDataset-get_varlabels}{\code{MAEFilteredDataset$get_varlabels()}}
\item \href{#method-MAEFilteredDataset-get_filter_overview_info}{\code{MAEFilteredDataset$get_filter_overview_info()}}
\item \href{#method-MAEFilteredDataset-get_filterable_varnames}{\code{MAEFilteredDataset$get_filterable_varnames()}}
\item \href{#method-MAEFilteredDataset-set_filter_state}{\code{MAEFilteredDataset$set_filter_state()}}
\item \href{#method-MAEFilteredDataset-remove_filter_state}{\code{MAEFilteredDataset$remove_filter_state()}}
\item \href{#method-MAEFilteredDataset-ui_add_filter_state}{\code{MAEFilteredDataset$ui_add_filter_state()}}
\item \href{#method-MAEFilteredDataset-srv_add_filter_state}{\code{MAEFilteredDataset$srv_add_filter_state()}}
\item \href{#method-MAEFilteredDataset-get_filter_overview_nsubjs}{\code{MAEFilteredDataset$get_filter_overview_nsubjs()}}
\item \href{#method-MAEFilteredDataset-clone}{\code{MAEFilteredDataset$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_dataname"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_dataname'><code>teal.slice::FilteredDataset$get_dataname()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_dataset"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_dataset'><code>teal.slice::FilteredDataset$get_dataset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_dataset_label"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_dataset_label'><code>teal.slice::FilteredDataset$get_dataset_label()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_filter_state"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_filter_state'><code>teal.slice::FilteredDataset$get_filter_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_filter_states"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_filter_states'><code>teal.slice::FilteredDataset$get_filter_states()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_formatted_filter_state"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_formatted_filter_state'><code>teal.slice::FilteredDataset$get_formatted_filter_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_hash"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_hash'><code>teal.slice::FilteredDataset$get_hash()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_keys"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_keys'><code>teal.slice::FilteredDataset$get_keys()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_metadata"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_metadata'><code>teal.slice::FilteredDataset$get_metadata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_varnames"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_varnames'><code>teal.slice::FilteredDataset$get_varnames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="queues_empty"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-queues_empty'><code>teal.slice::FilteredDataset$queues_empty()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="server"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-server'><code>teal.slice::FilteredDataset$server()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="set_filterable_varnames"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-set_filterable_varnames'><code>teal.slice::FilteredDataset$set_filterable_varnames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="ui"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-ui'><code>teal.slice::FilteredDataset$ui()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-new"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-new}{}}}
\subsection{Method \code{new()}}{
Initialize \code{MAEFilteredDataset} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$new(
  dataset,
  dataname,
  keys = character(0),
  label = character(0),
  metadata = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{(\code{MulitiAssayExperiment})\cr
single \code{MultiAssayExperiment} for which filters are rendered}

\item{\code{dataname}}{(\code{character})\cr
A given name for the dataset it may not contain spaces}

\item{\code{keys}}{optional, (\code{character})\cr
Vector with primary keys}

\item{\code{label}}{(\code{character})\cr
Label to describe the dataset}

\item{\code{metadata}}{(named \code{list} or \code{NULL}) \cr
Field containing metadata about the dataset. Each element of the list
should be atomic and length one.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-get_call"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-get_call}{}}}
\subsection{Method \code{get_call()}}{
Get filter expression

This functions returns filter calls equivalent to selected items
within each of \code{filter_states}. Configuration of the calls is constant and
depends on \code{filter_states} type and order which are set during initialization.
This class contains multiple \code{FilterStates}:
\itemize{
\item{\code{colData(dataset)}}{for this object single \code{MAEFilterStates}
which returns \code{subsetByColData} call}
\item{experiments}{for each experiment single \code{SEFilterStates} and
\code{FilterStates_matrix}, both returns \code{subset} call}
}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$get_call()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
filter \code{call} or \code{list} of filter calls
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-get_varlabels"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-get_varlabels}{}}}
\subsection{Method \code{get_varlabels()}}{
Gets labels of variables in the data

Variables are the column names of the data.
Either, all labels must have been provided for all variables
in \code{set_data} or \code{NULL}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$get_varlabels(variables = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{variables}}{(\code{character} vector) variables to get labels for;
if \code{NULL}, for all variables in data}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{character} or \code{NULL}) variable labels, \code{NULL} if \code{column_labels}
attribute does not exist for the data
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-get_filter_overview_info"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-get_filter_overview_info}{}}}
\subsection{Method \code{get_filter_overview_info()}}{
Get filter overview rows of a dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$get_filter_overview_info(
  filtered_dataset = self$get_dataset()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filtered_dataset}}{(\code{MultiAssayExperiment}) object to calculate filter overview statistics on.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{matrix}) matrix of observations and subjects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-get_filterable_varnames"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-get_filterable_varnames}{}}}
\subsection{Method \code{get_filterable_varnames()}}{
Gets variable names for the filtering.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$get_filterable_varnames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{character(0)})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-set_filter_state"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-set_filter_state}{}}}
\subsection{Method \code{set_filter_state()}}{
Set filter state
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$set_filter_state(state, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{state}}{(\verb{named list})\cr
names of the list should correspond to the names of the initialized \code{FilterStates}
kept in \code{private$filter_states}. For this object they are \code{"subjects"} and
names of the experiments. Values of initial state should be relevant
to the referred column.}

\item{\code{...}}{ignored.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{utils::data(miniACC, package = "MultiAssayExperiment")
dataset <- teal.slice:::MAEFilteredDataset$new(miniACC, "MAE")
fs <- list(
  subjects = list(
    years_to_birth = list(selected = c(30, 50), keep_na = TRUE, keep_inf = FALSE),
    vital_status = list(selected = "1", keep_na = FALSE),
    gender = list(selected = "female", keep_na = TRUE)
  ),
  RPPAArray = list(
    subset = list(ARRAY_TYPE = list(selected = "", keep_na = TRUE))
  )
)
dataset$set_filter_state(state = fs)
shiny::isolate(dataset$get_filter_state())
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-remove_filter_state"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-remove_filter_state}{}}}
\subsection{Method \code{remove_filter_state()}}{
Remove one or more \code{FilterState} of a \code{MAEFilteredDataset}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$remove_filter_state(element_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{element_id}}{(\code{list})\cr
Named list of variables to remove their \code{FilterState}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-ui_add_filter_state"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-ui_add_filter_state}{}}}
\subsection{Method \code{ui_add_filter_state()}}{
UI module to add filter variable for this dataset

UI module to add filter variable for this dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$ui_add_filter_state(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
identifier of the element - preferably containing dataset name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
function - shiny UI module
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-srv_add_filter_state"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-srv_add_filter_state}{}}}
\subsection{Method \code{srv_add_filter_state()}}{
Server module to add filter variable for this dataset

Server module to add filter variable for this dataset.
For this class \code{srv_add_filter_state} calls multiple modules
of the same name from \code{FilterStates} as \code{MAEFilteredDataset}
contains one \code{FilterStates} object for \code{colData} and one for each
experiment.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$srv_add_filter_state(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
an ID string that corresponds with the ID used to call the module's UI function.}

\item{\code{...}}{ignored.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{moduleServer} function which returns \code{NULL}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-get_filter_overview_nsubjs"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-get_filter_overview_nsubjs}{}}}
\subsection{Method \code{get_filter_overview_nsubjs()}}{
Gets filter overview subjects number
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$get_filter_overview_nsubjs(
  filtered_dataset = self$get_dataset(),
  subject_keys
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filtered_dataset}}{(\code{MultiAssayExperiment}) object to calculate filter overview statistics on.}

\item{\code{subject_keys}}{(unused) in \code{MultiAssayExperiment} unique subjects are the rows of \code{colData} slot.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{list} with the number of subjects of filtered/non-filtered datasets.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
