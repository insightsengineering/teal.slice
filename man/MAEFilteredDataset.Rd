% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FilteredDatasetMAE.R
\name{MAEFilteredDataset}
\alias{MAEFilteredDataset}
\title{\code{MAEFilteredDataset} R6 class}
\description{
\code{MAEFilteredDataset} R6 class

\code{MAEFilteredDataset} R6 class
}
\examples{

## ------------------------------------------------
## Method `MAEFilteredDataset$set_filter_state`
## ------------------------------------------------

utils::data(miniACC, package = "MultiAssayExperiment")
dataset <- teal.slice:::MAEFilteredDataset$new(miniACC, "MAE")
fs <- list(
  subjects = list(
    years_to_birth = list(selected = c(30, 50), keep_na = TRUE, keep_inf = FALSE),
    vital_status = list(selected = "1", keep_na = FALSE),
    gender = list(selected = "female", keep_na = TRUE)
  ),
  RPPAArray = list(
    subset = list(ARRAY_TYPE = list(selected = "", keep_na = TRUE))
  )
)
dataset$set_filter_state(state = fs)
shiny::isolate(dataset$get_filter_state())
}
\keyword{internal}
\section{Super class}{
\code{\link[teal.slice:FilteredDataset]{teal.slice::FilteredDataset}} -> \code{MAEFilteredDataset}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MAEFilteredDataset-new}{\code{MAEFilteredDataset$new()}}
\item \href{#method-MAEFilteredDataset-get_filter_overview_info}{\code{MAEFilteredDataset$get_filter_overview_info()}}
\item \href{#method-MAEFilteredDataset-set_filter_state}{\code{MAEFilteredDataset$set_filter_state()}}
\item \href{#method-MAEFilteredDataset-remove_filter_state}{\code{MAEFilteredDataset$remove_filter_state()}}
\item \href{#method-MAEFilteredDataset-ui_add}{\code{MAEFilteredDataset$ui_add()}}
\item \href{#method-MAEFilteredDataset-srv_add}{\code{MAEFilteredDataset$srv_add()}}
\item \href{#method-MAEFilteredDataset-get_filter_overview_nsubjs}{\code{MAEFilteredDataset$get_filter_overview_nsubjs()}}
\item \href{#method-MAEFilteredDataset-clone}{\code{MAEFilteredDataset$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="clear_filter_states"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-clear_filter_states'><code>teal.slice::FilteredDataset$clear_filter_states()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_call"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_call'><code>teal.slice::FilteredDataset$get_call()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_dataname"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_dataname'><code>teal.slice::FilteredDataset$get_dataname()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_dataset"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_dataset'><code>teal.slice::FilteredDataset$get_dataset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_dataset_label"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_dataset_label'><code>teal.slice::FilteredDataset$get_dataset_label()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_filter_count"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_filter_count'><code>teal.slice::FilteredDataset$get_filter_count()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_filter_state"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_filter_state'><code>teal.slice::FilteredDataset$get_filter_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_filter_states"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_filter_states'><code>teal.slice::FilteredDataset$get_filter_states()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_formatted_filter_state"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_formatted_filter_state'><code>teal.slice::FilteredDataset$get_formatted_filter_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_keys"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_keys'><code>teal.slice::FilteredDataset$get_keys()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="get_metadata"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-get_metadata'><code>teal.slice::FilteredDataset$get_metadata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="set_filterable_varnames"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-set_filterable_varnames'><code>teal.slice::FilteredDataset$set_filterable_varnames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="srv_active"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-srv_active'><code>teal.slice::FilteredDataset$srv_active()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.slice" data-topic="FilteredDataset" data-id="ui_active"><a href='../../teal.slice/html/FilteredDataset.html#method-FilteredDataset-ui_active'><code>teal.slice::FilteredDataset$ui_active()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-new"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-new}{}}}
\subsection{Method \code{new()}}{
Initialize \code{MAEFilteredDataset} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$new(
  dataset,
  dataname,
  keys = character(0),
  label = character(0),
  metadata = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{(\code{MulitiAssayExperiment})\cr
a single \code{MultiAssayExperiment} for which to define a subset}

\item{\code{dataname}}{(\code{character})\cr
a given name for the dataset it may not contain spaces}

\item{\code{keys}}{optional, (\code{character})\cr
vector with primary keys}

\item{\code{label}}{(\code{character})\cr
label to describe the dataset}

\item{\code{metadata}}{(named \code{list} or \code{NULL}) \cr
field containing metadata about the dataset;
each element of the list must be atomic and length one}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-get_filter_overview_info"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-get_filter_overview_info}{}}}
\subsection{Method \code{get_filter_overview_info()}}{
Get filter overview rows of a dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$get_filter_overview_info()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{matrix}) matrix of observations and subjects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-set_filter_state"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-set_filter_state}{}}}
\subsection{Method \code{set_filter_state()}}{
Set filter state
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$set_filter_state(state)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{state}}{(\verb{named list})\cr
names of the list should correspond to the names of the initialized \code{FilterStates}
kept in \code{private$filter_states}. For this object they are \code{"subjects"} and
names of the experiments. Values of initial state should be relevant
to the referred column.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{utils::data(miniACC, package = "MultiAssayExperiment")
dataset <- teal.slice:::MAEFilteredDataset$new(miniACC, "MAE")
fs <- list(
  subjects = list(
    years_to_birth = list(selected = c(30, 50), keep_na = TRUE, keep_inf = FALSE),
    vital_status = list(selected = "1", keep_na = FALSE),
    gender = list(selected = "female", keep_na = TRUE)
  ),
  RPPAArray = list(
    subset = list(ARRAY_TYPE = list(selected = "", keep_na = TRUE))
  )
)
dataset$set_filter_state(state = fs)
shiny::isolate(dataset$get_filter_state())
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-remove_filter_state"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-remove_filter_state}{}}}
\subsection{Method \code{remove_filter_state()}}{
Remove one or more \code{FilterState} of a \code{MAEFilteredDataset}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$remove_filter_state(state_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{state_id}}{(\code{list})\cr
Named list of variables to remove their \code{FilterState}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-ui_add"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-ui_add}{}}}
\subsection{Method \code{ui_add()}}{
UI module to add filter variable for this dataset

UI module to add filter variable for this dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$ui_add(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
identifier of the element - preferably containing dataset name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
function - shiny UI module
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-srv_add"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-srv_add}{}}}
\subsection{Method \code{srv_add()}}{
Server module to add filter variable for this dataset

Server module to add filter variable for this dataset.
For this class \code{srv_add} calls multiple modules
of the same name from \code{FilterStates} as \code{MAEFilteredDataset}
contains one \code{FilterStates} object for \code{colData} and one for each
experiment.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$srv_add(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
an ID string that corresponds with the ID used to call the module's UI function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{moduleServer} function which returns \code{NULL}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-get_filter_overview_nsubjs"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-get_filter_overview_nsubjs}{}}}
\subsection{Method \code{get_filter_overview_nsubjs()}}{
Gets filter overview subjects number
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$get_filter_overview_nsubjs()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} with the number of subjects of filtered/non-filtered datasets.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MAEFilteredDataset-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MAEFilteredDataset-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MAEFilteredDataset$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
