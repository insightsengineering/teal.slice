% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FilteredDataset-utils.R
\name{init_filtered_dataset}
\alias{init_filtered_dataset}
\title{Initializes \code{FilteredDataset}}
\usage{
init_filtered_dataset(
  dataset,
  dataname,
  keys = character(0),
  parent_name = character(0),
  parent = reactive(dataset),
  join_keys = character(0),
  label = attr(dataset, "label")
)
}
\arguments{
\item{dataset}{(\code{data.frame} or \code{MultiAssayExperiment})}

\item{dataname}{(\code{character})
A given name for the dataset it may not contain spaces}

\item{keys}{optional, (\code{character})
Vector with primary keys}

\item{parent_name}{(\code{character(1)})
Name of the parent dataset}

\item{parent}{(\code{reactive})
object returned by this reactive is a filtered \code{data.frame} from other \code{FilteredDataset}
named \code{parent_name}. Consequence of passing \code{parent} is a \code{reactive} link which causes
causing re-filtering of this \code{dataset} based on the changes in \code{parent}.}

\item{join_keys}{(\code{character})
Name of the columns in this dataset to join with \code{parent}
dataset. If the column names are different if both datasets
then the names of the vector define the \code{parent} columns.}

\item{label}{(\code{character})
Label to describe the dataset}
}
\description{
Initializes \code{FilteredDataset}
}
\note{
Although this function is exported for use in other packages, it may be changed or removed in a future release
at which point any code which relies on this exported function will need to be changed.
}
\examples{
# DataframeFilteredDataset example
iris_fd <- init_filtered_dataset(iris, dataname = "iris")
ui <- fluidPage(
  iris_fd$ui_add(id = "add"),
  iris_fd$ui_active("dataset"),
  verbatimTextOutput("call")
)
server <- function(input, output, session) {
  iris_fd$srv_add(id = "add")
  iris_fd$srv_active(id = "dataset")

  output$call <- renderText({
    paste(
      vapply(iris_fd$get_call(), deparse1, character(1), collapse = "\n"),
      collapse = "\n"
    )
  })
}
if (interactive()) {
  shinyApp(ui, server)
}

\dontshow{if (requireNamespace("MultiAssayExperiment")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# MAEFilteredDataset example
library(MultiAssayExperiment)
data(miniACC, package = "MultiAssayExperiment")
MAE_fd <- init_filtered_dataset(miniACC, "MAE")
ui <- fluidPage(
  MAE_fd$ui_add(id = "add"),
  MAE_fd$ui_active("dataset"),
  verbatimTextOutput("call")
)
server <- function(input, output, session) {
  MAE_fd$srv_add(id = "add")
  MAE_fd$srv_active(id = "dataset")
  output$call <- renderText({
    paste(
      vapply(MAE_fd$get_call(), deparse1, character(1), collapse = "\n"),
      collapse = "\n"
    )
  })
}
if (interactive()) {
  shinyApp(ui, server)
}
\dontshow{\}) # examplesIf}
}
\keyword{internal}
