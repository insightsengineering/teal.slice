% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FilterState-abstract.R
\docType{class}
\name{FilterState}
\alias{FilterState}
\title{FilterState Abstract Class}
\description{
Abstract class to encapsulate filter states
}
\details{
This abstract class to encapsulate \link{InteractiveFilterState}
}
\keyword{internal}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-FilterState-new}{\code{FilterState$new()}}
\item \href{#method-FilterState-get_call}{\code{FilterState$get_call()}}
\item \href{#method-FilterState-clone}{\code{FilterState$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FilterState-new"></a>}}
\if{latex}{\out{\hypertarget{method-FilterState-new}{}}}
\subsection{Method \code{new()}}{
Initialize a \code{FilterState} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilterState$new(
  x,
  varname,
  varlabel = character(0),
  dataname = NULL,
  extract_type = character(0)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{vector})\cr
values of the variable used in filter}

\item{\code{varname}}{(\code{character})\cr
name of the variable}

\item{\code{varlabel}}{(\code{character(1)})\cr
label of the variable (optional).}

\item{\code{dataname}}{(\code{character(1)})\cr
name of dataset where \code{x} is taken from.}

\item{\code{extract_type}}{(\code{character(0)}, \code{character(1)})\cr
whether condition calls should be prefixed by dataname. Possible values:
\itemize{
\item{\code{character(0)} (default)}{ \code{varname} in the condition call will not be prefixed}
\item{\code{"list"}}{ \code{varname} in the condition call will be returned as \verb{<dataname>$<varname>}}
\item{\code{"matrix"}}{ \code{varname} in the condition call will be returned as \verb{<dataname>[, <varname>]}}
}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FilterState-get_call"></a>}}
\if{latex}{\out{\hypertarget{method-FilterState-get_call}{}}}
\subsection{Method \code{get_call()}}{
Returns reproducible condition call
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilterState$get_call()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FilterState-clone"></a>}}
\if{latex}{\out{\hypertarget{method-FilterState-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FilterState$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
