% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/teal_slice.R
\name{filter_settings}
\alias{filter_settings}
\title{Manage filter state(s).}
\usage{
filter_settings(
  ...,
  exclude_varnames = NULL,
  include_varnames = NULL,
  count_type = NULL,
  module_add = TRUE
)
}
\arguments{
\item{...}{any number of \code{teal_slice} objects}

\item{include_varnames, exclude_varnames}{\verb{named list}s of \code{character} vectors where list names
match names of data sets and vector elements match variable names in respective data sets;
specify which variables are allowed to be filtered; see \code{Details}}

\item{count_type}{\code{character(1)} string specifying how observations are tallied by these filter states.
Possible options:
\itemize{
\item \code{"all"} to have counts of single \code{FilterState} to show number of observation in filtered
and unfiltered dataset.
\item \code{"none"} to have counts of single \code{FilterState} to show unfiltered number only.
}}

\item{module_add}{\code{logical(1)} logical flag specifying whether the user will be able to add new filters}

\item{show_all}{\code{logical(1)} specifying whether NULL elements should also be printed}

\item{trim_lines}{\code{logical(1)} specifying whether to trim lines when printing}

\item{field}{\code{character(1)} name of \code{teal_slice} element}

\item{file}{\code{character(1)} path to \code{teal_slices} save to or load \code{teal_slices} from}
}
\value{
\code{teal_slices}, which is an unnamed list of \code{teal_slice} objects.
}
\description{
\code{filter_settings} collates multiple \code{teal_slice} objects into \code{teal_slices},
a complete filter specification. This is used by all classes above \code{FilterState}
as well as \code{filter_panel_api} wrapper functions.
\code{teal_slices} also specifies which variables cannot be filtered
and how observations are tallied, which is resolved by \code{FilterStates}.
}
\details{
\code{include_varnames} and \code{exclude_varnames} in attributes in \code{teal_slices}
determine which variables can have filters assigned.
The former enumerates allowed variables, the latter enumerates forbidden values.
Since these can be mutually exclusive in some cases, they cannot both be set in one \code{teal_slices} object.
}
\examples{
filter_1 <- filter_conf(
  dataname = "dataname1",
  varname = "varname1",
  choices = letters,
  selected = "b",
  keep_na = TRUE,
  fixed = FALSE,
  extra1 = "extraone"
)
filter_2 <- filter_conf(
  dataname = "dataname1",
  varname = "varname2",
  choices = 1:10,
  keep_na = TRUE,
  selected = 2,
  fixed = TRUE,
  locked = FALSE,
  extra2 = "extratwo"
)
filter_3 <- filter_conf(
  dataname = "dataname2",
  varname = "varname3",
  choices = 1:10 / 10,
  keep_na = TRUE,
  selected = 0.2,
  fixed = TRUE,
  locked = FALSE,
  extra1 = "extraone",
  extra2 = "extratwo"
)

all_filters <- filter_settings(
  filter_1,
  filter_2,
  filter_3,
  exclude_varnames = list(
    "dataname1" = "varname2"
  )
)
}
