[{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üíª Coding guidelines üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"GitHub Flow","title":"Contribution Guidelines","text":"repository uses GitHub Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"coding-guidelines","dir":"","previous_headings":"","what":"Coding guidelines","title":"Contribution Guidelines","text":"repository follows unified processes standards adopted maintainers ensure software development carried consistently within teams cohesively across repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"Coding guidelines","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"dependency-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency management","title":"Contribution Guidelines","text":"Lightweight right weight. repository follows tinyverse recommendations limiting dependencies minimum.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"dependency-version-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency version management","title":"Contribution Guidelines","text":"code compatible (!) historical versions given dependency package, required specify minimal version DESCRIPTION file. particular: development version requires (imports) development version another package - required put abc (>= 1.2.3.9000).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/articles/filter-panel-for-developers.html","id":"getting-and-setting-filter-states","dir":"Articles","previous_headings":"Filter Panel API","what":"Getting and setting filter states","title":"Filter Panel for Developers","text":"filter panel classes dedicated methods set get current filter state. methods include: get_filter_state - returns current state filters teal_slices object set_filter_state - adds modifies filters based teal_slices object remove_filter_state - removes particular filter states based teal_slices object clear_filter_states - removes filter states Setting getting filter states done teal_slices object collection teal_slice objects. Think teal_slice quantum information fully describes filter state one variable. order tell FilteredData set filter specific variable, one must call set_filter_state method teal_slices object containing teal_slice refers variable interest. remove particular FilterState object, one must call remove_filter_state method using teal_slices containing teal_slice refers respective variable. teal_slice object contains information necessary : Determine column data set apply filter expression: dataname - name data set varname - name column experiment (MultiAssayExperiment objects) - name experiment arg (SummarizedExperiment objects, e.g within MultiAssayExperiment) - name argument call subset (subset select) Express store current selection state: selected - selected values limits selected range keep_inf - determines Inf values dropped keep_na - determines NA values dropped expr - explicit logical expression Control behavior appearance FilterState object: choices - determines set values range can selected multiple (ChoiceFilterState) - allows multiple values selected fixed - forbids changing state FilterState anchored - forbids removing FilterState title - displayed title filter card addition, every teal_slice object id. impossible create FilteredData slices duplicated ids. filter states created modified set_filter_state method two consecutive calls set_filter_state passed teal_slice id, first call instantiate FilterState, second call modify . Creating teal_slices slices duplicated ids forbidden raise error.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/filter-panel-for-developers.html","id":"setting-the-filter-state","dir":"Articles","previous_headings":"Filter Panel API > Getting and setting filter states","what":"1. Setting the filter state","title":"Filter Panel for Developers","text":"","code":"library(teal.slice)  datasets <- init_filtered_data(list(iris = iris, mtcars = mtcars))  set_filter_state(   datasets = datasets,   filter = teal_slices(     teal_slice(dataname = \"iris\", varname = \"Species\", selected = \"virginica\", keep_na = FALSE),     teal_slice(dataname = \"mtcars\", id = \"4 cyl\", title = \"4 Cylinders\", expr = \"cyl == 4\"),     teal_slice(dataname = \"mtcars\", varname = \"mpg\", selected = c(20.0, 25.0), keep_na = FALSE, keep_inf = FALSE),     include_varnames = list(iris = c(\"Species\", \"Sepal.Length\")),     exclude_varnames = list(mtcars = \"cyl\")   ) )"},{"path":"https://insightsengineering.github.io/teal.slice/articles/filter-panel-for-developers.html","id":"updating-filter-states--works-only-in-the-shiny-reactive-context-","dir":"Articles","previous_headings":"Filter Panel API > Getting and setting filter states","what":"2. Updating filter states. *Works only in the shiny reactive context.","title":"Filter Panel for Developers","text":"","code":"set_filter_state(   datasets = datasets,   filter = teal_slices(     teal_slice(dataname = \"mtcars\", varname = \"mpg\", selected = c(22.0, 25.0))   ) )"},{"path":"https://insightsengineering.github.io/teal.slice/articles/filter-panel-for-developers.html","id":"getting-the-filter-state","dir":"Articles","previous_headings":"Filter Panel API > Getting and setting filter states","what":"3. Getting the filter state","title":"Filter Panel for Developers","text":"","code":"get_filter_state(datasets) ## { ##   \"slices\": [ ##     { ##       \"dataname\"       : \"iris\", ##       \"varname\"        : \"Species\", ##       \"id\"             : \"iris Species\", ##       \"choices\"        : [\"setosa\", \"versicolor\", \"virgin... ##       \"selected\"       : [\"virginica\"], ##       \"keep_na\"        : false, ##       \"fixed\"          : false, ##       \"anchored\"       : false, ##       \"multiple\"       : true ##     }, ##     { ##       \"dataname\"       : \"mtcars\", ##       \"id\"             : \"4 cyl\", ##       \"expr\"           : \"cyl == 4\", ##       \"fixed\"          : true, ##       \"anchored\"       : false, ##       \"title\"          : \"4 Cylinders\" ##     }, ##     { ##       \"dataname\"       : \"mtcars\", ##       \"varname\"        : \"mpg\", ##       \"id\"             : \"mtcars mpg\", ##       \"choices\"        : [10.4, 34], ##       \"selected\"       : [22, 25], ##       \"keep_na\"        : false, ##       \"keep_inf\"       : false, ##       \"fixed\"          : false, ##       \"anchored\"       : false, ##       \"multiple\"       : true ##     } ##   ], ##   \"attributes\": { ##     \"exclude_varnames\" : { ##       \"mtcars\"         : \"cyl\" ##     }, ##     \"include_varnames\" : { ##       \"iris\"           : [\"Species\", \"Sepal.Length\"] ##     }, ##     \"count_type\"       : \"none\", ##     \"allow_add\"        : true ##   } ## }"},{"path":"https://insightsengineering.github.io/teal.slice/articles/filter-panel-for-developers.html","id":"removing-filter-states","dir":"Articles","previous_headings":"Filter Panel API > Getting and setting filter states","what":"4. Removing filter states","title":"Filter Panel for Developers","text":"","code":"remove_filter_state(   datasets = datasets,   filter = teal_slices(     teal_slice(dataname = \"iris\", varname = \"Species\")   ) )"},{"path":"https://insightsengineering.github.io/teal.slice/articles/filter-panel-for-developers.html","id":"clearing-the-filter-state","dir":"Articles","previous_headings":"Filter Panel API > Getting and setting filter states","what":"5. Clearing the filter state","title":"Filter Panel for Developers","text":"","code":"clear_filter_states(datasets)"},{"path":"https://insightsengineering.github.io/teal.slice/articles/filter-panel-for-developers.html","id":"controlling-settings-of-the-filter-panel","dir":"Articles","previous_headings":"Filter Panel API","what":"Controlling settings of the filter panel","title":"Filter Panel for Developers","text":"addition controlling individual filter states set_filter_state, one can also manage general behaviors whole filter panel. can done arguments teal_slices function: include_varnames defines columns used data sets allowed filtered . following example two columns iris two columns mtcars able filters set. exclude_varnames defines columns used data sets allowed filtered . following example variables except four available choose . count_type defines observation counts displayed filter cards allow_add determines whether ‚ÄúAdd Filter Variables‚Äù module displayed allow user add new filters.","code":"set_filter_state(   datasets,   teal_slices(     include_varnames = list(       iris = c(\"Species\", \"Sepal.Length\"),       mtcard = c(\"cyl\", \"mpg\")     )   ) ) set_filter_state(   datasets,   teal_slices(     exclude_varnames = list(       iris = c(\"Species\", \"Sepal.Length\"),       mtcard = c(\"cyl\", \"mpg\")     )   ) )"},{"path":"https://insightsengineering.github.io/teal.slice/articles/filter-panel-for-developers.html","id":"filter-panel-as-a-module","dir":"Articles","previous_headings":"","what":"Filter panel as a module","title":"Filter Panel for Developers","text":"instructions herein can utilized build shiny app.","code":"library(shiny)  # initializing FilteredData datasets <- init_filtered_data(list(iris = iris, mtcars = mtcars))  # setting initial filters set_filter_state(   datasets = datasets,   filter = teal_slices(     teal_slice(dataname = \"iris\", varname = \"Species\", selected = \"virginica\", keep_na = FALSE),     teal_slice(dataname = \"mtcars\", id = \"4 cyl\", title = \"4 Cylinders\", expr = \"cyl == 4\"),     teal_slice(dataname = \"mtcars\", varname = \"mpg\", selected = c(20.0, 25.0), keep_na = FALSE, keep_inf = FALSE),     include_varnames = list(iris = c(\"Species\", \"Sepal.Length\")),     exclude_varnames = list(mtcars = \"cyl\"),     count_type = \"all\",     allow_add = TRUE   ) )  ui <- fluidPage(   shinyjs::useShinyjs(),   fluidRow(     column(       width = 9,       id = \"teal_primary_col\",       tagList(         actionButton(\"add_species_filter\", \"Set iris$Species filter\"),         actionButton(\"remove_species_filter\", \"Remove iris$Species filter\"),         actionButton(\"remove_all_filters\", \"Remove all filters\"),         verbatimTextOutput(\"rcode\"),         verbatimTextOutput(\"filter_state\")       )     ),     column(       width = 3,       id = \"teal_secondary_col\",       datasets$ui_filter_panel(\"filter_panel\")     )   ) )  server <- function(input, output, session) {   # calling filter panel module   datasets$srv_filter_panel(\"filter_panel\")    # displaying actual filter states   output$filter_state <- renderPrint(print(get_filter_state(datasets), trim = FALSE))    # displaying reproducible filter call   output$rcode <- renderText(     paste(       sapply(c(\"iris\", \"mtcars\"), datasets$get_call),       collapse = \"\\n\"     )   )    # programmatic interaction with FilteredData   observeEvent(input$add_species_filter, {     set_filter_state(       datasets,       teal_slices(         teal_slice(dataname = \"iris\", varname = \"Species\", selected = c(\"setosa\", \"versicolor\"))       )     )   })    # programmatic removal of the FilterState   observeEvent(input$remove_species_filter, {     remove_filter_state(       datasets,       teal_slices(         teal_slice(dataname = \"iris\", varname = \"Species\")       )     )   })   observeEvent(input$remove_all_filters, clear_filter_states(datasets)) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice-classes.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"teal.slice Classes","text":"teal.slice package composed multiple classes, whose primary purpose provide shiny module managing displaying filters. top class structure FilteredData. modules app can interact FilteredData make filter calls obtain filtered data.  FilteredData object contains one FilteredDataset objects. FilteredData manages entire filter panel, FilteredDataset responsible filtering single data set. FilteredDataset contains one FilterStates objects, corresponding one data structure like data.frame, SummarizedExperiment, MultiAssayExperiment. FilterStates holds collection FilterState objects, representing single filter condition applied one variable. FilterStates can also hold FilterStateExpr objects. variation FilterStates focuses filter expression regardless underlying data. expression can refer one several variables. FilteredData, FilteredDataset, FilterStates, FilterState/FilterStateExpr R6 classes objects classes form hierarchy inheritance . FilterState/FilterStateExpr object contains one teal_slice object. teal_slice stores information necessary define filter. R6 class, innate methods behaviors produce shiny modules. sole purpose store filter information.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice-classes.html","id":"initialization","dir":"Articles","previous_headings":"","what":"Initialization","title":"teal.slice Classes","text":"part teal workflow, FilteredData, FilteredDataset, FilterStates created instantly data loaded remain unchanged. One FilteredData object initialized list objects (e.g. data.frame, MAE). FilteredDataset initialized data set. One FilterStates initialized, depending type data set. hand, FilterState initialized time new filter added. values FilterState can changed, can also removed added . key mechanism new filter panel FilterStates class. One can think FilterStates equivalent single, possibly compound, subset call made one data structure. FilterState represents logical predicate one vector, e.g SEX == \"F\", FilterStates compose predicates member FilterState objects call subsetting function, e.g.¬†data <- subset(data, SEX == \"F\" & RACE == \"CAUCASIAN\"). case data.frame, single dplyr::filter call sufficient subset whole data set. MultiAssayExperiment hand contains patient data @colData slot multiple experiments @ExperimentList slot, objects filtered separate subsetting calls. Therefore, subclasses FilterStates exist handle different kinds data structures use different subsetting functions.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice-classes.html","id":"class-description","dir":"Articles","previous_headings":"","what":"Class Description","title":"teal.slice Classes","text":"section provides detailed description classes make filter panel structure.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice-classes.html","id":"filtereddata","dir":"Articles","previous_headings":"Class Description","what":"FilteredData","title":"teal.slice Classes","text":"FilteredData object responsible managing filter panel. sits top class structure handles shiny modules subclasses. FilteredData provides several API methods can used access reproducible subsetting calls resulting filtered data. also allows external modules manage filter states functions get_filter_state, set_filter_state, remove_filter_state, clear_filter_state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice-classes.html","id":"filtereddataset","dir":"Articles","previous_headings":"Class Description","what":"FilteredDataset","title":"teal.slice Classes","text":"FilteredDataset class keeps unfiltered data returns filtered data based filter call derived contained FilterStates. FilteredDataset class objects initialized FilteredData, one data set. FilteredDataset contains single data object one--many FilterStates depending type object. FilteredDataset stores data set attributes, joins keys data sets, also combines executes subsetting calls taken FilterStates. following FilteredDataset child classes currently implemented: DataframeFilteredDataset data.frame. MAEFilteredDataset MultiAssayExperiment. DefaultFilteredDataset remaining (unsupported) classes - subclass different others provides filtering, purpose hold return object filtering supported.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice-classes.html","id":"filterstates","dir":"Articles","previous_headings":"Class Description","what":"FilterStates","title":"teal.slice Classes","text":"app starts, FilteredDataset initializes one FilterStates objects, one component underlying data set. Every FilterStates object responsible making one subset call. example, MAEFilteredDataset create one FilterStates colData one FilterStates experiments. Every FilterStates return separate subsetting call, used subset entire MultiAssayExperiment. following FilteredStates child classes currently implemented: DFFilterStates data.frame; uses dplyr::filter filter columns. MAEFilterStates forMultiAssayExperiment; uses MultiAssayExperiment::subsetByColData filter columns DataFrame @colData slot. SEFilterStates SummarizedExperiment; uses subset method SummarizedExperiment filter columns DataFrames @colData @rowData slots. MatrixFilterStates matrix; uses [ operator filter columns. FilterStates serves two shiny-related purposes: ui/srv_add allows adding FilterState selected variable. variables included module filterable column names provided data set. Selecting variable adds FilterState reactiveVal stored private$state_list private field. subtype created FilterState automatically determined based class selected column. ui/srv_active displays cards currently existing FilterState objects. Every FilterState object serves remove button FilterStates reacts clicking button removing respective FilterState private$state_list destroying observers. ui/srv_active also contains remove button removes FilterState objects within FilterStates.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice-classes.html","id":"filterstate","dir":"Articles","previous_headings":"Class Description","what":"FilterState","title":"teal.slice Classes","text":"class controls single filter card returns condition call depends selection state. FilterState initialized time FilterStates adds new filter. Different classes data require different handling choices several FilterState subclasses exist presents different user interface generates different subsetting call. FilterState created follows: FilterStates creates teal_slice dataname based parent data set varname based selected variable teal_slice wrapped teal_slices passed FilterStates$set_filter_state FilterStates$set_filter_state_impl called FilterStates$set_filter_state_impl calls init_filter_state, passing appropriate variable x init_filter_states generic function dispatches x, teal_slice, arguments respective child class constructor: LogicalFilterState logical variables. Presents checkbox group. Call example: !variable. RangeFilterState numeric variables. Presents interactive plot well two numeric inputs. Selection always two values represent inclusive interval limits. Call example: variable >= selection[1] & variable <= selection[2] DateFilterState Date variables. Presents two date inputs. Selection two values determine inclusive interval limits. Call example: variable >= selection[1] & variable <= selection[2]. DatetimeFilterState POSIXct POSIXlt variables. Similar DateFilterState. ChoicesFilterState character factor values. Additionally, classes passed ChoicesFilterState number unique values lower getOption(\"teal.threshold_slider_vs_checkboxgroup\"). Presents either checkbox group drop-menu. Depending settings, allows either one number values selected. Call examples: variable == selection, variable %% selection. EmptyFilterState variables contain missing values. return calls. child classes handle missing values, RangedFilterState also handles infinite values. FilterState constructor also takes extract_type argument, determines call constructed extract_type can unspecified, \"matrix\" \"list\" value corresponds type variable prefix returned condition call. extract_type \"list\", variable condition call <dataname>$<varname>, \"matrix\" <dataname>[, \"<varname>\"].","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice-classes.html","id":"filterstateexpr","dir":"Articles","previous_headings":"Class Description","what":"FilterStateExpr","title":"teal.slice Classes","text":"Similarly FilterState, FilterStateExpr controls single filter card returns logical expression. However, FilterState generates call based selection state, FilterStateExpr call must specified manually must valid R expression.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice-classes.html","id":"teal_slice","dir":"Articles","previous_headings":"Class Description","what":"teal_slice","title":"teal.slice Classes","text":"teal_slice simple object storing filter information. can thought quantum information. teal_slice object passed directly FilterState$initialize stored inside FilterState keep current state filter. Technically, values used generate call teal_slice. FilterState can described wrapper around teal_slice provides additional methods handle filter state. also contains actual data (single column). teal_slice R6 object encode behaviors, implemented around reactiveValues object allow shared state advanced teal applications. See ?teal_slice detailed explanation.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice-classes.html","id":"overview","dir":"Articles","previous_headings":"Making a reproducible filter call","what":"Overview","title":"teal.slice Classes","text":"diagram presents filter panel classes responsibilities composing filter calls. Code generated nested execution get_call methods. FilteredData$get_call calls FilteredDataset$get_call, calls FilterStates$get_call turn calls FilterState$get_call. FilterState$get_call() returns single subsetting expression (logical predicate). FilterStates$get_call() returns single complete subsetting call extracting expressions FilterState objects combining & operator. FilteredDataset$get_call() returns list calls extracted FilterStates objects. FilteredData$get_call(<dataname>) returns list calls extracted specified FilteredDataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice-classes.html","id":"example","dir":"Articles","previous_headings":"Making a reproducible filter call","what":"Example","title":"teal.slice Classes","text":"Calling datasets$get_call(<dataname>) teal modules executes chain calls filter panel classes. Consider following scenario: FilteredData contains three data sets: ADSL, ADTTE, MAE, stored FiteredDataset object ADSL data.frame can filtered single dplyr::filter call. data set stored DataframeFilteredDataset, holds single FilterStates object. FilterStates constructs dplyr::filter call based FilterState objects present private$state_list. FilterStates$set_filter_state adds new teal_slice, FilterState created added private$state_list FilterStates. FilterStates gathers logical expressions FilterState objects composes dplyr::filter(ADSL, ...) call. Two new filters added: SEX AGE. causes initialization appropriate FilterState subclasses: ChoiceFilterState RangeFilterState. FilterState produces subsetting expression: SEX == \"F\" AGE >= 20 & AGE <= 60. expressions combined & passed dplyr::filter, producing ADSL <- dplyr::filter(ADSL, SEX == \"F\" & AGE >= 20 & AGE <= 60). DataframeFilteredDataset puts call list returns FilteredData. ADTTE also data.frame FilteredDataset stores works much one ADSL. one difference dplyr::filter call ADTTE followed dplyr::inner_join call merge filtering result parent data set (ADSL) key columns remain consistent. Note done join_keys specified - otherwise ADTTE treated separate data set filtered independently. MAE data set MultiAssayExperiment, contains multiple sub-objects can filtered . One ADSL-like patient data, stored DataFrame MAE@colData, others experiments, typically SummarizedExperiment objects, stored MAE@ExperimentList, can extracted using MAE[[\"experiment name\"]]. Therefore, MAEFilteredDataset multiple FilterStates objects: one subject data one experiment. MAEFilterStates object initialized subject data object MultiAssayExperiment::subsetByColData function applied. MultiAssayExperiment::subsetByColData two arguments: x (data) y (conditions). Since filter expressions passed one argument, MAEFilterStates one state_list, just like DFFilterStates. Adding new filters triggers actions described (4). SummarizedExperiment complicated observations can filtered based rowData colData slots, contain DataFrames. Subsetting done dedicated S4 subset method, takes two key arguments: subset takes logical expressions applied rowData, select takes logical expressions applied colData. teal_slice objects specify filters SummarizedExperiment must contain arg element, either \"subset\" \"select\", reflect slot experiment refer . SEFilterStates gathers logical expressions member FilterState objects, groups arg element, builds call subset two combined logical expressions passed subset select arguments.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice-classes.html","id":"filter-panel-modules","dir":"Articles","previous_headings":"","what":"Filter panel modules","title":"teal.slice Classes","text":"FilteredData object uses filter_panel_ui filter_panel_srv methods put filter panel can used application. teal applications placed right-hand side. filter panel module return anything. Data, subsetting calls, filter states accessible specific public methods: get_data, get_call, get_filter_state, respectively. Typically, filter panel consists three modules: ui/srv_overview displays observation counts filtered vs unfiltered data ui/srv_active displays active filter cards, created FilterState objects ui/srv_add allows adding filters FilteredData handle data sets directly may different types, rather, calls respective methods lower-level classes. new filter added using ‚ÄúAdd Filter Variable‚Äù module FilterStates, new FilterState object initialized added private$state_list. FilterStates$srv_active observes private$state_list (reactiveVal) state list changes (filter added removed), calls FilterState$server uses renderUI display FilterState$ui.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to teal.slice","text":"teal.slice package provides filter panel shiny applications. teal.slice creates filter panel module allows interactive filtering data stored data.frame MultiAssayExperiment objects. also displays filtered unfiltered observation counts.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice.html","id":"information-for-users-of-the-filter-panel-in-applications","dir":"Articles","previous_headings":"","what":"Information for users of the filter panel in applications","title":"Introduction to teal.slice","text":"filter panel contains three panels: top panel displays number records (observations) remain filters applied. relational data (join_keys specified), number unique subjects remaining filtered data set also shown. middle panel displays current active filters allows user change state. bottom panel allows add new filters columns data sets app. Note multiple filters data set combined operator possible apply hierarchical filters. example filter panel use shown image . iris data set 50 versicolor records removed, leaving 100 observations. mtcars data set filtered records (gear = 3 gear = 5) (disp [205, 295]).  Depending data type selected variable, different filters shown, example date pickers, range sliders, checkbox inputs. relational data (join_keys specified), filters specified parent data set (.e.¬†ADSL) apply child data sets, whereas filters child data set can specified columns found data set‚Äôs parent. general relational data filter panel treats data set independently, irrespective relationships data sets. filter panel also supports filtering MultiAssayExperiment objects, filters can applied subject data, stored colData slot accessed colData(MAE), well experiments, stored ExperimentList slot accessed MAE[[\"experiment name\"]].","code":""},{"path":"https://insightsengineering.github.io/teal.slice/articles/teal-slice.html","id":"information-for-r-developers-using-the-filter-panel","dir":"Articles","previous_headings":"","what":"Information for R developers using the filter panel","title":"Introduction to teal.slice","text":"example app shows embed filter panel inside shiny application. filter panel entirely contained within FilteredData object. FilteredData R6 class stores data sets, tracks filter states, constructs applies filter calls, can output filtered data. also contains shiny modules (UI server functions) make panel . teal application FilteredData object (datasets) created automatically teal‚Äôs init function filter panel components automatically placed right-hand side page. facilitate communication FilteredData, provide filter panel API. example uses set_filter_state function set state state specified teal_slices teal_slice functions. details please see Filter panel developers vignette.","code":"library(shiny) library(teal.slice)  # create a FilteredData object datasets <- init_filtered_data(list(iris = iris, mtcars = mtcars))  # setting initial state set_filter_state(   datasets = datasets,   filter = teal_slices(     teal_slice(dataname = \"iris\", varname = \"Species\", selected = \"virginica\", keep_na = FALSE),     teal_slice(dataname = \"mtcars\", id = \"4 cyl\", title = \"4 Cylinders\", expr = \"cyl == 4\"),     teal_slice(dataname = \"mtcars\", varname = \"mpg\", selected = c(20.0, 25.0), keep_na = FALSE, keep_inf = FALSE),     include_varnames = list(iris = c(\"Species\", \"Sepal.Length\")),     exclude_varnames = list(mtcars = \"cyl\"),     count_type = \"all\",     allow_add = TRUE   ) )  ui <- fluidPage(   fluidRow(     column(       width = 9,       tabsetPanel(         tabPanel(title = \"iris\", dataTableOutput(\"iris_table\")),         tabPanel(title = \"mtcars\", dataTableOutput(\"mtcars_table\"))       )     ),     # ui for the filter panel     column(width = 3, datasets$ui_filter_panel(\"filter_panel\"))   ) )  server <- function(input, output, session) {   # this is the shiny server function for the filter panel and the datasets   # object can now be used inside the application   datasets$srv_filter_panel(\"filter_panel\")    # get the filtered datasets and put them inside reactives for analysis   iris_filtered_data <- reactive(datasets$get_data(dataname = \"iris\", filtered = TRUE))   mtcars_filtered_data <- reactive(datasets$get_data(dataname = \"mtcars\", filtered = TRUE))    output$iris_table <- renderDataTable(iris_filtered_data())   output$mtcars_table <- renderDataTable(mtcars_filtered_data()) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.slice/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dawid Kaledkowski. Author, maintainer. Pawel Rucki. Author. Aleksander Chlebowski. Author. Andre Verissimo. Author. Kartikeya Kirar. Author. Marcin Kosinski. Author. Chendi Liao. Reviewer. Dony Unardi. Reviewer. Andrew Bates. Author. Mahmoud Hallal. Author. Nikolas Burkoff. Author. Maciej Nasinski. Author. Konrad Pagacz. Author. Junlue Zhao. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaledkowski D, Rucki P, Chlebowski , Verissimo , Kirar K, Kosinski M, Bates , Hallal M, Burkoff N, Nasinski M, Pagacz K, Zhao J (2025). teal.slice: Filter Module 'teal' Applications. R package version 0.6.0.9000, https://github.com/insightsengineering/teal.slice/, https://insightsengineering.github.io/teal.slice/.","code":"@Manual{,   title = {teal.slice: Filter Module for 'teal' Applications},   author = {Dawid Kaledkowski and Pawel Rucki and Aleksander Chlebowski and Andre Verissimo and Kartikeya Kirar and Marcin Kosinski and Andrew Bates and Mahmoud Hallal and Nikolas Burkoff and Maciej Nasinski and Konrad Pagacz and Junlue Zhao},   year = {2025},   note = {R package version 0.6.0.9000,     https://github.com/insightsengineering/teal.slice/},   url = {https://insightsengineering.github.io/teal.slice/}, }"},{"path":"https://insightsengineering.github.io/teal.slice/index.html","id":"tealslice","dir":"","previous_headings":"","what":"Filter Module for teal Applications","title":"Filter Module for teal Applications","text":"teal.slice R library used development teal shiny modules. provides: class accepting array data.frames input, supporting basic dplyr operations data, method returning code needed slice data desired way, set shiny modules helping acquire desired slice data using shiny GUI.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Filter Module for teal Applications","text":"Alternatively, might want use development version.","code":"install.packages('teal.slice') # install.packages(\"pak\") pak::pak(\"insightsengineering/teal.slice\")"},{"path":"https://insightsengineering.github.io/teal.slice/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Filter Module for teal Applications","text":"understand use package, please refer Introduction teal.slice article, provides multiple examples code implementation.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Filter Module for teal Applications","text":"encounter bug feature request, please file issue. questions, discussions, updates, use teal channel pharmaverse slack workspace.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterState object for categorical data ‚Äî ChoicesFilterState","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"Manages choosing elements set.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"teal.slice::FilterState -> ChoicesFilterState","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"teal.slice::FilterState$finalize() teal.slice::FilterState$format() teal.slice::FilterState$get_state() teal.slice::FilterState$print() teal.slice::FilterState$server() teal.slice::FilterState$set_state() teal.slice::FilterState$ui()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"ChoicesFilterState$new() ChoicesFilterState$get_call() ChoicesFilterState$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"Initialize FilterState object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"","code":"ChoicesFilterState$new(   x,   x_reactive = reactive(NULL),   slice,   extract_type = character(0) )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"x (character) variable filtered. x_reactive (reactive) returning vector type x. used update counts following change values filtered dataset. set reactive(NULL) counts based filtered dataset shown. slice (teal_slice) specification filter state. teal_slice stored object set_state directly manipulates values within teal_slice. get_state returns teal_slice object can reused places. Note teal_slice reactiveValues, means reference semantics, .e. changes made object automatically reflected places refer teal_slice. extract_type (character) specifying whether condition calls prefixed dataname. Possible values: character(0) (default) varname condition call prefixed \"list\" varname condition call returned <dataname>$<varname> \"matrix\" varname condition call returned <dataname>[, <varname>]","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"Object class ChoicesFilterState, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"method-get-call-","dir":"Reference","previous_headings":"","what":"Method get_call()","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"Returns reproducible condition call current selection. class returned call looks like <varname> %% c(<values selected>) optional .na(<varname>).","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"","code":"ChoicesFilterState$get_call(dataname)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"dataname (character(1)) name data set; defaults private$get_dataname()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"call NULL","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"","code":"ChoicesFilterState$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/ChoicesFilterState.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FilterState object for categorical data ‚Äî ChoicesFilterState","text":"","code":"# use non-exported function from teal.slice include_css_files <- getFromNamespace(\"include_css_files\", \"teal.slice\") include_js_files <- getFromNamespace(\"include_js_files\", \"teal.slice\") ChoicesFilterState <- getFromNamespace(\"ChoicesFilterState\", \"teal.slice\")  library(shiny)  filter_state <- ChoicesFilterState$new(   x = c(LETTERS, NA),   slice = teal_slice(varname = \"var\", dataname = \"data\") ) isolate(filter_state$get_call()) #> NULL filter_state$set_state(   teal_slice(     dataname = \"data\",     varname = \"var\",     selected = \"A\",     keep_na = TRUE   ) ) isolate(filter_state$get_call()) #> is.na(var) | var == \"A\"  # working filter in an app library(shinyjs) #>  #> Attaching package: ‚Äòshinyjs‚Äô #> The following object is masked from ‚Äòpackage:shiny‚Äô: #>  #>     runExample #> The following objects are masked from ‚Äòpackage:methods‚Äô: #>  #>     removeClass, show  data_choices <- c(sample(letters[1:4], 100, replace = TRUE), NA) attr(data_choices, \"label\") <- \"lowercase letters\" fs <- ChoicesFilterState$new(   x = data_choices,   slice = teal_slice(     dataname = \"data\", varname = \"variable\", selected = c(\"a\", \"c\"), keep_na = TRUE   ) )  ui <- fluidPage(   useShinyjs(),   include_css_files(pattern = \"filter-panel\"),   include_js_files(pattern = \"count-bar-labels\"),   column(4, tags$div(     tags$h4(\"ChoicesFilterState\"),     fs$ui(\"fs\")   )),   column(4, tags$div(     tags$h4(\"Condition (i.e. call)\"), # display the condition call generated by this FilterState     textOutput(\"condition_choices\"), tags$br(),     tags$h4(\"Unformatted state\"), # display raw filter state     textOutput(\"unformatted_choices\"), tags$br(),     tags$h4(\"Formatted state\"), # display human readable filter state     textOutput(\"formatted_choices\"), tags$br()   )),   column(4, tags$div(     tags$h4(\"Programmatic filter control\"),     actionButton(\"button1_choices\", \"set drop NA\", width = \"100%\"), tags$br(),     actionButton(\"button2_choices\", \"set keep NA\", width = \"100%\"), tags$br(),     actionButton(\"button3_choices\", \"set selection: a, b\", width = \"100%\"), tags$br(),     actionButton(\"button4_choices\", \"deselect all\", width = \"100%\"), tags$br(),     actionButton(\"button0_choices\", \"set initial state\", width = \"100%\"), tags$br()   )) )  server <- function(input, output, session) {   fs$server(\"fs\")   output$condition_choices <- renderPrint(fs$get_call())   output$formatted_choices <- renderText(fs$format())   output$unformatted_choices <- renderPrint(fs$get_state())   # modify filter state programmatically   observeEvent(     input$button1_choices,     fs$set_state(       teal_slice(dataname = \"data\", varname = \"variable\", keep_na = FALSE)     )   )   observeEvent(     input$button2_choices,     fs$set_state(       teal_slice(dataname = \"data\", varname = \"variable\", keep_na = TRUE)     )   )   observeEvent(     input$button3_choices,     fs$set_state(       teal_slice(dataname = \"data\", varname = \"variable\", selected = c(\"a\", \"b\"))     )   )   observeEvent(     input$button4_choices,     fs$set_state(       teal_slice(dataname = \"data\", varname = \"variable\", selected = character(0), keep_na = TRUE)     )   )   observeEvent(     input$button0_choices,     fs$set_state(       teal_slice(dataname = \"data\", varname = \"variable\", selected = c(\"a\", \"c\"), keep_na = TRUE)     )   ) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DFFilterStates.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterStates subclass for data frames ‚Äî DFFilterStates","title":"FilterStates subclass for data frames ‚Äî DFFilterStates","text":"Handles filter states data.frame.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DFFilterStates.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FilterStates subclass for data frames ‚Äî DFFilterStates","text":"teal.slice::FilterStates -> DFFilterStates","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DFFilterStates.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FilterStates subclass for data frames ‚Äî DFFilterStates","text":"teal.slice::FilterStates$clear_filter_states() teal.slice::FilterStates$finalize() teal.slice::FilterStates$format() teal.slice::FilterStates$get_call() teal.slice::FilterStates$get_filter_state() teal.slice::FilterStates$print() teal.slice::FilterStates$remove_filter_state() teal.slice::FilterStates$set_filter_state() teal.slice::FilterStates$srv_active() teal.slice::FilterStates$srv_add() teal.slice::FilterStates$ui_active() teal.slice::FilterStates$ui_add()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DFFilterStates.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterStates subclass for data frames ‚Äî DFFilterStates","text":"DFFilterStates$new() DFFilterStates$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DFFilterStates.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilterStates subclass for data frames ‚Äî DFFilterStates","text":"Initializes DFFilterStates object setting dataname initializing state_list (shiny::reactiveVal). class contains single state_list specified name, means calling subset function associated class (dplyr::filter), list conditions passed unnamed arguments (...).","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DFFilterStates.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates subclass for data frames ‚Äî DFFilterStates","text":"","code":"DFFilterStates$new(   data,   data_reactive = function(sid = \"\") NULL,   dataname,   datalabel = NULL,   keys = character(0) )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DFFilterStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates subclass for data frames ‚Äî DFFilterStates","text":"data (data.frame) R object dplyr::filter function applied . data_reactive (function(sid)) return data.frame object NULL. object needed FilterState counts updated change filters. function returns NULL filtered counts shown. Function sid argument character. dataname (character) name data used subset expression. Passed function argument attached FilterStates. datalabel (character(1)) optional text label. keys (character) key column names.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DFFilterStates.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterStates subclass for data frames ‚Äî DFFilterStates","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DFFilterStates.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates subclass for data frames ‚Äî DFFilterStates","text":"","code":"DFFilterStates$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DFFilterStates.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates subclass for data frames ‚Äî DFFilterStates","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DFFilterStates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FilterStates subclass for data frames ‚Äî DFFilterStates","text":"","code":"# use non-exported function from teal.slice include_css_files <- getFromNamespace(\"include_css_files\", \"teal.slice\") include_js_files <- getFromNamespace(\"include_js_files\", \"teal.slice\") init_filter_states <- getFromNamespace(\"init_filter_states\", \"teal.slice\")  library(shiny) library(shinyjs)  # create data frame to filter data_df <- data.frame(   NUM1 = 1:100,   NUM2 = round(runif(100, min = 20, max = 23)),   CHAR1 = sample(LETTERS[1:6], size = 100, replace = TRUE),   CHAR2 = sample(c(\"M\", \"F\"), size = 100, replace = TRUE),   DATE = seq(as.Date(\"2020-01-01\"), by = 1, length.out = 100),   DATETIME = as.POSIXct(seq(as.Date(\"2020-01-01\"), by = 1, length.out = 100)) ) data_na <- data.frame(   NUM1 = NA,   NUM2 = NA,   CHAR1 = NA,   CHAR2 = NA,   DATE = NA,   DATETIME = NA ) data_df <- rbind(data_df, data_na)  # initiate `FilterStates` object filter_states_df <- init_filter_states(   data = data_df,   dataname = \"dataset\",   datalabel = (\"label\") )  ui <- fluidPage(   useShinyjs(),   include_css_files(pattern = \"filter-panel\"),   include_js_files(pattern = \"count-bar-labels\"),   column(4, tags$div(     tags$h4(\"Active filters\"),     filter_states_df$ui_active(\"fsdf\")   )),   column(4, tags$div(     tags$h4(\"Manual filter control\"),     filter_states_df$ui_add(\"add_filters\"), tags$br(),     tags$h4(\"Condition (i.e. call)\"), # display the subset expression generated by this FilterStates     textOutput(\"call_df\"), tags$br(),     tags$h4(\"Formatted state\"), # display human readable filter state     textOutput(\"formatted_df\"), tags$br()   )),   column(4, tags$div(     tags$h4(\"Programmatic filter control\"),     actionButton(\"button1_df\", \"set NUM1 < 30\", width = \"100%\"), tags$br(),     actionButton(\"button2_df\", \"set NUM2 %in% c(20, 21)\", width = \"100%\"), tags$br(),     actionButton(\"button3_df\", \"set CHAR1 %in% c(\\\"B\\\", \\\"C\\\", \\\"D\\\")\", width = \"100%\"), tags$br(),     actionButton(\"button4_df\", \"set CHAR2 == \\\"F\\\"\", width = \"100%\"), tags$br(),     actionButton(\"button5_df\", \"set DATE <= 2020-02-02\", width = \"100%\"), tags$br(),     actionButton(\"button6_df\", \"set DATETIME <= 2020-02-02\", width = \"100%\"), tags$br(),     tags$hr(),     actionButton(\"button7_df\", \"remove NUM1\", width = \"100%\"), tags$br(),     actionButton(\"button8_df\", \"remove NUM2\", width = \"100%\"), tags$br(),     actionButton(\"button9_df\", \"remove CHAR1\", width = \"100%\"), tags$br(),     actionButton(\"button10_df\", \"remove CHAR2\", width = \"100%\"), tags$br(),     actionButton(\"button11_df\", \"remove DATE\", width = \"100%\"), tags$br(),     actionButton(\"button12_df\", \"remove DATETIME\", width = \"100%\"), tags$br(),     tags$hr(),     actionButton(\"button0_df\", \"clear all filters\", width = \"100%\"), tags$br()   )) )  server <- function(input, output, session) {   filter_states_df$srv_add(\"add_filters\")   filter_states_df$srv_active(\"fsdf\")    output$call_df <- renderPrint(filter_states_df$get_call())   output$formatted_df <- renderText(filter_states_df$format())    observeEvent(input$button1_df, {     filter_state <- teal_slices(teal_slice(\"dataset\", \"NUM1\", selected = c(0, 30)))     filter_states_df$set_filter_state(state = filter_state)   })   observeEvent(input$button2_df, {     filter_state <- teal_slices(teal_slice(\"dataset\", \"NUM2\", selected = c(20, 21)))     filter_states_df$set_filter_state(state = filter_state)   })   observeEvent(input$button3_df, {     filter_state <- teal_slices(teal_slice(\"dataset\", \"CHAR1\", selected = c(\"B\", \"C\", \"D\")))     filter_states_df$set_filter_state(state = filter_state)   })   observeEvent(input$button4_df, {     filter_state <- teal_slices(teal_slice(\"dataset\", \"CHAR2\", selected = c(\"F\")))     filter_states_df$set_filter_state(state = filter_state)   })   observeEvent(input$button5_df, {     filter_state <- teal_slices(       teal_slice(\"dataset\", \"DATE\", selected = c(\"2020-01-01\", \"2020-02-02\"))     )     filter_states_df$set_filter_state(state = filter_state)   })   observeEvent(input$button6_df, {     filter_state <- teal_slices(       teal_slice(\"dataset\", \"DATETIME\", selected = as.POSIXct(c(\"2020-01-01\", \"2020-02-02\")))     )     filter_states_df$set_filter_state(state = filter_state)   })    observeEvent(input$button7_df, {     filter_state <- teal_slices(teal_slice(\"dataset\", \"NUM1\"))     filter_states_df$remove_filter_state(filter_state)   })   observeEvent(input$button8_df, {     filter_state <- teal_slices(teal_slice(\"dataset\", \"NUM2\"))     filter_states_df$remove_filter_state(filter_state)   })   observeEvent(input$button9_df, {     filter_state <- teal_slices(teal_slice(\"dataset\", \"CHAR1\"))     filter_states_df$remove_filter_state(filter_state)   })   observeEvent(input$button10_df, {     filter_state <- teal_slices(teal_slice(\"dataset\", \"CHAR2\"))     filter_states_df$remove_filter_state(filter_state)   })   observeEvent(input$button11_df, {     filter_state <- teal_slices(       teal_slice(\"dataset\", \"DATE\")     )     filter_states_df$remove_filter_state(filter_state)   })   observeEvent(input$button12_df, {     filter_state <- teal_slices(       teal_slice(\"dataset\", \"DATETIME\", selected = as.POSIXct(c(\"2020-01-01\", \"2020-02-02\")))     )     filter_states_df$remove_filter_state(filter_state)   })    observeEvent(input$button0_df, filter_states_df$clear_filter_states()) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"DataframeFilteredDataset R6 class DataframeFilteredDataset R6 class","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"teal.slice::FilteredDataset -> DataframeFilteredDataset","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"teal.slice::FilteredDataset$clear_filter_states() teal.slice::FilteredDataset$finalize() teal.slice::FilteredDataset$format() teal.slice::FilteredDataset$get_dataname() teal.slice::FilteredDataset$get_dataset() teal.slice::FilteredDataset$get_dataset_label() teal.slice::FilteredDataset$get_filter_state() teal.slice::FilteredDataset$get_keys() teal.slice::FilteredDataset$print() teal.slice::FilteredDataset$srv_active() teal.slice::FilteredDataset$srv_add() teal.slice::FilteredDataset$ui_active()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"DataframeFilteredDataset$new() DataframeFilteredDataset$get_call() DataframeFilteredDataset$set_filter_state() DataframeFilteredDataset$remove_filter_state() DataframeFilteredDataset$ui_add() DataframeFilteredDataset$get_filter_overview() DataframeFilteredDataset$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"Initializes DataframeFilteredDataset object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"","code":"DataframeFilteredDataset$new(   dataset,   dataname,   keys = character(0),   parent_name = character(0),   parent = NULL,   join_keys = character(0),   label = character(0) )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"dataset (data.frame) single data.frame filters rendered. dataname (character(1)) syntactically valid name given dataset. keys (character) optional vector primary key column names. parent_name (character(1)) name parent dataset. parent (reactive) returns filtered data.frame FilteredDataset named parent_name. Passing parent results reactive link causes re-filtering dataset based changes parent. join_keys (character) vector names columns dataset join parent dataset. column names parent match , given names vector. label (character(1)) label describe dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"Object class DataframeFilteredDataset, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"method-get-call-","dir":"Reference","previous_headings":"","what":"Method get_call()","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"Gets subset expression. function returns subset expressions equivalent selected items within filter_states. Configuration expressions constant depends filter_states type order set initialization. class contains single FilterStates contains single state_list FilterState objects apply one argument (...) dplyr::filter call.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"","code":"DataframeFilteredDataset$get_call(sid = \"\")"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"sid (character) specified, method returns code containing conditions calls FilterState objects sid different sid argument.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"Either list length 1 containing filter call, NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"method-set-filter-state-","dir":"Reference","previous_headings":"","what":"Method set_filter_state()","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"Set filter state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"","code":"DataframeFilteredDataset$set_filter_state(state)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"state (teal_slices)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"method-remove-filter-state-","dir":"Reference","previous_headings":"","what":"Method remove_filter_state()","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"Remove one FilterState form FilteredDataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"","code":"DataframeFilteredDataset$remove_filter_state(state)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"state (teal_slices) specifying FilterState objects remove; teal_slices may contain dataname varname, elements ignored","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"method-ui-add-","dir":"Reference","previous_headings":"","what":"Method ui_add()","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"UI module add filter variable dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"","code":"DataframeFilteredDataset$ui_add(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"shiny.tag","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"method-get-filter-overview-","dir":"Reference","previous_headings":"","what":"Method get_filter_overview()","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"Creates row filter overview form dataname -- observations (remaining/total) - data.frame","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"","code":"DataframeFilteredDataset$get_filter_overview()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"data.frame.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"","code":"DataframeFilteredDataset$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DataframeFilteredDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The DataframeFilteredDataset R6 class ‚Äî DataframeFilteredDataset","text":"","code":"# use non-exported function from teal.slice DataframeFilteredDataset <- getFromNamespace(\"DataframeFilteredDataset\", \"teal.slice\")  library(shiny)  ds <- DataframeFilteredDataset$new(iris, \"iris\") ds$set_filter_state(   teal_slices(     teal_slice(dataname = \"iris\", varname = \"Species\", selected = \"virginica\"),     teal_slice(dataname = \"iris\", varname = \"Petal.Length\", selected = c(2.0, 5))   ) ) isolate(ds$get_filter_state()) #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"iris\", #>       \"varname\"        : \"Species\", #>       \"id\"             : \"iris Species\", #>       \"choices\"        : [\"setosa\", \"versicolor\", \"virgin... #>       \"selected\"       : [\"virginica\"], #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     }, #>     { #>       \"dataname\"       : \"iris\", #>       \"varname\"        : \"Petal.Length\", #>       \"id\"             : \"iris Petal.Length\", #>       \"choices\"        : [1, 6.9000000000000004], #>       \"selected\"       : [2, 5], #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     } #>   ], #>   \"attributes\": { #>     \"include_varnames\" : { #>       \"iris\"           : [\"Sepal.Length\", \"Sepal.Width\", ... #>     }, #>     \"count_type\"       : \"none\", #>     \"allow_add\"        : true #>   } #> }  isolate(ds$get_call()) #> $filter #> iris <- dplyr::filter(iris, Species == \"virginica\" & (Petal.Length >=  #>     2 & Petal.Length <= 5)) #>   ## set_filter_state dataset <- DataframeFilteredDataset$new(iris, \"iris\") fs <- teal_slices(   teal_slice(dataname = \"iris\", varname = \"Species\", selected = \"virginica\"),   teal_slice(dataname = \"iris\", varname = \"Petal.Length\", selected = c(2.0, 5)) ) dataset$set_filter_state(state = fs) isolate(dataset$get_filter_state()) #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"iris\", #>       \"varname\"        : \"Species\", #>       \"id\"             : \"iris Species\", #>       \"choices\"        : [\"setosa\", \"versicolor\", \"virgin... #>       \"selected\"       : [\"virginica\"], #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     }, #>     { #>       \"dataname\"       : \"iris\", #>       \"varname\"        : \"Petal.Length\", #>       \"id\"             : \"iris Petal.Length\", #>       \"choices\"        : [1, 6.9000000000000004], #>       \"selected\"       : [2, 5], #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     } #>   ], #>   \"attributes\": { #>     \"include_varnames\" : { #>       \"iris\"           : [\"Sepal.Length\", \"Sepal.Width\", ... #>     }, #>     \"count_type\"       : \"none\", #>     \"allow_add\"        : true #>   } #> }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterState object for Date data ‚Äî DateFilterState","title":"FilterState object for Date data ‚Äî DateFilterState","text":"Manages choosing range Dates.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FilterState object for Date data ‚Äî DateFilterState","text":"teal.slice::FilterState -> DateFilterState","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FilterState object for Date data ‚Äî DateFilterState","text":"teal.slice::FilterState$finalize() teal.slice::FilterState$format() teal.slice::FilterState$get_state() teal.slice::FilterState$print() teal.slice::FilterState$server() teal.slice::FilterState$set_state() teal.slice::FilterState$ui()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterState object for Date data ‚Äî DateFilterState","text":"DateFilterState$new() DateFilterState$get_call() DateFilterState$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilterState object for Date data ‚Äî DateFilterState","text":"Initialize FilterState object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for Date data ‚Äî DateFilterState","text":"","code":"DateFilterState$new(   x,   x_reactive = reactive(NULL),   slice,   extract_type = character(0) )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for Date data ‚Äî DateFilterState","text":"x (Date) variable filtered. x_reactive (reactive) returning vector type x. used update counts following change values filtered dataset. set reactive(NULL) counts based filtered dataset shown. slice (teal_slice) specification filter state. teal_slice stored object set_state directly manipulates values within teal_slice. get_state returns teal_slice object can reused places. Note teal_slice reactiveValues, means reference semantics, .e. changes made object automatically reflected places refer teal_slice. extract_type (character) specifying whether condition calls prefixed dataname. Possible values: character(0) (default) varname condition call prefixed \"list\" varname condition call returned <dataname>$<varname> \"matrix\" varname condition call returned <dataname>[, <varname>]","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState object for Date data ‚Äî DateFilterState","text":"Object class DateFilterState, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"method-get-call-","dir":"Reference","previous_headings":"","what":"Method get_call()","title":"FilterState object for Date data ‚Äî DateFilterState","text":"Returns reproducible condition call current selection. class returned call looks like <varname> >= <min value> & <varname> <= <max value> optional .na(<varname>).","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for Date data ‚Äî DateFilterState","text":"","code":"DateFilterState$get_call(dataname)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for Date data ‚Äî DateFilterState","text":"dataname (character(1)) containing possibly prefixed name data set","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState object for Date data ‚Äî DateFilterState","text":"call NULL","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterState object for Date data ‚Äî DateFilterState","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for Date data ‚Äî DateFilterState","text":"","code":"DateFilterState$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for Date data ‚Äî DateFilterState","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DateFilterState.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FilterState object for Date data ‚Äî DateFilterState","text":"","code":"# use non-exported function from teal.slice include_css_files <- getFromNamespace(\"include_css_files\", \"teal.slice\") include_js_files <- getFromNamespace(\"include_js_files\", \"teal.slice\") DateFilterState <- getFromNamespace(\"DateFilterState\", \"teal.slice\")  library(shiny)  filter_state <- DateFilterState$new(   x = c(Sys.Date() + seq(1:10), NA),   slice = teal_slice(varname = \"x\", dataname = \"data\"),   extract_type = character(0) ) isolate(filter_state$get_call()) #> NULL filter_state$set_state(   teal_slice(     dataname = \"data\",     varname = \"x\",     selected = c(Sys.Date() + 3L, Sys.Date() + 8L),     keep_na = TRUE   ) ) isolate(filter_state$get_call()) #> is.na(x) | x >= as.Date(\"2025-03-14\") & x <= as.Date(\"2025-03-19\")  # working filter in an app library(shinyjs)  dates <- c(Sys.Date() - 100, Sys.Date()) data_date <- c(seq(from = dates[1], to = dates[2], length.out = 100), NA) fs <- DateFilterState$new(   x = data_date,   slice = teal_slice(     dataname = \"data\", varname = \"x\", selected = data_date[c(47, 98)], keep_na = TRUE   ) )  ui <- fluidPage(   useShinyjs(),   include_css_files(pattern = \"filter-panel\"),   include_js_files(pattern = \"count-bar-labels\"),   column(4, tags$div(     tags$h4(\"DateFilterState\"),     fs$ui(\"fs\")   )),   column(4, tags$div(     id = \"outputs\", # div id is needed for toggling the element     tags$h4(\"Condition (i.e. call)\"), # display the condition call generated by this FilterState     textOutput(\"condition_date\"), tags$br(),     tags$h4(\"Unformatted state\"), # display raw filter state     textOutput(\"unformatted_date\"), tags$br(),     tags$h4(\"Formatted state\"), # display human readable filter state     textOutput(\"formatted_date\"), tags$br()   )),   column(4, tags$div(     tags$h4(\"Programmatic filter control\"),     actionButton(\"button1_date\", \"set drop NA\", width = \"100%\"), tags$br(),     actionButton(\"button2_date\", \"set keep NA\", width = \"100%\"), tags$br(),     actionButton(\"button3_date\", \"set a range\", width = \"100%\"), tags$br(),     actionButton(\"button4_date\", \"set full range\", width = \"100%\"), tags$br(),     actionButton(\"button0_date\", \"set initial state\", width = \"100%\"), tags$br()   )) )  server <- function(input, output, session) {   fs$server(\"fs\")   output$condition_date <- renderPrint(fs$get_call())   output$formatted_date <- renderText(fs$format())   output$unformatted_date <- renderPrint(fs$get_state())   # modify filter state programmatically   observeEvent(     input$button1_date,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", keep_na = FALSE))   )   observeEvent(     input$button2_date,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", keep_na = TRUE))   )   observeEvent(     input$button3_date,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", selected = data_date[c(34, 56)]))   )   observeEvent(     input$button4_date,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", selected = dates))   )   observeEvent(     input$button0_date,     fs$set_state(       teal_slice(\"data\", \"variable\", selected = data_date[c(47, 98)], keep_na = TRUE)     )   ) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterState object for date time data ‚Äî DatetimeFilterState","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"Manages choosing range date-times.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"teal.slice::FilterState -> DatetimeFilterState","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"teal.slice::FilterState$finalize() teal.slice::FilterState$format() teal.slice::FilterState$get_state() teal.slice::FilterState$print() teal.slice::FilterState$server() teal.slice::FilterState$set_state() teal.slice::FilterState$ui()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"DatetimeFilterState$new() DatetimeFilterState$get_call() DatetimeFilterState$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"Initialize FilterState object. class extra field, private$timezone, set Sys.timezone() default. However, case using module teal app, one needs timezone app user. App user timezone taken session$userData$timezone set object initialized shiny.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"","code":"DatetimeFilterState$new(   x,   x_reactive = reactive(NULL),   extract_type = character(0),   slice )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"x (POSIXct POSIXlt) variable filtered. x_reactive (reactive) returning vector type x. used update counts following change values filtered dataset. set reactive(NULL) counts based filtered dataset shown. extract_type (character) specifying whether condition calls prefixed dataname. Possible values: character(0) (default) varname condition call prefixed \"list\" varname condition call returned <dataname>$<varname> \"matrix\" varname condition call returned <dataname>[, <varname>] slice (teal_slice) specification filter state. teal_slice stored object set_state directly manipulates values within teal_slice. get_state returns teal_slice object can reused places. Note teal_slice reactiveValues, means reference semantics, .e. changes made object automatically reflected places refer teal_slice.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"Object class DatetimeFilterState, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"method-get-call-","dir":"Reference","previous_headings":"","what":"Method get_call()","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"Returns reproducible condition call current selection. class returned call looks like <varname> >= .POSIXct(<min>) & <varname> <= <max>) optional .na(<varname>).","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"","code":"DatetimeFilterState$get_call(dataname)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"dataname name data set; defaults private$get_dataname()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"call","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"","code":"DatetimeFilterState$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DatetimeFilterState.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FilterState object for date time data ‚Äî DatetimeFilterState","text":"","code":"# use non-exported function from teal.slice include_css_files <- getFromNamespace(\"include_css_files\", \"teal.slice\") include_js_files <- getFromNamespace(\"include_js_files\", \"teal.slice\") DatetimeFilterState <- getFromNamespace(\"DatetimeFilterState\", \"teal.slice\")  library(shiny)  filter_state <- DatetimeFilterState$new(   x = c(Sys.time() + seq(0, by = 3600, length.out = 10), NA),   slice = teal_slice(varname = \"x\", dataname = \"data\"),   extract_type = character(0) ) isolate(filter_state$get_call()) #> is.na(x) | x >= as.POSIXct(\"2025-03-11 04:27:49\", tz = \"Etc/UTC\") &  #>     x < as.POSIXct(\"2025-03-11 13:27:50\", tz = \"Etc/UTC\") filter_state$set_state(   teal_slice(     dataname = \"data\",     varname = \"x\",     selected = c(Sys.time() + 3L, Sys.time() + 8L),     keep_na = TRUE   ) ) isolate(filter_state$get_call()) #> is.na(x) | x >= as.POSIXct(\"2025-03-11 04:27:52.111916\", tz = \"Etc/UTC\") &  #>     x < as.POSIXct(\"2025-03-11 04:27:58.111958\", tz = \"Etc/UTC\")  # working filter in an app library(shinyjs)  datetimes <- as.POSIXct(c(\"2012-01-01 12:00:00\", \"2020-01-01 12:00:00\")) data_datetime <- c(seq(from = datetimes[1], to = datetimes[2], length.out = 100), NA) fs <- DatetimeFilterState$new(   x = data_datetime,   slice = teal_slice(     varname = \"x\", dataname = \"data\", selected = data_datetime[c(47, 98)], keep_na = TRUE   ) )  ui <- fluidPage(   useShinyjs(),   include_css_files(pattern = \"filter-panel\"),   include_js_files(pattern = \"count-bar-labels\"),   column(4, tags$div(     tags$h4(\"DatetimeFilterState\"),     fs$ui(\"fs\")   )),   column(4, tags$div(     id = \"outputs\", # div id is needed for toggling the element     tags$h4(\"Condition (i.e. call)\"), # display the condition call generated by this FilterState     textOutput(\"condition_datetime\"), tags$br(),     tags$h4(\"Unformatted state\"), # display raw filter state     textOutput(\"unformatted_datetime\"), tags$br(),     tags$h4(\"Formatted state\"), # display human readable filter state     textOutput(\"formatted_datetime\"), tags$br()   )),   column(4, tags$div(     tags$h4(\"Programmatic filter control\"),     actionButton(\"button1_datetime\", \"set drop NA\", width = \"100%\"), tags$br(),     actionButton(\"button2_datetime\", \"set keep NA\", width = \"100%\"), tags$br(),     actionButton(\"button3_datetime\", \"set a range\", width = \"100%\"), tags$br(),     actionButton(\"button4_datetime\", \"set full range\", width = \"100%\"), tags$br(),     actionButton(\"button0_datetime\", \"set initial state\", width = \"100%\"), tags$br()   )) )  server <- function(input, output, session) {   fs$server(\"fs\")   output$condition_datetime <- renderPrint(fs$get_call())   output$formatted_datetime <- renderText(fs$format())   output$unformatted_datetime <- renderPrint(fs$get_state())   # modify filter state programmatically   observeEvent(     input$button1_datetime,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", keep_na = FALSE))   )   observeEvent(     input$button2_datetime,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", keep_na = TRUE))   )   observeEvent(     input$button3_datetime,     fs$set_state(       teal_slice(dataname = \"data\", varname = \"x\", selected = data_datetime[c(34, 56)])     )   )   observeEvent(     input$button4_datetime,     fs$set_state(       teal_slice(dataname = \"data\", varname = \"x\", selected = datetimes)     )   )   observeEvent(     input$button0_datetime,     fs$set_state(       teal_slice(         dataname = \"data\", varname = \"x\", selected = data_datetime[c(47, 98)], keep_na = TRUE       )     )   ) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"Stores object inert entity. Filtering supported.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"teal.slice::FilteredDataset -> DefaultFilteredDataset","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"teal.slice::FilteredDataset$finalize() teal.slice::FilteredDataset$get_dataname() teal.slice::FilteredDataset$get_dataset() teal.slice::FilteredDataset$get_dataset_label() teal.slice::FilteredDataset$get_keys() teal.slice::FilteredDataset$print() teal.slice::FilteredDataset$srv_active() teal.slice::FilteredDataset$srv_add()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"DefaultFilteredDataset$new() DefaultFilteredDataset$format() DefaultFilteredDataset$get_call() DefaultFilteredDataset$get_filter_state() DefaultFilteredDataset$set_filter_state() DefaultFilteredDataset$clear_filter_states() DefaultFilteredDataset$get_filter_overview() DefaultFilteredDataset$ui_active() DefaultFilteredDataset$ui_add() DefaultFilteredDataset$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"Initializes DefaultFilteredDataset object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"","code":"DefaultFilteredDataset$new(dataset, dataname, label = character(0))"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"dataset type object; filtered. dataname (character(1)) syntactically valid name given dataset. label (character(1)) label describe dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"Object class DefaultFilteredDataset, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"Returns formatted string representing DefaultFilteredDataset object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"","code":"DefaultFilteredDataset$format(show_all, trim_lines = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"show_all (logical(1)) method consistency, ignored. trim_lines (logical(1)) flag specifying whether trim lines class names long.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"formatted string.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"","code":"DefaultFilteredDataset$get_call(sid)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"sid (character(1)) method consistency, ignored.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"NULL, invisibly.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"","code":"DefaultFilteredDataset$get_filter_state()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"NULL, invisibly.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"","code":"DefaultFilteredDataset$set_filter_state(state)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"state (teal_slices) method consistency, ignored.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"NULL, invisibly.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"","code":"DefaultFilteredDataset$clear_filter_states(force)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"force (logical(1)) method consistency, ignored.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"method-get-filter-overview-","dir":"Reference","previous_headings":"","what":"Method get_filter_overview()","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"Creates row filter overview form dataname - unsupported data class","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"","code":"DefaultFilteredDataset$get_filter_overview()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"data.frame.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"method-ui-active-","dir":"Reference","previous_headings":"","what":"Method ui_active()","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"Overwrites parent method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"","code":"DefaultFilteredDataset$ui_active(id, allow_add)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"id (character(1)) shiny module instance id. allow_add (ignored)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"Blank UI module list active filter states dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"empty div.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"method-ui-add-","dir":"Reference","previous_headings":"","what":"Method ui_add()","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"Overwrites parent method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"","code":"DefaultFilteredDataset$ui_add(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"Blank UI module list active filter states dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"empty div.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"","code":"DefaultFilteredDataset$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/DefaultFilteredDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DefaultFilteredDataset R6 class ‚Äî DefaultFilteredDataset","text":"","code":"# use non-exported function from teal.slice DefaultFilteredDataset <- getFromNamespace(\"DefaultFilteredDataset\", \"teal.slice\")  library(shiny)  ds <- DefaultFilteredDataset$new(letters, \"letters\") isolate(ds$get_filter_state()) isolate(ds$get_call())"},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterState object for empty variables ‚Äî EmptyFilterState","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"FilterState subclass representing empty variable.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"teal.slice::FilterState -> EmptyFilterState","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"teal.slice::FilterState$finalize() teal.slice::FilterState$format() teal.slice::FilterState$get_state() teal.slice::FilterState$print() teal.slice::FilterState$server() teal.slice::FilterState$set_state() teal.slice::FilterState$ui()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"EmptyFilterState$new() EmptyFilterState$get_call() EmptyFilterState$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"Initialize EmptyFilterState object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"","code":"EmptyFilterState$new(   x,   x_reactive = reactive(NULL),   extract_type = character(0),   slice )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"x (vector) variable filtered, x_reactive (reactive) returning vector type x. used update counts following change values filtered dataset. set reactive(NULL) counts based filtered dataset shown. extract_type (character) specifying whether condition calls prefixed dataname. Possible values: character(0) (default) varname condition call prefixed \"list\" varname condition call returned <dataname>$<varname> \"matrix\" varname condition call returned <dataname>[, <varname>] slice (teal_slice) specification filter state. teal_slice stored object set_state directly manipulates values within teal_slice. get_state returns teal_slice object can reused places. Note teal_slice reactiveValues, means reference semantics, .e. changes made object automatically reflected places refer teal_slice.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"Object class EmptyFilterState, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"method-get-call-","dir":"Reference","previous_headings":"","what":"Method get_call()","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"Returns reproducible condition call current selection relevant selected variable type. Uses internal reactive values, hence must called reactive isolated context.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"","code":"EmptyFilterState$get_call(dataname)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"dataname name data set; defaults private$get_dataname()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"logical(1)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"","code":"EmptyFilterState$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/EmptyFilterState.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FilterState object for empty variables ‚Äî EmptyFilterState","text":"","code":"# use non-exported function from teal.slice include_js_files <- getFromNamespace(\"include_js_files\", \"teal.slice\") EmptyFilterState <- getFromNamespace(\"EmptyFilterState\", \"teal.slice\")  library(shiny)  filter_state <- EmptyFilterState$new(   x = NA,   slice = teal_slice(varname = \"x\", dataname = \"data\"),   extract_type = character(0) ) isolate(filter_state$get_call()) #> NULL filter_state$set_state(teal_slice(dataname = \"data\", varname = \"x\", keep_na = TRUE)) isolate(filter_state$get_call()) #> NULL"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"API class managing filter states teal application's filter panel.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"purpose class encapsulate API filter panel new class FilterPanelAPI can passed used server call module instead passing whole FilteredData object. class supported methods set, get, remove filter states filter panel API.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"FilterPanelAPI$new() FilterPanelAPI$get_filter_state() FilterPanelAPI$set_filter_state() FilterPanelAPI$remove_filter_state() FilterPanelAPI$clear_filter_states() FilterPanelAPI$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"Initialize FilterPanelAPI object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"","code":"FilterPanelAPI$new(datasets)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"datasets (FilteredData)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"method-get-filter-state-","dir":"Reference","previous_headings":"","what":"Method get_filter_state()","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"Gets reactive values active FilterState objects FilteredData object. Gets active filters form nested list. output list compatible input set_filter_state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"","code":"FilterPanelAPI$get_filter_state()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"list named elements corresponding FilteredDataset objects active filters.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"method-set-filter-state-","dir":"Reference","previous_headings":"","what":"Method set_filter_state()","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"Sets active filter states.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"","code":"FilterPanelAPI$set_filter_state(filter)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"filter (teal_slices)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"method-remove-filter-state-","dir":"Reference","previous_headings":"","what":"Method remove_filter_state()","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"Remove one FilterState FilteredDataset FilteredData object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"","code":"FilterPanelAPI$remove_filter_state(filter)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"filter (teal_slices) specifying FilterState objects remove; teal_slices may contain dataname varname, elements ignored","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"method-clear-filter-states-","dir":"Reference","previous_headings":"","what":"Method clear_filter_states()","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"Remove FilterStates FilteredData object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"","code":"FilterPanelAPI$clear_filter_states(datanames)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"datanames (character) datanames remove FilterStates; omit remove FilterStates FilteredData object","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"","code":"FilterPanelAPI$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterPanelAPI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class to encapsulate the API of the filter panel of a teal app ‚Äî FilterPanelAPI","text":"","code":"library(shiny)  fd <- init_filtered_data(list(iris = iris)) fpa <- FilterPanelAPI$new(fd)  # get the actual filter state --> empty named list isolate(fpa$get_filter_state()) #> { #>   \"slices\": [], #>   \"attributes\": { #>     \"include_varnames\" : { #>       \"iris\"           : [\"Sepal.Length\", \"Sepal.Width\", ... #>     }, #>     \"count_type\"       : \"none\", #>     \"allow_add\"        : true #>   } #> }   # set a filter state set_filter_state(   fpa,   teal_slices(     teal_slice(dataname = \"iris\", varname = \"Species\", selected = \"setosa\", keep_na = TRUE)   ) )  # get the actual filter state --> named list with filters isolate(fpa$get_filter_state()) #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"iris\", #>       \"varname\"        : \"Species\", #>       \"id\"             : \"iris Species\", #>       \"choices\"        : [\"setosa\", \"versicolor\", \"virgin... #>       \"selected\"       : [\"setosa\"], #>       \"keep_na\"        : true, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     } #>   ], #>   \"attributes\": { #>     \"include_varnames\" : { #>       \"iris\"           : [\"Sepal.Length\", \"Sepal.Width\", ... #>     }, #>     \"count_type\"       : \"none\", #>     \"allow_add\"        : true #>   } #> }   # remove all_filter_states fpa$clear_filter_states()  # get the actual filter state --> empty named list isolate(fpa$get_filter_state()) #> { #>   \"slices\": [], #>   \"attributes\": { #>     \"include_varnames\" : { #>       \"iris\"           : [\"Sepal.Length\", \"Sepal.Width\", ... #>     }, #>     \"count_type\"       : \"none\", #>     \"allow_add\"        : true #>   } #> }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterState abstract class ‚Äî FilterState","title":"FilterState abstract class ‚Äî FilterState","text":"Abstract class encapsulate single filter state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FilterState abstract class ‚Äî FilterState","text":"class responsible managing single filter item within FilteredData object outputs condition call (logical predicate) subsetting one variable. Filter states depend variable type: (logical, integer, numeric, character, factor, Date, POSIXct, POSIXlt) FilterState subclasses exist correspond types. logical: class = LogicalFilterState integer: class = RangeFilterState numeric: class = RangeFilterState character: class = ChoicesFilterState factor: class = ChoicesFilterState Date: class = DateFilterState POSIXct, POSIXlt: class = DatetimeFilterState NA entries: class: FilterState, filtered default: FilterState, filtered variable's filter state R6 object keeps variable filtered, teal_slice object describes filter state, well shiny module (UI server) allows user alter filter state. Changes filter state cause observations omitted trigger get_call method every R function call reactive chain.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"modifying-state","dir":"Reference","previous_headings":"","what":"Modifying state","title":"FilterState abstract class ‚Äî FilterState","text":"Modifying FilterState object possible three scenarios: interactive session, passing appropriate teal_slice set_state method. running application, changing appropriate inputs. running application, using filter_state_api directly uses set_state method FilterState object.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterState abstract class ‚Äî FilterState","text":"FilterState$new() FilterState$format() FilterState$print() FilterState$set_state() FilterState$get_state() FilterState$get_call() FilterState$server() FilterState$ui() FilterState$finalize() FilterState$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilterState abstract class ‚Äî FilterState","text":"Initialize FilterState object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState abstract class ‚Äî FilterState","text":"","code":"FilterState$new(   x,   x_reactive = reactive(NULL),   slice,   extract_type = character(0) )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState abstract class ‚Äî FilterState","text":"x (vector) variable filtered. x_reactive (reactive) returning vector type x. used update counts following change values filtered dataset. set reactive(NULL) counts based filtered dataset shown. slice (teal_slice) specification filter state. teal_slice stored object set_state directly manipulates values within teal_slice. get_state returns teal_slice object can reused places. Note teal_slice reactiveValues, means reference semantics, .e. changes made object automatically reflected places refer teal_slice. extract_type (character) specifying whether condition calls prefixed dataname. Possible values: character(0) (default) varname condition call prefixed \"list\" varname condition call returned <dataname>$<varname> \"matrix\" varname condition call returned <dataname>[, <varname>]","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState abstract class ‚Äî FilterState","text":"Object class FilterState, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"FilterState abstract class ‚Äî FilterState","text":"Returns formatted string representing FilterState object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState abstract class ‚Äî FilterState","text":"","code":"FilterState$format(show_all = FALSE, trim_lines = TRUE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState abstract class ‚Äî FilterState","text":"show_all (logical(1)) passed format.teal_slice trim_lines (logical(1)) passed format.teal_slice","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState abstract class ‚Äî FilterState","text":"character(1) formatted string","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"FilterState abstract class ‚Äî FilterState","text":"Prints FilterState object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState abstract class ‚Äî FilterState","text":"","code":"FilterState$print(...)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState abstract class ‚Äî FilterState","text":"... additional arguments","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"method-set-state-","dir":"Reference","previous_headings":"","what":"Method set_state()","title":"FilterState abstract class ‚Äî FilterState","text":"Sets mutable parameters filter state. fixed state prevented changing state anchored state prevented removing state","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState abstract class ‚Äî FilterState","text":"","code":"FilterState$set_state(state)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState abstract class ‚Äî FilterState","text":"state (teal_slice)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState abstract class ‚Äî FilterState","text":"self invisibly","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"method-get-state-","dir":"Reference","previous_headings":"","what":"Method get_state()","title":"FilterState abstract class ‚Äî FilterState","text":"Returns complete description filter state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState abstract class ‚Äî FilterState","text":"","code":"FilterState$get_state()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState abstract class ‚Äî FilterState","text":"teal_slice object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"method-get-call-","dir":"Reference","previous_headings":"","what":"Method get_call()","title":"FilterState abstract class ‚Äî FilterState","text":"Returns reproducible condition call current selection relevant selected variable type. Method using internal reactive values makes reactive must executed reactive isolated context.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState abstract class ‚Äî FilterState","text":"","code":"FilterState$get_call()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"method-server-","dir":"Reference","previous_headings":"","what":"Method server()","title":"FilterState abstract class ‚Äî FilterState","text":"shiny module server.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState abstract class ‚Äî FilterState","text":"","code":"FilterState$server(id, remove_callback)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState abstract class ‚Äî FilterState","text":"id (character(1)) shiny module instance id. remove_callback (function) callback handle removal FilterState object state_list","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState abstract class ‚Äî FilterState","text":"Reactive expression signaling remove button clicked.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"method-ui-","dir":"Reference","previous_headings":"","what":"Method ui()","title":"FilterState abstract class ‚Äî FilterState","text":"shiny UI module. UI class contains simple message stating supported.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState abstract class ‚Äî FilterState","text":"","code":"FilterState$ui(id, parent_id = \"cards\")"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState abstract class ‚Äî FilterState","text":"id (character(1)) shiny module instance id. parent_id (character(1)) id FilterStates card container","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"FilterState abstract class ‚Äî FilterState","text":"Destroy inputs observers stored private$session_bindings.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState abstract class ‚Äî FilterState","text":"","code":"FilterState$finalize()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState abstract class ‚Äî FilterState","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterState abstract class ‚Äî FilterState","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState abstract class ‚Äî FilterState","text":"","code":"FilterState$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterState.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState abstract class ‚Äî FilterState","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterStateExpr R6 class ‚Äî FilterStateExpr","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"Sister class FilterState handles arbitrary filter expressions.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"Creates filter state around predefined condition call (logical predicate). condition call independent data filter card allows interaction (filter always fixed).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"FilterStateExpr$new() FilterStateExpr$format() FilterStateExpr$print() FilterStateExpr$get_state() FilterStateExpr$set_state() FilterStateExpr$get_call() FilterStateExpr$finalize() FilterStateExpr$server() FilterStateExpr$ui() FilterStateExpr$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"Initialize FilterStateExpr object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"","code":"FilterStateExpr$new(slice)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"slice (teal_slice_expr)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"Object class FilterStateExpr, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"Returns formatted string representing FilterStateExpr object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"","code":"FilterStateExpr$format(show_all = FALSE, trim_lines = TRUE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"show_all (logical(1)) passed format.teal_slice trim_lines (logical(1)) passed format.teal_slice","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"character(1) formatted string","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"Prints FilterStateExpr object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"","code":"FilterStateExpr$print(...)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"... arguments passed format method","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"method-get-state-","dir":"Reference","previous_headings":"","what":"Method get_state()","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"Returns complete description filter state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"","code":"FilterStateExpr$get_state()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"teal_slice object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"method-set-state-","dir":"Reference","previous_headings":"","what":"Method set_state()","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"nothing. Exists compatibility.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"","code":"FilterStateExpr$set_state(state)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"state (teal_slice)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"self, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"method-get-call-","dir":"Reference","previous_headings":"","what":"Method get_call()","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"Get reproducible call.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"","code":"FilterStateExpr$get_call(dataname)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"dataname (ignored) consistency FilterState Returns reproducible condition call current selection relevant selected variable type. Method using internal reactive values makes reactive must executed reactive isolated context.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"call NULL","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"Destroy inputs observers stored private$session_bindings.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"","code":"FilterStateExpr$finalize()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"method-server-","dir":"Reference","previous_headings":"","what":"Method server()","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"shiny module server.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"","code":"FilterStateExpr$server(id, remove_callback)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"id (character(1)) shiny module instance id. remove_callback (function) callback handle removal FilterState object state_list","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"Reactive expression signaling remove button clicked.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"method-ui-","dir":"Reference","previous_headings":"","what":"Method ui()","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"shiny module UI. UI class contains simple message stating supported.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"","code":"FilterStateExpr$ui(id, parent_id = \"cards\")"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"id (character(1)) shiny module instance id. parent_id (character(1)) id FilterStates card container.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"","code":"FilterStateExpr$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStateExpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FilterStateExpr R6 class ‚Äî FilterStateExpr","text":"","code":"# use non-exported function from teal.slice include_js_files <- getFromNamespace(\"include_js_files\", \"teal.slice\") include_css_files <- getFromNamespace(\"include_css_files\", \"teal.slice\") FilterStateExpr <- getFromNamespace(\"FilterStateExpr\", \"teal.slice\")  filter_state <- FilterStateExpr$new(   slice = teal_slice(     dataname = \"x\",     id = \"FA\",     title = \"Adult females\",     expr = \"sex == 'F' & age >= 18\"   ) ) filter_state$get_call() #> sex == \"F\" & age >= 18  # working filter in an app library(shiny) library(shinyjs)  ui <- fluidPage(   useShinyjs(),   include_css_files(pattern = \"filter-panel\"),   include_js_files(pattern = \"count-bar-labels\"),   column(4, tags$div(     tags$h4(\"ChoicesFilterState\"),     filter_state$ui(\"fs\")   )),   column(8, tags$div(     tags$h4(\"Condition (i.e. call)\"), # display the condition call generated by this FilterState     textOutput(\"condition_choices\"), tags$br(),     tags$h4(\"Unformatted state\"), # display raw filter state     textOutput(\"unformatted_choices\"), tags$br(),     tags$h4(\"Formatted state\"), # display human readable filter state     textOutput(\"formatted_choices\"), tags$br()   )) )  server <- function(input, output, session) {   filter_state$server(\"fs\")   output$condition_choices <- renderPrint(filter_state$get_call())   output$formatted_choices <- renderText(filter_state$format())   output$unformatted_choices <- renderPrint(filter_state$get_state()) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterStates R6 class ‚Äî FilterStates","title":"FilterStates R6 class ‚Äî FilterStates","text":"Abstract class manages adding removing FilterState objects builds subset expression. FilterStates object tracks condition calls (logical predicates limit observations) associated given dataset composes single reproducible R expression assign subset original data new variable. expression hereafter referred subset expression. subset expression constructed differently different classes underlying data object FilterStates sub-classes. Currently implemented data.frame, matrix, SummarizedExperiment, MultiAssayExperiment.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterStates R6 class ‚Äî FilterStates","text":"FilterStates$new() FilterStates$format() FilterStates$get_call() FilterStates$print() FilterStates$remove_filter_state() FilterStates$get_filter_state() FilterStates$set_filter_state() FilterStates$clear_filter_states() FilterStates$ui_active() FilterStates$srv_active() FilterStates$ui_add() FilterStates$srv_add() FilterStates$finalize() FilterStates$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilterStates R6 class ‚Äî FilterStates","text":"Initializes FilterStates object setting dataname, datalabel.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$new(   data,   data_reactive = function(sid = \"\") NULL,   dataname,   datalabel = NULL )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates R6 class ‚Äî FilterStates","text":"data (data.frame MultiAssayExperiment SummarizedExperiment matrix) R object subset function applied . data_reactive (function(sid)) return object type data object NULL. object needed FilterState counts updated change filters. function returns NULL filtered counts shown. Function sid argument character. dataname (character(1)) name dataset, used subset expression. Passed function argument attached FilterStates. datalabel (character(1)) optional text label.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates R6 class ‚Äî FilterStates","text":"Object class FilterStates, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"FilterStates R6 class ‚Äî FilterStates","text":"Returns formatted string representing FilterStates object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$format(show_all = FALSE, trim_lines = TRUE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates R6 class ‚Äî FilterStates","text":"show_all (logical(1)) passed format.teal_slices trim_lines (logical(1)) passed format.teal_slices","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates R6 class ‚Äî FilterStates","text":"character(1) formatted string","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-get-call-","dir":"Reference","previous_headings":"","what":"Method get_call()","title":"FilterStates R6 class ‚Äî FilterStates","text":"Filter call Builds subset expression condition calls generated FilterState. lhs expression dataname_prefixed, word prefixed refers situation call evaluated elements original data, example dataname[[x]]. default dataname_prefixed = dataname alterable class methods. Customization private$dataname_prefixed done inheriting classes. rhs call private$fun following arguments: dataname_prefixed list logical expressions generated FilterState objects stored private$state_list. logical predicate combined & operator. Variables logical expressions default prefixed can changed setting private$extract_type (change similar way dataname_prefixed) Possible call outputs depending custom fields/options:   filters applied, NULL returned avoid -op calls dataname <- dataname.","code":"# default dataname <- subset(dataname, col == \"x\")  # fun = dplyr::filter dataname <- dplyr::filter(dataname, col == \"x\")  # fun = MultiAssayExperiment::subsetByColData; extract_type = \"list\" dataname <- MultiAssayExperiment::subsetByColData(dataname, dataname$col == \"x\")  # teal_slice objects having `arg = \"subset\"` and `arg = \"select\"` dataname <- subset(dataname, subset = row_col == \"x\", select = col_col == \"x\")  # dataname = dataname[[element]] dataname[[element]] <- subset(dataname[[element]], subset = col == \"x\")"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$get_call(sid = \"\")"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates R6 class ‚Äî FilterStates","text":"sid (character) specified method returns code containing condition calls (logical predicates) FilterState objects \"sid\" attribute different sid argument.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates R6 class ‚Äî FilterStates","text":"call NULL","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"FilterStates R6 class ‚Äî FilterStates","text":"Prints FilterStates object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$print(...)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates R6 class ‚Äî FilterStates","text":"... additional arguments passed format.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-remove-filter-state-","dir":"Reference","previous_headings":"","what":"Method remove_filter_state()","title":"FilterStates R6 class ‚Äî FilterStates","text":"Remove one FilterStates state_list along UI elements.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$remove_filter_state(state)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates R6 class ‚Äî FilterStates","text":"state (teal_slices) specifying FilterState objects remove; teal_slices may contain dataname varname, elements ignored","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates R6 class ‚Äî FilterStates","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-get-filter-state-","dir":"Reference","previous_headings":"","what":"Method get_filter_state()","title":"FilterStates R6 class ‚Äî FilterStates","text":"Gets reactive values active FilterState objects. Get active filter state FilterState objects stored state_list(s). output list compatible input self$set_filter_state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$get_filter_state()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates R6 class ‚Äî FilterStates","text":"Object class teal_slices.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-set-filter-state-","dir":"Reference","previous_headings":"","what":"Method set_filter_state()","title":"FilterStates R6 class ‚Äî FilterStates","text":"Sets active FilterState objects.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$set_filter_state(state)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates R6 class ‚Äî FilterStates","text":"state (teal_slices)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates R6 class ‚Äî FilterStates","text":"Function raises error.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-clear-filter-states-","dir":"Reference","previous_headings":"","what":"Method clear_filter_states()","title":"FilterStates R6 class ‚Äî FilterStates","text":"Remove FilterState objects FilterStates object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$clear_filter_states(force = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates R6 class ‚Äî FilterStates","text":"force (logical(1)) flag specifying whether include anchored filter states.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates R6 class ‚Äî FilterStates","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-ui-active-","dir":"Reference","previous_headings":"","what":"Method ui_active()","title":"FilterStates R6 class ‚Äî FilterStates","text":"shiny UI definition stores FilterState UI elements. Populated elements created renderUI module server.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$ui_active(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates R6 class ‚Äî FilterStates","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates R6 class ‚Äî FilterStates","text":"shiny.tag","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-srv-active-","dir":"Reference","previous_headings":"","what":"Method srv_active()","title":"FilterStates R6 class ‚Äî FilterStates","text":"shiny server module.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$srv_active(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates R6 class ‚Äî FilterStates","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates R6 class ‚Äî FilterStates","text":"NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-ui-add-","dir":"Reference","previous_headings":"","what":"Method ui_add()","title":"FilterStates R6 class ‚Äî FilterStates","text":"shiny UI module add filter variable.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$ui_add(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates R6 class ‚Äî FilterStates","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates R6 class ‚Äî FilterStates","text":"shiny.tag","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-srv-add-","dir":"Reference","previous_headings":"","what":"Method srv_add()","title":"FilterStates R6 class ‚Äî FilterStates","text":"shiny server module add filter variable. module controls available choices select filter variable. selected, variable removed available choices. Removing filter variable adds back available choices.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$srv_add(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates R6 class ‚Äî FilterStates","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates R6 class ‚Äî FilterStates","text":"NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"FilterStates R6 class ‚Äî FilterStates","text":"Object cleanup. Destroy inputs observers stored private$session_bindings Clean state_list","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$finalize()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates R6 class ‚Äî FilterStates","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterStates R6 class ‚Äî FilterStates","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates R6 class ‚Äî FilterStates","text":"","code":"FilterStates$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilterStates.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates R6 class ‚Äî FilterStates","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":null,"dir":"Reference","previous_headings":"","what":"Class to encapsulate filtered datasets ‚Äî FilteredData","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Manages filtering datasets application module.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"main purpose class provide collection reactive datasets, dataset filter state determines filtered. dataset, get_filter_expr returns call filter dataset according filter state. data can obtained get_data. datasets filtered lazily, .e. requested / needed shiny app. design, dataname set set_dataset removed code may already depend . workaround, underlying data can set NULL. class currently supports variables following types within datasets: choices: variable type factor, e.g. ADSL$COUNTRY, iris$Species zero options can selected, variable factor logical: variable type logical, e.g. ADSL$TRT_FLAG exactly one option must selected, TRUE FALSE ranges: variable type numeric, e.g. ADSL$AGE, iris$Sepal.Length numerical range, range within range can selected dates: variable type Date, POSIXlt variables used filtering data class. Common arguments : filtered: whether return filtered result dataname: name one datasets FilteredData object varname: one columns dataset","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"FilteredData$new() FilteredData$datanames() FilteredData$get_datalabel() FilteredData$set_available_teal_slices() FilteredData$get_available_teal_slices() FilteredData$get_call() FilteredData$get_data() FilteredData$get_join_keys() FilteredData$get_filter_overview() FilteredData$get_keys() FilteredData$set_dataset() FilteredData$set_join_keys() FilteredData$get_filter_state() FilteredData$format() FilteredData$print() FilteredData$set_filter_state() FilteredData$remove_filter_state() FilteredData$clear_filter_states() FilteredData$ui_filter_panel() FilteredData$srv_filter_panel() FilteredData$ui_active() FilteredData$srv_active() FilteredData$ui_overview() FilteredData$srv_overview() FilteredData$finalize() FilteredData$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Initialize FilteredData object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$new(data_objects, join_keys = teal.data::join_keys())"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"data_objects (named list) List data objects. Names list used dataname respective datasets. join_keys (join_keys) optional joining keys, see teal.data::join_keys().","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-datanames-","dir":"Reference","previous_headings":"","what":"Method datanames()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Gets datanames.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$datanames()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"datanames returned order must evaluated (case dependencies).","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Character vector.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-get-datalabel-","dir":"Reference","previous_headings":"","what":"Method get_datalabel()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Gets data label dataset. Useful display Show R Code.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$get_datalabel(dataname)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"dataname (character(1)) name dataset","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Character string.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-set-available-teal-slices-","dir":"Reference","previous_headings":"","what":"Method set_available_teal_slices()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Set list external filter states available activation.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$set_available_teal_slices(x)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"x (reactive) return teal_slices","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Unlike adding new filter column, filters can come prespecified settings. teal_slices wrapped reactive can updated elsewhere app. Filters passed x limited can set FilteredData object, .e. correct dataname varname (waived teal_slice_fixed varname). List accessible ui/srv_active ui/srv_available_filters.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-get-available-teal-slices-","dir":"Reference","previous_headings":"","what":"Method get_available_teal_slices()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Get list filter states available object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$get_available_teal_slices()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"details-3","dir":"Reference","previous_headings":"","what":"Details","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"teal_slice objects created since beginning app session stored one teal_slices object. returns subset teal_slices, describing filter states can set object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"reactive returns teal_slices.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-get-call-","dir":"Reference","previous_headings":"","what":"Method get_call()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Gets call filter dataset according filter state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$get_call(dataname)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"dataname (character(1)) name dataset","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"details-4","dir":"Reference","previous_headings":"","what":"Details","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"returns call filter dataset , assuming (filtered) datasets depends available. Together self$datanames() returns datasets correct evaluation order, generates whole filter code, see function FilteredData$get_filter_code. return type, note rlang::is_expression returns TRUE return type, base R expressions calls (single expression, capturing function call). filtered dataset name given self$filtered_dataname(dataname) can used Show R Code generation.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"list calls.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-get-data-","dir":"Reference","previous_headings":"","what":"Method get_data()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Gets filtered unfiltered dataset. filtered = FALSE, original data set set_data returned including attributes.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$get_data(dataname, filtered = TRUE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"dataname (character(1)) name dataset. filtered (logical(1)) whether return filtered unfiltered dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"data object, data.frame MultiAssayExperiment.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-get-join-keys-","dir":"Reference","previous_headings":"","what":"Method get_join_keys()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Get join keys two datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$get_join_keys()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"join_keys","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-get-filter-overview-","dir":"Reference","previous_headings":"","what":"Method get_filter_overview()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Creates filter overview table displayed application. One row created per dataset, according get_filter_overview methods contained FilteredDataset objects.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$get_filter_overview(datanames)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"datanames (character) vector dataset names.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"data.frame listing numbers observations datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-get-keys-","dir":"Reference","previous_headings":"","what":"Method get_keys()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Get keys dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$get_keys(dataname)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"dataname (character(1)) name dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Character vector key column names.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-set-dataset-","dir":"Reference","previous_headings":"","what":"Method set_dataset()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Adds dataset FilteredData.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$set_dataset(data, dataname)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"data (data.frame MultiAssayExperiment) data filtered. dataname (character(1)) name dataset added object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"details-5","dir":"Reference","previous_headings":"","what":"Details","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"set_dataset creates FilteredDataset object keeps dataset filtering purpose. data parent specified join_keys object stored private$join_keys created FilteredDataset (child) gets linked FilteredDataset (parent). \"Child\" dataset return filtered data dependent reactive filtered data \"parent\". See documentation parent argument DataframeFilteredDataset constructor.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"self, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-set-join-keys-","dir":"Reference","previous_headings":"","what":"Method set_join_keys()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Set join_keys.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$set_join_keys(join_keys)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"join_keys (join_keys), see teal.data::join_keys().","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"self, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-get-filter-state-","dir":"Reference","previous_headings":"","what":"Method get_filter_state()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Gets states contained FilterState objects.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$get_filter_state()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"teal_slices object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Returns formatted string representing FilteredData object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$format(show_all = FALSE, trim_lines = TRUE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"show_all (logical(1)) passed format.teal_slice. trim_lines (logical(1)) passed format.teal_slice.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"character(1) formatted string.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Prints FilteredData object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$print(...)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"... additional arguments passed format.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-set-filter-state-","dir":"Reference","previous_headings":"","what":"Method set_filter_state()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Sets active filter states.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$set_filter_state(state)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"state (teal_slices)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-remove-filter-state-","dir":"Reference","previous_headings":"","what":"Method remove_filter_state()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Removes one FilterState FilteredData object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$remove_filter_state(state)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"state (teal_slices) specifying FilterState objects remove; teal_slices may contain dataname varname, elements ignored.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-clear-filter-states-","dir":"Reference","previous_headings":"","what":"Method clear_filter_states()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Remove FilterStates FilteredDataset FilterStates FilteredData object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$clear_filter_states(datanames = self$datanames(), force = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"datanames (character) names datasets remove filter states. Defaults datasets FilteredData object. force (logical(1)) flag specifying whether include anchored filter states.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-ui-filter-panel-","dir":"Reference","previous_headings":"","what":"Method ui_filter_panel()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"top-level shiny module filter panel teal app. Contains 1) filter overview panel, 2) filter active panel, 3) add filters panel.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$ui_filter_panel(id, active_datanames = self$datanames)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"id (character(1)) shiny module instance id. active_datanames (reactive) defining subset self$datanames() displayed.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"shiny.tag","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-srv-filter-panel-","dir":"Reference","previous_headings":"","what":"Method srv_filter_panel()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Server function filter panel.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$srv_filter_panel(id, active_datanames = self$datanames)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"id (character(1)) shiny module instance id. active_datanames (function reactive) returning datanames shown filter panel. Must subset datanames FilteredData. function returns NULL (opposed character(0)), filter panel hidden.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-ui-active-","dir":"Reference","previous_headings":"","what":"Method ui_active()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Server module responsible displaying active filters.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$ui_active(id, active_datanames = self$datanames)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"id (character(1)) shiny module instance id. active_datanames (reactive) defining subset self$datanames() displayed.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"shiny.tag","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-srv-active-","dir":"Reference","previous_headings":"","what":"Method srv_active()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Server module responsible displaying active filters.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$srv_active(id, active_datanames = self$datanames)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"id (character(1)) shiny module instance id. active_datanames (reactive) defining subset self$datanames() displayed.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-ui-overview-","dir":"Reference","previous_headings":"","what":"Method ui_overview()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Creates UI definition module showing counts dataset contrasting filtered full unfiltered dataset. Per dataset, displays number rows/observations dataset, number unique subjects.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$ui_overview(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-srv-overview-","dir":"Reference","previous_headings":"","what":"Method srv_overview()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Server function display number records filtered unfiltered data.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$srv_overview(id, active_datanames = self$datanames)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"id (character(1)) shiny module instance id. active_datanames (reactive) returning datanames shown filter panel, must subset datanames argument provided ui_filter_panel; function returns NULL (opposed character(0)), filter panel hidden.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"Object dependencies cleanup. Destroy inputs observers stored private$session_bindings Finalize FilteredData stored private$filtered_datasets","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$finalize()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"FilteredData$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class to encapsulate filtered datasets ‚Äî FilteredData","text":"","code":"# use non-exported function from teal.slice FilteredData <- getFromNamespace(\"FilteredData\", \"teal.slice\")  library(shiny)  datasets <- FilteredData$new(list(iris = iris, mtcars = mtcars))  # get datanames datasets$datanames() #> [1] \"iris\"   \"mtcars\"  datasets$set_filter_state(   teal_slices(teal_slice(dataname = \"iris\", varname = \"Species\", selected = \"virginica\")) )  datasets$set_filter_state(   teal_slices(teal_slice(dataname = \"mtcars\", varname = \"mpg\", selected = c(15, 20))) )  isolate(datasets$get_filter_state()) #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"iris\", #>       \"varname\"        : \"Species\", #>       \"id\"             : \"iris Species\", #>       \"choices\"        : [\"setosa\", \"versicolor\", \"virgin... #>       \"selected\"       : [\"virginica\"], #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     }, #>     { #>       \"dataname\"       : \"mtcars\", #>       \"varname\"        : \"mpg\", #>       \"id\"             : \"mtcars mpg\", #>       \"choices\"        : [10.4, 34], #>       \"selected\"       : [15, 20], #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     } #>   ], #>   \"attributes\": { #>     \"include_varnames\" : { #>       \"iris\"           : [\"Sepal.Length\", \"Sepal.Width\", ... #>       \"mtcars\"         : [\"mpg\", \"cyl\", \"disp\", \"hp\", \"dr... #>     }, #>     \"count_type\"       : \"none\", #>     \"allow_add\"        : true #>   } #> }  isolate(datasets$get_call(\"iris\")) #> $filter #> iris <- dplyr::filter(iris, Species == \"virginica\") #>  isolate(datasets$get_call(\"mtcars\")) #> $filter #> mtcars <- dplyr::filter(mtcars, mpg >= 15 & mpg <= 20) #>   ### set_filter_state library(shiny)  data(miniACC, package = \"MultiAssayExperiment\") datasets <- FilteredData$new(list(iris = iris, mae = miniACC)) fs <- teal_slices(   teal_slice(     dataname = \"iris\", varname = \"Sepal.Length\", selected = c(5.1, 6.4),     keep_na = TRUE, keep_inf = FALSE   ),   teal_slice(     dataname = \"iris\", varname = \"Species\", selected = c(\"setosa\", \"versicolor\"),     keep_na = FALSE   ),   teal_slice(     dataname = \"mae\", varname = \"years_to_birth\", selected = c(30, 50),     keep_na = TRUE, keep_inf = FALSE   ),   teal_slice(dataname = \"mae\", varname = \"vital_status\", selected = \"1\", keep_na = FALSE),   teal_slice(dataname = \"mae\", varname = \"gender\", selected = \"female\", keep_na = TRUE),   teal_slice(     dataname = \"mae\", varname = \"ARRAY_TYPE\",     selected = \"\", keep_na = TRUE, experiment = \"RPPAArray\", arg = \"subset\"   ) ) datasets$set_filter_state(state = fs) isolate(datasets$get_filter_state()) #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"iris\", #>       \"varname\"        : \"Sepal.Length\", #>       \"id\"             : \"iris Sepal.Length\", #>       \"choices\"        : [4.2999999999999998, 7.900000000... #>       \"selected\"       : [5.0999999999999996, 6.400000000... #>       \"keep_na\"        : true, #>       \"keep_inf\"       : false, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     }, #>     { #>       \"dataname\"       : \"iris\", #>       \"varname\"        : \"Species\", #>       \"id\"             : \"iris Species\", #>       \"choices\"        : [\"setosa\", \"versicolor\", \"virgin... #>       \"selected\"       : [\"setosa\", \"versicolor\"], #>       \"keep_na\"        : false, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     }, #>     { #>       \"dataname\"       : \"mae\", #>       \"varname\"        : \"years_to_birth\", #>       \"id\"             : \"mae years_to_birth\", #>       \"choices\"        : [14, 83], #>       \"selected\"       : [30, 50], #>       \"keep_na\"        : true, #>       \"keep_inf\"       : false, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     }, #>     { #>       \"dataname\"       : \"mae\", #>       \"varname\"        : \"vital_status\", #>       \"id\"             : \"mae vital_status\", #>       \"choices\"        : [\"0\", \"1\"], #>       \"selected\"       : [\"1\"], #>       \"keep_na\"        : false, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     }, #>     { #>       \"dataname\"       : \"mae\", #>       \"varname\"        : \"gender\", #>       \"id\"             : \"mae gender\", #>       \"choices\"        : [\"female\", \"male\"], #>       \"selected\"       : [\"female\"], #>       \"keep_na\"        : true, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     }, #>     { #>       \"dataname\"       : \"mae\", #>       \"varname\"        : \"ARRAY_TYPE\", #>       \"id\"             : \"mae ARRAY_TYPE RPPAArray subset.. #>       \"choices\"        : [\"\", \"protein_level\"], #>       \"selected\"       : [\"\"], #>       \"keep_na\"        : true, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"arg\"            : \"subset\", #>       \"experiment\"     : \"RPPAArray\" #>     } #>   ], #>   \"attributes\": { #>     \"include_varnames\" : { #>       \"iris\"           : [\"Sepal.Length\", \"Sepal.Width\", ... #>       \"mae\"            : [\"patientID\", \"years_to_birth\", ... #>     }, #>     \"count_type\"       : \"none\", #>     \"allow_add\"        : true #>   } #> }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"FilteredDataset R6 class ‚Äî FilteredDataset","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"FilteredDataset class renders/controls FilterStates(s) FilteredDataset contains filter_states field - list contains one (data.frame) multiple (MultiAssayExperiment) FilterStates objects. FilterStates responsible one filter/subset expression applied specific components dataset.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"FilteredDataset$new() FilteredDataset$format() FilteredDataset$print() FilteredDataset$clear_filter_states() FilteredDataset$get_call() FilteredDataset$get_filter_state() FilteredDataset$set_filter_state() FilteredDataset$get_dataname() FilteredDataset$get_dataset() FilteredDataset$get_filter_overview() FilteredDataset$get_keys() FilteredDataset$get_dataset_label() FilteredDataset$ui_active() FilteredDataset$srv_active() FilteredDataset$ui_add() FilteredDataset$srv_add() FilteredDataset$finalize() FilteredDataset$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Initializes FilteredDataset object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$new(   dataset,   dataname,   keys = character(0),   label = attr(dataset, \"label\", exact = TRUE) )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"dataset object dataname (character(1)) syntactically valid name given dataset. keys (character) optional vector primary key column names. label (character(1)) label describe dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Object class FilteredDataset, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Returns formatted string representing FilteredDataset object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$format(show_all = FALSE, trim_lines = TRUE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"show_all (logical(1)) passed format.teal_slice. trim_lines (logical(1)) passed format.teal_slice.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"formatted character string.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Prints FilteredDataset object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$print(...)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"... additional arguments passed format.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-clear-filter-states-","dir":"Reference","previous_headings":"","what":"Method clear_filter_states()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Removes filter items applied dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$clear_filter_states(force = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"force (logical(1)) flag specifying whether include anchored filter states.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-get-call-","dir":"Reference","previous_headings":"","what":"Method get_call()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Gets filter expression. function returns filter calls equivalent selected items within filter_states. Configuration calls constant depends filter_states type order set initialization.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$get_call(sid = \"\")"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"sid (character) specified, method returns code containing conditions calls FilterState objects sid different sid argument.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Either list filter calls, NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-get-filter-state-","dir":"Reference","previous_headings":"","what":"Method get_filter_state()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Gets states contained FilterState objects.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$get_filter_state()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"teal_slices object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-set-filter-state-","dir":"Reference","previous_headings":"","what":"Method set_filter_state()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Set filter state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$set_filter_state(state)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"state (teal_slices)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Virtual method, returns nothing raises error.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-get-dataname-","dir":"Reference","previous_headings":"","what":"Method get_dataname()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Gets name dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$get_dataname()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"character string.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-get-dataset-","dir":"Reference","previous_headings":"","what":"Method get_dataset()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Gets dataset object FilteredDataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$get_dataset(filtered = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"filtered (logical(1))","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"stored dataset. data.frame MultiAssayExperiment, either raw reactive current filters applied (depending filtered).","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-get-filter-overview-","dir":"Reference","previous_headings":"","what":"Method get_filter_overview()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Get filter overview dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$get_filter_overview()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Virtual method, returns nothing raises error.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-get-keys-","dir":"Reference","previous_headings":"","what":"Method get_keys()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Gets key columns dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$get_keys()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Character vector variable names","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-get-dataset-label-","dir":"Reference","previous_headings":"","what":"Method get_dataset_label()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Gets dataset label.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$get_dataset_label()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Character string.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-ui-active-","dir":"Reference","previous_headings":"","what":"Method ui_active()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"shiny module containing active filters dataset, along title remove button.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$ui_active(id, allow_add = TRUE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"id (character(1)) shiny module instance id. allow_add (logical(1)) logical flag specifying whether user able add new filters","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"shiny.tag","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-srv-active-","dir":"Reference","previous_headings":"","what":"Method srv_active()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Server module dataset active filters.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$srv_active(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-ui-add-","dir":"Reference","previous_headings":"","what":"Method ui_add()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"UI module add filter variable dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$ui_add(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Virtual method, returns nothing raises error.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-srv-add-","dir":"Reference","previous_headings":"","what":"Method srv_add()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Server module add filter variable dataset. class srv_add calls multiple modules name FilterStates MAEFilteredDataset contains one FilterStates object colData one experiment.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$srv_add(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"Object dependencies cleanup. Destroy inputs observers stored private$session_bindings Finalize FilterStates stored private$filter_states","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$finalize()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"","code":"FilteredDataset$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/FilteredDataset.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilteredDataset R6 class ‚Äî FilteredDataset","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterState object for logical data ‚Äî LogicalFilterState","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"Manages choosing logical state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"teal.slice::FilterState -> LogicalFilterState","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"teal.slice::FilterState$finalize() teal.slice::FilterState$format() teal.slice::FilterState$get_state() teal.slice::FilterState$print() teal.slice::FilterState$server() teal.slice::FilterState$set_state() teal.slice::FilterState$ui()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"LogicalFilterState$new() LogicalFilterState$get_call() LogicalFilterState$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"Initialize FilterState object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"","code":"LogicalFilterState$new(   x,   x_reactive = reactive(NULL),   extract_type = character(0),   slice )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"x (logical) variable filtered. x_reactive (reactive) returning vector type x. used update counts following change values filtered dataset. set reactive(NULL) counts based filtered dataset shown. extract_type (character) specifying whether condition calls prefixed dataname. Possible values: character(0) (default) varname condition call prefixed \"list\" varname condition call returned <dataname>$<varname> \"matrix\" varname condition call returned <dataname>[, <varname>] slice (teal_slice) specification filter state. teal_slice stored object set_state directly manipulates values within teal_slice. get_state returns teal_slice object can reused places. Note teal_slice reactiveValues, means reference semantics, .e. changes made object automatically reflected places refer teal_slice.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"Object class LogicalFilterState, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"method-get-call-","dir":"Reference","previous_headings":"","what":"Method get_call()","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"Returns reproducible condition call current selection. LogicalFilterState !<varname> <varname> optionally .na(<varname>)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"","code":"LogicalFilterState$get_call(dataname)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"dataname name data set; defaults private$get_dataname()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"call","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"","code":"LogicalFilterState$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/LogicalFilterState.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FilterState object for logical data ‚Äî LogicalFilterState","text":"","code":"# use non-exported function from teal.slice include_css_files <- getFromNamespace(\"include_css_files\", \"teal.slice\") include_js_files <- getFromNamespace(\"include_js_files\", \"teal.slice\") LogicalFilterState <- getFromNamespace(\"LogicalFilterState\", \"teal.slice\")  library(shiny)  filter_state <- LogicalFilterState$new(   x = sample(c(TRUE, FALSE, NA), 10, replace = TRUE),   slice = teal_slice(varname = \"x\", dataname = \"data\") ) isolate(filter_state$get_call()) #> is.na(x) | x %in% c(TRUE, FALSE) filter_state$set_state(   teal_slice(dataname = \"data\", varname = \"x\", selected = TRUE, keep_na = TRUE) ) isolate(filter_state$get_call()) #> is.na(x) | x  # working filter in an app library(shinyjs)  data_logical <- c(sample(c(TRUE, FALSE), 10, replace = TRUE), NA) fs <- LogicalFilterState$new(   x = data_logical,   slice = teal_slice(dataname = \"data\", varname = \"x\", selected = FALSE, keep_na = TRUE) )  ui <- fluidPage(   useShinyjs(),   include_css_files(pattern = \"filter-panel\"),   include_js_files(pattern = \"count-bar-labels\"),   column(4, tags$div(     tags$h4(\"LogicalFilterState\"),     fs$ui(\"fs\")   )),   column(4, tags$div(     id = \"outputs\", # div id is needed for toggling the element     tags$h4(\"Condition (i.e. call)\"), # display the condition call generated by this FilterState     textOutput(\"condition_logical\"), tags$br(),     tags$h4(\"Unformatted state\"), # display raw filter state     textOutput(\"unformatted_logical\"), tags$br(),     tags$h4(\"Formatted state\"), # display human readable filter state     textOutput(\"formatted_logical\"), tags$br()   )),   column(4, tags$div(     tags$h4(\"Programmatic filter control\"),     actionButton(\"button1_logical\", \"set drop NA\", width = \"100%\"), tags$br(),     actionButton(\"button2_logical\", \"set keep NA\", width = \"100%\"), tags$br(),     actionButton(\"button3_logical\", \"set a selection\", width = \"100%\"), tags$br(),     actionButton(\"button0_logical\", \"set initial state\", width = \"100%\"), tags$br()   )) )  server <- function(input, output, session) {   fs$server(\"fs\")   output$condition_logical <- renderPrint(fs$get_call())   output$formatted_logical <- renderText(fs$format())   output$unformatted_logical <- renderPrint(fs$get_state())   # modify filter state programmatically   observeEvent(     input$button1_logical,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", keep_na = FALSE))   )   observeEvent(     input$button2_logical,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", keep_na = TRUE))   )   observeEvent(     input$button3_logical,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", selected = TRUE))   )   observeEvent(     input$button0_logical,     fs$set_state(       teal_slice(dataname = \"data\", varname = \"x\", selected = FALSE, keep_na = TRUE)     )   ) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilterStates.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterStates subclass for MultiAssayExperiments ‚Äî MAEFilterStates","title":"FilterStates subclass for MultiAssayExperiments ‚Äî MAEFilterStates","text":"Handles filter states MultiAssayExperiment.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilterStates.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FilterStates subclass for MultiAssayExperiments ‚Äî MAEFilterStates","text":"teal.slice::FilterStates -> MAEFilterStates","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilterStates.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FilterStates subclass for MultiAssayExperiments ‚Äî MAEFilterStates","text":"teal.slice::FilterStates$clear_filter_states() teal.slice::FilterStates$finalize() teal.slice::FilterStates$format() teal.slice::FilterStates$get_call() teal.slice::FilterStates$get_filter_state() teal.slice::FilterStates$print() teal.slice::FilterStates$remove_filter_state() teal.slice::FilterStates$set_filter_state() teal.slice::FilterStates$srv_active() teal.slice::FilterStates$srv_add() teal.slice::FilterStates$ui_active() teal.slice::FilterStates$ui_add()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilterStates.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterStates subclass for MultiAssayExperiments ‚Äî MAEFilterStates","text":"MAEFilterStates$new() MAEFilterStates$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilterStates.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilterStates subclass for MultiAssayExperiments ‚Äî MAEFilterStates","text":"Initialize MAEFilterStates object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilterStates.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates subclass for MultiAssayExperiments ‚Äî MAEFilterStates","text":"","code":"MAEFilterStates$new(   data,   data_reactive = function(sid = \"\") NULL,   dataname,   datalabel = \"subjects\",   keys = character(0) )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilterStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates subclass for MultiAssayExperiments ‚Äî MAEFilterStates","text":"data (MultiAssayExperiment) R object MultiAssayExperiment::subsetByColData function applied . data_reactive (function(sid)) return MultiAssayExperiment object NULL. object needed FilterState counts updated change filters. function returns NULL filtered counts shown. Function sid argument character. dataname (character(1)) name data used subset expression. Passed function argument attached FilterStates. datalabel (character(1)) optional text label. keys (character) key column names. varlabels (character) labels variables used object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilterStates.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterStates subclass for MultiAssayExperiments ‚Äî MAEFilterStates","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilterStates.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates subclass for MultiAssayExperiments ‚Äî MAEFilterStates","text":"","code":"MAEFilterStates$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilterStates.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates subclass for MultiAssayExperiments ‚Äî MAEFilterStates","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"MAEFilteredDataset R6 class MAEFilteredDataset R6 class","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"teal.slice::FilteredDataset -> MAEFilteredDataset","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"teal.slice::FilteredDataset$clear_filter_states() teal.slice::FilteredDataset$finalize() teal.slice::FilteredDataset$format() teal.slice::FilteredDataset$get_call() teal.slice::FilteredDataset$get_dataname() teal.slice::FilteredDataset$get_dataset() teal.slice::FilteredDataset$get_dataset_label() teal.slice::FilteredDataset$get_filter_state() teal.slice::FilteredDataset$get_keys() teal.slice::FilteredDataset$print() teal.slice::FilteredDataset$srv_active() teal.slice::FilteredDataset$srv_add() teal.slice::FilteredDataset$ui_active()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"MAEFilteredDataset$new() MAEFilteredDataset$set_filter_state() MAEFilteredDataset$remove_filter_state() MAEFilteredDataset$ui_add() MAEFilteredDataset$get_filter_overview() MAEFilteredDataset$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"Initialize MAEFilteredDataset object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"","code":"MAEFilteredDataset$new(   dataset,   dataname,   keys = character(0),   label = character(0) )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"dataset (MulitiAssayExperiment) single MulitiAssayExperiment filters rendered. dataname (character(1)) syntactically valid name given dataset. keys (character) optional vector primary key column names. label (character(1)) label describe dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"Object class MAEFilteredDataset, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"method-set-filter-state-","dir":"Reference","previous_headings":"","what":"Method set_filter_state()","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"Set filter state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"","code":"MAEFilteredDataset$set_filter_state(state)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"state (teal_slices)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"method-remove-filter-state-","dir":"Reference","previous_headings":"","what":"Method remove_filter_state()","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"Remove one FilterState MAEFilteredDataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"","code":"MAEFilteredDataset$remove_filter_state(state)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"state (teal_slices) specifying FilterState objects remove; teal_slices may contain dataname varname, elements ignored.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"method-ui-add-","dir":"Reference","previous_headings":"","what":"Method ui_add()","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"UI module add filter variable dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"","code":"MAEFilteredDataset$ui_add(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"shiny.tag","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"method-get-filter-overview-","dir":"Reference","previous_headings":"","what":"Method get_filter_overview()","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"Creates row filter overview form dataname -- observations (remaining/total) -- subjects (remaining/total) - MAE","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"","code":"MAEFilteredDataset$get_filter_overview()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"data.frame.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"","code":"MAEFilteredDataset$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MAEFilteredDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MAEFilteredDataset R6 class ‚Äî MAEFilteredDataset","text":"","code":"# use non-exported function from teal.slice MAEFilteredDataset <- getFromNamespace(\"MAEFilteredDataset\", \"teal.slice\")  data(miniACC, package = \"MultiAssayExperiment\") dataset <- MAEFilteredDataset$new(miniACC, \"MAE\") fs <- teal_slices(   teal_slice(     dataname = \"MAE\", varname = \"years_to_birth\", selected = c(30, 50), keep_na = TRUE   ),   teal_slice(     dataname = \"MAE\", varname = \"vital_status\", selected = \"1\", keep_na = FALSE   ),   teal_slice(     dataname = \"MAE\", varname = \"gender\", selected = \"female\", keep_na = TRUE   ),   teal_slice(     dataname = \"MAE\", varname = \"ARRAY_TYPE\", selected = \"\", keep_na = TRUE   ) ) dataset$set_filter_state(state = fs) #> Warning: filters for columns: ARRAY_TYPE excluded from MAE  library(shiny) isolate(dataset$get_filter_state()) #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"MAE\", #>       \"varname\"        : \"years_to_birth\", #>       \"id\"             : \"MAE years_to_birth\", #>       \"choices\"        : [14, 83], #>       \"selected\"       : [30, 50], #>       \"keep_na\"        : true, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     }, #>     { #>       \"dataname\"       : \"MAE\", #>       \"varname\"        : \"vital_status\", #>       \"id\"             : \"MAE vital_status\", #>       \"choices\"        : [\"0\", \"1\"], #>       \"selected\"       : [\"1\"], #>       \"keep_na\"        : false, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     }, #>     { #>       \"dataname\"       : \"MAE\", #>       \"varname\"        : \"gender\", #>       \"id\"             : \"MAE gender\", #>       \"choices\"        : [\"female\", \"male\"], #>       \"selected\"       : [\"female\"], #>       \"keep_na\"        : true, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     } #>   ], #>   \"attributes\": { #>     \"include_varnames\" : { #>       \"MAE\"            : [\"patientID\", \"years_to_birth\", ... #>     }, #>     \"count_type\"       : \"none\", #>     \"allow_add\"        : true #>   } #> }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/MatrixFilterStates.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterStates subclass for matrices ‚Äî MatrixFilterStates","title":"FilterStates subclass for matrices ‚Äî MatrixFilterStates","text":"Handles filter states matrix.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MatrixFilterStates.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FilterStates subclass for matrices ‚Äî MatrixFilterStates","text":"teal.slice::FilterStates -> MatrixFilterStates","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MatrixFilterStates.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FilterStates subclass for matrices ‚Äî MatrixFilterStates","text":"teal.slice::FilterStates$clear_filter_states() teal.slice::FilterStates$finalize() teal.slice::FilterStates$format() teal.slice::FilterStates$get_call() teal.slice::FilterStates$get_filter_state() teal.slice::FilterStates$print() teal.slice::FilterStates$remove_filter_state() teal.slice::FilterStates$set_filter_state() teal.slice::FilterStates$srv_active() teal.slice::FilterStates$srv_add() teal.slice::FilterStates$ui_active() teal.slice::FilterStates$ui_add()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MatrixFilterStates.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterStates subclass for matrices ‚Äî MatrixFilterStates","text":"MatrixFilterStates$new() MatrixFilterStates$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MatrixFilterStates.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilterStates subclass for matrices ‚Äî MatrixFilterStates","text":"Initialize MatrixFilterStates object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MatrixFilterStates.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates subclass for matrices ‚Äî MatrixFilterStates","text":"","code":"MatrixFilterStates$new(   data,   data_reactive = function(sid = \"\") NULL,   dataname,   datalabel = NULL )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/MatrixFilterStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates subclass for matrices ‚Äî MatrixFilterStates","text":"data (matrix) R object subset function applied . data_reactive (function(sid)) return matrix object NULL. object needed FilterState counts updated change filters. function returns NULL filtered counts shown. Function sid argument character. dataname (character(1)) name data used subset expression. Passed function argument attached FilterStates. datalabel (character(1)) optional text label. name experiment.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MatrixFilterStates.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterStates subclass for matrices ‚Äî MatrixFilterStates","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/MatrixFilterStates.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates subclass for matrices ‚Äî MatrixFilterStates","text":"","code":"MatrixFilterStates$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/MatrixFilterStates.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates subclass for matrices ‚Äî MatrixFilterStates","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterState object for numeric data ‚Äî RangeFilterState","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"Manages choosing numeric range.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"teal.slice::FilterState -> RangeFilterState","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"teal.slice::FilterState$finalize() teal.slice::FilterState$format() teal.slice::FilterState$get_state() teal.slice::FilterState$print() teal.slice::FilterState$server() teal.slice::FilterState$set_state() teal.slice::FilterState$ui()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"RangeFilterState$new() RangeFilterState$get_call() RangeFilterState$get_keep_inf() RangeFilterState$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"Initialize FilterState object range selection.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"","code":"RangeFilterState$new(   x,   x_reactive = reactive(NULL),   extract_type = character(0),   slice )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"x (numeric) variable filtered. x_reactive (reactive) returning vector type x. used update counts following change values filtered dataset. set reactive(NULL) counts based filtered dataset shown. extract_type (character) specifying whether condition calls prefixed dataname. Possible values: character(0) (default) varname condition call prefixed \"list\" varname condition call returned <dataname>$<varname> \"matrix\" varname condition call returned <dataname>[, <varname>] slice (teal_slice) specification filter state. teal_slice stored object set_state directly manipulates values within teal_slice. get_state returns teal_slice object can reused places. Note teal_slice reactiveValues, means reference semantics, .e. changes made object automatically reflected places refer teal_slice.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"Object class RangeFilterState, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"method-get-call-","dir":"Reference","previous_headings":"","what":"Method get_call()","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"Returns reproducible condition call current selection. class returned call looks like <varname> >= <min value> & <varname> <= <max value> optional .na(<varname>) .finite(<varname>).","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"","code":"RangeFilterState$get_call(dataname)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"dataname name data set; defaults private$get_dataname()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"call","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"method-get-keep-inf-","dir":"Reference","previous_headings":"","what":"Method get_keep_inf()","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"Returns current keep_inf selection.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"","code":"RangeFilterState$get_keep_inf()"},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"logical(1)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"","code":"RangeFilterState$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/RangeFilterState.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FilterState object for numeric data ‚Äî RangeFilterState","text":"","code":"# use non-exported function from teal.slice include_css_files <- getFromNamespace(\"include_css_files\", \"teal.slice\") include_js_files <- getFromNamespace(\"include_js_files\", \"teal.slice\") RangeFilterState <- getFromNamespace(\"RangeFilterState\", \"teal.slice\")  library(shiny)  filter_state <- RangeFilterState$new(   x = c(NA, Inf, seq(1:10)),   slice = teal_slice(varname = \"x\", dataname = \"data\") ) isolate(filter_state$get_call()) #> NULL filter_state$set_state(   teal_slice(     dataname = \"data\",     varname = \"x\",     selected = c(3L, 8L),     keep_na = TRUE,     keep_inf = TRUE   ) ) isolate(filter_state$get_call()) #> is.na(x) | (is.infinite(x) | x >= 3 & x <= 8)  # working filter in an app library(shinyjs)  data_range <- c(runif(100, 0, 1), NA, Inf) fs <- RangeFilterState$new(   x = data_range,   slice = teal_slice(     dataname = \"data\",     varname = \"x\",     selected = c(0.15, 0.93),     keep_na = TRUE,     keep_inf = TRUE   ) )  ui <- fluidPage(   useShinyjs(),   include_css_files(pattern = \"filter-panel\"),   include_js_files(pattern = \"count-bar-labels\"),   column(4, tags$div(     tags$h4(\"RangeFilterState\"),     fs$ui(\"fs\")   )),   column(4, tags$div(     id = \"outputs\", # div id is needed for toggling the element     tags$h4(\"Condition (i.e. call)\"), # display the condition call generated by this FilterState     textOutput(\"condition_range\"), tags$br(),     tags$h4(\"Unformatted state\"), # display raw filter state     textOutput(\"unformatted_range\"), tags$br(),     tags$h4(\"Formatted state\"), # display human readable filter state     textOutput(\"formatted_range\"), tags$br()   )),   column(4, tags$div(     tags$h4(\"Programmatic filter control\"),     actionButton(\"button1_range\", \"set drop NA\", width = \"100%\"), tags$br(),     actionButton(\"button2_range\", \"set keep NA\", width = \"100%\"), tags$br(),     actionButton(\"button3_range\", \"set drop Inf\", width = \"100%\"), tags$br(),     actionButton(\"button4_range\", \"set keep Inf\", width = \"100%\"), tags$br(),     actionButton(\"button5_range\", \"set a range\", width = \"100%\"), tags$br(),     actionButton(\"button6_range\", \"set full range\", width = \"100%\"), tags$br(),     actionButton(\"button0_range\", \"set initial state\", width = \"100%\"), tags$br()   )) )  server <- function(input, output, session) {   fs$server(\"fs\")   output$condition_range <- renderPrint(fs$get_call())   output$formatted_range <- renderText(fs$format())   output$unformatted_range <- renderPrint(fs$get_state())   # modify filter state programmatically   observeEvent(     input$button1_range,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", keep_na = FALSE))   )   observeEvent(     input$button2_range,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", keep_na = TRUE))   )   observeEvent(     input$button3_range,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", keep_inf = FALSE))   )   observeEvent(     input$button4_range,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", keep_inf = TRUE))   )   observeEvent(     input$button5_range,     fs$set_state(       teal_slice(dataname = \"data\", varname = \"x\", selected = c(0.2, 0.74))     )   )   observeEvent(     input$button6_range,     fs$set_state(teal_slice(dataname = \"data\", varname = \"x\", selected = c(0, 1)))   )   observeEvent(     input$button0_range,     fs$set_state(       teal_slice(\"data\", \"variable\", selected = c(0.15, 0.93), keep_na = TRUE, keep_inf = TRUE)     )   ) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"Handles filter states SummaryExperiment.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"teal.slice::FilterStates -> SEFilterStates","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"teal.slice::FilterStates$clear_filter_states() teal.slice::FilterStates$finalize() teal.slice::FilterStates$format() teal.slice::FilterStates$get_call() teal.slice::FilterStates$get_filter_state() teal.slice::FilterStates$print() teal.slice::FilterStates$remove_filter_state() teal.slice::FilterStates$srv_active() teal.slice::FilterStates$ui_active()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"SEFilterStates$new() SEFilterStates$set_filter_state() SEFilterStates$ui_add() SEFilterStates$srv_add() SEFilterStates$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"Initialize SEFilterStates object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"","code":"SEFilterStates$new(   data,   data_reactive = function(sid = \"\") NULL,   dataname,   datalabel = NULL )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"data (SummarizedExperiment) R object subset function applied . data_reactive (function(sid)) return SummarizedExperiment object NULL. object needed FilterState counts updated change filters. function returns NULL filtered counts shown. Function sid argument character. dataname (character(1)) name data used expression specified function argument attached FilterStates. datalabel (character(1)) optional text label. name experiment.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"method-set-filter-state-","dir":"Reference","previous_headings":"","what":"Method set_filter_state()","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"Set filter state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"","code":"SEFilterStates$set_filter_state(state)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"state (teal_slices) teal_slice objects contain field arg %% c(\"subset\", \"select\")","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"method-ui-add-","dir":"Reference","previous_headings":"","what":"Method ui_add()","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"shiny UI module add filter variable.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"","code":"SEFilterStates$ui_add(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"shiny.tag","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"method-srv-add-","dir":"Reference","previous_headings":"","what":"Method srv_add()","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"shiny server module add filter variable. Module controls available choices select filter variable. Selected filter variable removed available choices. Removed filter variable gets back available choices. module unlike FilterStates classes manages two sets filter variables - one colData another rowData.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"","code":"SEFilterStates$srv_add(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"id (character(1)) shiny module instance id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"NULL","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"","code":"SEFilterStates$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/SEFilterStates.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterStates subclass for SummarizedExperiments ‚Äî SEFilterStates","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/calls_combine_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Compose predicates ‚Äî calls_combine_by","title":"Compose predicates ‚Äî calls_combine_by","text":"Combines calls logical operator.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/calls_combine_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compose predicates ‚Äî calls_combine_by","text":"","code":"calls_combine_by(calls, operator)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/calls_combine_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compose predicates ‚Äî calls_combine_by","text":"calls (list) containing calls (symbols) combined operator operator (character(1)) infix operator use predicate composition, e.g. \"&\"","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/calls_combine_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compose predicates ‚Äî calls_combine_by","text":"call elements calls composed operator NULL calls empty list.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/calls_combine_by.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compose predicates ‚Äî calls_combine_by","text":"function used combine logical predicates produced FilterState objects build complete subset expression.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/calls_combine_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compose predicates ‚Äî calls_combine_by","text":"","code":"# use non-exported function from teal.slice calls_combine_by <- getFromNamespace(\"calls_combine_by\", \"teal.slice\")  calls <- list(   quote(SEX == \"F\"), # subsetting on factor   quote(AGE >= 20 & AGE <= 50), # subsetting on range   quote(!SURV) # subsetting on logical ) calls_combine_by(calls, \"&\") #> SEX == \"F\" & (AGE >= 20 & AGE <= 50) & !SURV"},{"path":"https://insightsengineering.github.io/teal.slice/reference/choices_labeled.html","id":null,"dir":"Reference","previous_headings":"","what":"Set ","title":"Set ","text":"often useful marks drop-boxes shiny::selectInput().","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/choices_labeled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set ","text":"","code":"choices_labeled(choices, labels, subset = NULL, types = NULL)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/choices_labeled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set ","text":"choices (character numeric logical) vector labels (character) vector containing labels applied choices. NA \"Label Missing\" used. subset vector subset choices. useful variables need named. argument used, returned vector match order. types vector containing types columns.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/choices_labeled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set ","text":"named character vector.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/choices_labeled.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set ","text":"either choices labels factors, coerced character. Duplicated elements choices get removed.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/coalesce_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursively coalesce list elements. ‚Äî coalesce_r","title":"Recursively coalesce list elements. ‚Äî coalesce_r","text":"Returns first element list NULL, recursively.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/coalesce_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively coalesce list elements. ‚Äî coalesce_r","text":"","code":"coalesce_r(x)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/coalesce_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively coalesce list elements. ‚Äî coalesce_r","text":"x (list), either atomic vectors named lists","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/coalesce_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursively coalesce list elements. ‚Äî coalesce_r","text":"Either atomic vector length 1 (potentially nested) list.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/coalesce_r.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recursively coalesce list elements. ‚Äî coalesce_r","text":"Given list atomic vectors, first non-null element returned. Given list lists, names found elements list first non-null element given name returned. function used internally c.teal_slices manage teal_slices attributes.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/countBar.html","id":null,"dir":"Reference","previous_headings":"","what":"Progress bar with label ‚Äî countBar","title":"Progress bar with label ‚Äî countBar","text":"shiny element displaying progress bar observation count.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/countBar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress bar with label ‚Äî countBar","text":"","code":"countBar(inputId, label, countmax, countnow = NULL, counttotal = countmax)  updateCountBar(   session = getDefaultReactiveDomain(),   inputId,   label,   countmax,   countnow = NULL,   counttotal )  updateCountText(   session = getDefaultReactiveDomain(),   inputId,   label,   countmax,   countnow )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/countBar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress bar with label ‚Äî countBar","text":"inputId (character(1)) shiny id parent element (e.g. check-box group input). label (character(1)) Text display followed counts. countmax (numeric(1)) Maximum count single element. countnow (numeric(1)) Current count single element. counttotal (numeric(1)) Sum total maximum counts elements, see Details. session (session) shiny session object passed function given shinyServer.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/countBar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Progress bar with label ‚Äî countBar","text":"shiny.tag object progress bar label.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/countBar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Progress bar with label ‚Äî countBar","text":"progress bar created visualize number counts variable, filling text label. progress bar width derived fraction container width: style = \"width: <countmax> / <counttotal>%\", progress bar filled fraction <countnow> / <countmax>, text label obtained <label> (<countnow> / <countmax>).","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/countBars.html","id":null,"dir":"Reference","previous_headings":"","what":"Progress bars with labels ‚Äî countBars","title":"Progress bars with labels ‚Äî countBars","text":"shiny element displaying series progress bars observation counts.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/countBars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress bars with labels ‚Äî countBars","text":"","code":"countBars(inputId, choices, countsmax, countsnow = NULL)  updateCountBars(   session = getDefaultReactiveDomain(),   inputId,   choices,   countsmax,   countsnow = NULL )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/countBars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress bars with labels ‚Äî countBars","text":"inputId (character(1)) shiny id parent element (e.g. check-box group input). choices (vector) Available values. Used determine label text. countsmax (numeric) Maximum counts element. Must length choices. countsnow (numeric) Current counts element. Must length choices. session (session) shiny session object passed function given shinyServer.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/countBars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Progress bars with labels ‚Äî countBars","text":"List shiny.tags. Creates number progress bar elements, one value choices. widths progress bars add full width container. progress bar text label contains name value number counts. filter panel used count_type = \"\", progress bars filled according number counts remaining current selection label show current total number counts. child element can unique id attribute used independently.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/countBars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Progress bars with labels ‚Äî countBars","text":"","code":"# use non-exported function from teal.slice include_js_files <- getFromNamespace(\"include_js_files\", \"teal.slice\") include_css_files <- getFromNamespace(\"include_css_files\", \"teal.slice\") countBars <- getFromNamespace(\"countBars\", \"teal.slice\") updateCountBars <- getFromNamespace(\"updateCountBars\", \"teal.slice\")  library(shiny)  choices <- sample(as.factor(c(\"a\", \"b\", \"c\")), size = 20, replace = TRUE) counts <- table(choices) labels <- countBars(   inputId = \"counts\",   choices = c(\"a\", \"b\", \"c\"),   countsmax = counts,   countsnow = unname(counts) )  ui <- fluidPage(   tags$div(     class = \"choices_state\",     include_js_files(\"count-bar-labels.js\"),     include_css_files(pattern = \"filter-panel\"),     checkboxGroupInput(       inputId = \"choices\",       selected = levels(choices),       choiceNames = labels,       choiceValues = levels(choices),       label = NULL     )   ) ) server <- function(input, output, session) {   observeEvent(input$choices, {     new_counts <- counts     new_counts[!names(new_counts) %in% input$choices] <- 0     updateCountBars(       inputId = \"counts\",       choices = levels(choices),       countsmax = counts,       countsnow = unname(new_counts)     )   }) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/data_choices_labeled.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a choices_labeled object ‚Äî data_choices_labeled","title":"Returns a choices_labeled object ‚Äî data_choices_labeled","text":"Returns choices_labeled object","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/data_choices_labeled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a choices_labeled object ‚Äî data_choices_labeled","text":"","code":"data_choices_labeled(   data,   choices,   varlabels = teal.data::col_labels(data, fill = TRUE),   keys = character(0) )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/data_choices_labeled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a choices_labeled object ‚Äî data_choices_labeled","text":"data (data.frame DFrame list) labels can taken case varlabels specified. data must specified varlabels specified. choices (character) vector chosen variables varlabels (character) labels variables data keys (character) names key columns data","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/data_choices_labeled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a choices_labeled object ‚Äî data_choices_labeled","text":"character(0) choices empty; choices_labeled object otherwise","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/dot-finalize_session_bindings.html","id":null,"dir":"Reference","previous_headings":"","what":"Destroys inputs and observers stored in private$session_bindings ‚Äî .finalize_session_bindings","title":"Destroys inputs and observers stored in private$session_bindings ‚Äî .finalize_session_bindings","text":"Call destroy method remove observer input obsolete session happens filter_panel_srv called new FilteredData object. Inputs stored directly field destroy method. Instead, store callback destroy function inputs removes bindings session.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/dot-finalize_session_bindings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Destroys inputs and observers stored in private$session_bindings ‚Äî .finalize_session_bindings","text":"","code":".finalize_session_bindings(self, private)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/dot-finalize_session_bindings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Destroys inputs and observers stored in private$session_bindings ‚Äî .finalize_session_bindings","text":"self, private slots R6 class","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/dot-finalize_session_bindings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Destroys inputs and observers stored in private$session_bindings ‚Äî .finalize_session_bindings","text":"NULL invisibly","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/dot-table.html","id":null,"dir":"Reference","previous_headings":"","what":"table handling POSIXlt ‚Äî .table","title":"table handling POSIXlt ‚Äî .table","text":"table handling POSIXlt","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/dot-table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"table handling POSIXlt ‚Äî .table","text":"","code":".table(x)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/dot-table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"table handling POSIXlt ‚Äî .table","text":"x (vector) variable get counts .","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/dot-table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"table handling POSIXlt ‚Äî .table","text":"vector counts named unique values x.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/eval_expr_with_msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate expression with meaningful message ‚Äî eval_expr_with_msg","title":"Evaluate expression with meaningful message ‚Äî eval_expr_with_msg","text":"Method created FilteredData object execute filter call meaningful message. evaluation used environment contain necessary bindings.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/eval_expr_with_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate expression with meaningful message ‚Äî eval_expr_with_msg","text":"","code":"eval_expr_with_msg(expr, env)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/eval_expr_with_msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate expression with meaningful message ‚Äî eval_expr_with_msg","text":"expr (language) env (environment) expression evaluated.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/eval_expr_with_msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate expression with meaningful message ‚Äî eval_expr_with_msg","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/fetch_bs_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hex code of the current Bootstrap theme color. ‚Äî fetch_bs_color","title":"Get hex code of the current Bootstrap theme color. ‚Äî fetch_bs_color","text":"Determines color specification currently active Bootstrap color theme returns one queried color.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/fetch_bs_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hex code of the current Bootstrap theme color. ‚Äî fetch_bs_color","text":"","code":"fetch_bs_color(color, alpha = NULL)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/fetch_bs_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get hex code of the current Bootstrap theme color. ‚Äî fetch_bs_color","text":"color (character(1)) naming one available theme colors alpha either numeric(1) character(1) specifying transparency range 0-1 hexadecimal value 00-ff, respectively; set NULL omit adding alpha channel","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/fetch_bs_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get hex code of the current Bootstrap theme color. ‚Äî fetch_bs_color","text":"Named character(1) containing hexadecimal color representation.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/fetch_bs_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get hex code of the current Bootstrap theme color. ‚Äî fetch_bs_color","text":"","code":"fetch_bs_color <- getFromNamespace(\"fetch_bs_color\", \"teal.slice\") fetch_bs_color(\"primary\") #> [1] \"#0d6efd\" fetch_bs_color(\"danger\", 0.35) #> [1] \"#dc35455a\" fetch_bs_color(\"danger\", \"80\") #> [1] \"#dc354580\""},{"path":"https://insightsengineering.github.io/teal.slice/reference/filter_state_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Managing FilteredData states ‚Äî filter_state_api","title":"Managing FilteredData states ‚Äî filter_state_api","text":"Set, get remove filter states FilteredData object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/filter_state_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Managing FilteredData states ‚Äî filter_state_api","text":"","code":"set_filter_state(datasets, filter)  get_filter_state(datasets)  remove_filter_state(datasets, filter)  clear_filter_states(datasets, force = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/filter_state_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Managing FilteredData states ‚Äî filter_state_api","text":"datasets (FilteredData) object store filter state filtered datasets, shared across modules see FilteredData details filter (teal_slices) specify filters place app start-force (logical(1)) flag specifying whether include anchored filter states.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/filter_state_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Managing FilteredData states ‚Äî filter_state_api","text":"set_*, remove_* clear_filter_state return NULL invisibly get_filter_state returns named teal_slices object containing teal_slice every existing FilterState","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/filter_state_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Managing FilteredData states ‚Äî filter_state_api","text":"","code":"datasets <- init_filtered_data(list(iris = iris, mtcars = mtcars)) fs <- teal_slices(   teal_slice(dataname = \"iris\", varname = \"Species\", selected = c(\"setosa\", \"versicolor\")),   teal_slice(dataname = \"iris\", varname = \"Sepal.Length\", selected = c(5.1, 6.4)),   teal_slice(dataname = \"mtcars\", varname = \"gear\", selected = c(4, 5)),   teal_slice(dataname = \"mtcars\", varname = \"carb\", selected = c(4, 10)) )  # set initial filter state set_filter_state(datasets, filter = fs)  # get filter state get_filter_state(datasets) #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"iris\", #>       \"varname\"        : \"Species\", #>       \"id\"             : \"iris Species\", #>       \"choices\"        : [\"setosa\", \"versicolor\", \"virgin... #>       \"selected\"       : [\"setosa\", \"versicolor\"], #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     }, #>     { #>       \"dataname\"       : \"iris\", #>       \"varname\"        : \"Sepal.Length\", #>       \"id\"             : \"iris Sepal.Length\", #>       \"choices\"        : [4.2999999999999998, 7.900000000... #>       \"selected\"       : [5.0999999999999996, 6.400000000... #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     }, #>     { #>       \"dataname\"       : \"mtcars\", #>       \"varname\"        : \"gear\", #>       \"id\"             : \"mtcars gear\", #>       \"choices\"        : [\"3\", \"4\", \"5\"], #>       \"selected\"       : [\"4\", \"5\"], #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     }, #>     { #>       \"dataname\"       : \"mtcars\", #>       \"varname\"        : \"carb\", #>       \"id\"             : \"mtcars carb\", #>       \"choices\"        : [1, 8], #>       \"selected\"       : [4, 8], #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true #>     } #>   ], #>   \"attributes\": { #>     \"include_varnames\" : { #>       \"iris\"           : [\"Sepal.Length\", \"Sepal.Width\", ... #>       \"mtcars\"         : [\"mpg\", \"cyl\", \"disp\", \"hp\", \"dr... #>     }, #>     \"count_type\"       : \"none\", #>     \"allow_add\"        : true #>   } #> }   # modify filter state set_filter_state(   datasets,   teal_slices(     teal_slice(dataname = \"iris\", varname = \"Species\", selected = \"setosa\", keep_na = TRUE)   ) )  # remove specific filters remove_filter_state(   datasets,   teal_slices(     teal_slice(dataname = \"iris\", varname = \"Species\"),     teal_slice(dataname = \"mtcars\", varname = \"gear\"),     teal_slice(dataname = \"mtcars\", varname = \"carb\")   ) )  # remove all states clear_filter_states(datasets)  # \\donttest{ if (requireNamespace(\"MultiAssayExperiment\", quietly = TRUE)) {   # Requires MultiAssayExperiment from Bioconductor   data(miniACC, package = \"MultiAssayExperiment\")    datasets <- init_filtered_data(list(mae = miniACC))   fs <- teal_slices(     teal_slice(       dataname = \"mae\", varname = \"years_to_birth\", selected = c(30, 50),       keep_na = TRUE, keep_inf = FALSE     ),     teal_slice(       dataname = \"mae\", varname = \"vital_status\", selected = \"1\",       keep_na = FALSE     ),     teal_slice(       dataname = \"mae\", varname = \"gender\", selected = \"female\",       keep_na = TRUE     ),     teal_slice(       dataname = \"mae\", varname = \"ARRAY_TYPE\", selected = \"\",       keep_na = TRUE, experiment = \"RPPAArray\", arg = \"subset\"     )   )    # set initial filter state   set_filter_state(datasets, filter = fs)    # get filter state   get_filter_state(datasets)    # modify filter state   set_filter_state(     datasets,     teal_slices(       teal_slice(dataname = \"mae\", varname = \"years_to_birth\", selected = c(40, 60))     )   )    # remove specific filters   remove_filter_state(     datasets,     teal_slices(       teal_slice(dataname = \"mae\", varname = \"years_to_birth\"),       teal_slice(dataname = \"mae\", varname = \"vital_status\")     )   )    # remove all states   clear_filter_states(datasets) } # }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/format_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Format POSIXt for storage ‚Äî format_time","title":"Format POSIXt for storage ‚Äî format_time","text":"Convert POSIXt date time object character representation UTC time zone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/format_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format POSIXt for storage ‚Äî format_time","text":"","code":"format_time(x)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/format_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format POSIXt for storage ‚Äî format_time","text":"x (POSIXt) vector date time values anything else","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/format_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format POSIXt for storage ‚Äî format_time","text":"x class POSIXt, character vector, otherwise x .","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/format_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format POSIXt for storage ‚Äî format_time","text":"Date times stored string representations expressed UTC time zone. storage format YYYY-MM-DD HH:MM:SS.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_default_slice_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Default teal_slice id ‚Äî get_default_slice_id","title":"Default teal_slice id ‚Äî get_default_slice_id","text":"Create slice id none provided.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_default_slice_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default teal_slice id ‚Äî get_default_slice_id","text":"","code":"get_default_slice_id(x)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_default_slice_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default teal_slice id ‚Äî get_default_slice_id","text":"x (teal_slice list)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_default_slice_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default teal_slice id ‚Äî get_default_slice_id","text":"(character(1)) id teal_slice object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_default_slice_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default teal_slice id ‚Äî get_default_slice_id","text":"Function returns default id teal_slice object needs distinct teal_slice objects created FilterStates object. Returned id can treated location vector FilterState built: data.frame id concatenates dataname varname. MultiAssayExperiment id concatenates dataname, varname, experiment arg, one can add teal_slice varname exists multiple SummarizedExperiments exists colData rowData given experiment. vector teal.slice allow activate one filters. case teal_slice_expr id mandatory must unique.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_filter_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets filter expression for multiple datanames taking into account its order. ‚Äî get_filter_expr","title":"Gets filter expression for multiple datanames taking into account its order. ‚Äî get_filter_expr","text":"used Show R Code button.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_filter_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets filter expression for multiple datanames taking into account its order. ‚Äî get_filter_expr","text":"","code":"get_filter_expr(datasets, datanames = datasets$datanames())"},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_filter_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets filter expression for multiple datanames taking into account its order. ‚Äî get_filter_expr","text":"datasets (FilteredData) datanames (character) vector dataset names","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_filter_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets filter expression for multiple datanames taking into account its order. ‚Äî get_filter_expr","text":"character string containing subset expressions.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_supported_filter_varnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets supported filterable variable names ‚Äî get_supported_filter_varnames","title":"Gets supported filterable variable names ‚Äî get_supported_filter_varnames","text":"Gets filterable variable names given object. names match variables classes vector teal.slice:::.filterable_class.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_supported_filter_varnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets supported filterable variable names ‚Äî get_supported_filter_varnames","text":"","code":"get_supported_filter_varnames(data)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_supported_filter_varnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets supported filterable variable names ‚Äî get_supported_filter_varnames","text":"data R object containing elements class can checked vapply apply.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_supported_filter_varnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets supported filterable variable names ‚Äî get_supported_filter_varnames","text":"character vector variable names.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/get_supported_filter_varnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets supported filterable variable names ‚Äî get_supported_filter_varnames","text":"","code":"# use non-exported function from teal.slice get_supported_filter_varnames <- getFromNamespace(\"get_supported_filter_varnames\", \"teal.slice\")  df <- data.frame(   a = letters[1:3],   b = 1:3,   c = Sys.Date() + 1:3,   d = Sys.time() + 1:3,   z = complex(3) ) get_supported_filter_varnames(df) #> [1] \"a\" \"b\" \"c\" \"d\""},{"path":"https://insightsengineering.github.io/teal.slice/reference/include_css_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"system.file used access files packages, work devtools. Therefore, redefine method package needed. Thus, export method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/include_css_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"","code":"include_css_files(pattern = \"*\")"},{"path":"https://insightsengineering.github.io/teal.slice/reference/include_css_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"pattern (character) pattern files included","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/include_css_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"HTML code includes CSS files","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/include_js_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Include JS files from /inst/js/ package directory to application header ‚Äî include_js_files","title":"Include JS files from /inst/js/ package directory to application header ‚Äî include_js_files","text":"system.file used access files packages, work devtools. Therefore, redefine method package needed. Thus, export method.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/include_js_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include JS files from /inst/js/ package directory to application header ‚Äî include_js_files","text":"","code":"include_js_files(pattern)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/include_js_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include JS files from /inst/js/ package directory to application header ‚Äî include_js_files","text":"pattern (character) pattern files included, passed system.file","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/include_js_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Include JS files from /inst/js/ package directory to application header ‚Äî include_js_files","text":"HTML code includes JS files","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize FilterState ‚Äî init_filter_state","title":"Initialize FilterState ‚Äî init_filter_state","text":"Initializes FilterState object corresponding class filtered variable.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize FilterState ‚Äî init_filter_state","text":"","code":"init_filter_state(   x,   x_reactive = reactive(NULL),   slice,   extract_type = character(0) )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize FilterState ‚Äî init_filter_state","text":"x (vector) variable filtered. x_reactive (reactive) returning vector type x. used update counts following change values filtered dataset. set reactive(NULL) counts based filtered dataset shown. slice (teal_slice) specification filter state. teal_slice stored object set_state directly manipulates values within teal_slice. get_state returns teal_slice object can reused places. Note teal_slice reactiveValues, means reference semantics, .e. changes made object automatically reflected places refer teal_slice. extract_type (character) specifying whether condition calls prefixed dataname. Possible values: character(0) (default) varname condition call prefixed \"list\" varname condition call returned <dataname>$<varname> \"matrix\" varname condition call returned <dataname>[, <varname>]","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize FilterState ‚Äî init_filter_state","text":"FilterState object","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize FilterState ‚Äî init_filter_state","text":"","code":"# use non-exported function from teal.slice init_filter_state <- getFromNamespace(\"init_filter_state\", \"teal.slice\")  library(shiny)  filter_state <- init_filter_state(   x = c(1:10, NA, Inf),   x_reactive = reactive(c(1:10, NA, Inf)),   slice = teal_slice(     varname = \"varname\",     dataname = \"dataname\"   ),   extract_type = \"matrix\" )  isolate(filter_state$get_call()) #> NULL  # working filter in an app  ui <- fluidPage(   filter_state$ui(id = \"app\"),   verbatimTextOutput(\"call\") ) server <- function(input, output, session) {   filter_state$server(\"app\")    output$call <- renderText(     deparse1(filter_state$get_call(), collapse = \"\\n\")   ) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_state_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a FilterStateExpr object ‚Äî init_filter_state_expr","title":"Initialize a FilterStateExpr object ‚Äî init_filter_state_expr","text":"Initialize FilterStateExpr object","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_state_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a FilterStateExpr object ‚Äî init_filter_state_expr","text":"","code":"init_filter_state_expr(slice)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_state_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a FilterStateExpr object ‚Äî init_filter_state_expr","text":"slice (teal_slice_expr) specifying filter state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_state_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a FilterStateExpr object ‚Äî init_filter_state_expr","text":"FilterStateExpr object","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize FilterStates object ‚Äî init_filter_states","title":"Initialize FilterStates object ‚Äî init_filter_states","text":"Initialize FilterStates object","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize FilterStates object ‚Äî init_filter_states","text":"","code":"init_filter_states(   data,   data_reactive = reactive(NULL),   dataname,   datalabel = NULL,   ... )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize FilterStates object ‚Äî init_filter_states","text":"data (data.frame MultiAssayExperiment SummarizedExperiment matrix) object subset. data_reactive (function(sid)) return object type data NULL. function needed FilterState shiny module update counts filtered data changes. function returns NULL filtered counts shown. Function sid argument character related sid argument get_call method. dataname (character(1)) name data used subset expression, passed function argument attached FilterStates. datalabel (character(1)) optional text label. ... optional, additional arguments specific classes: keys.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize FilterStates object ‚Äî init_filter_states","text":"Object class FilterStates.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filter_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize FilterStates object ‚Äî init_filter_states","text":"","code":"# use non-exported function from teal.slice init_filter_states <- getFromNamespace(\"init_filter_states\", \"teal.slice\")  df <- data.frame(   character = letters,   numeric = seq_along(letters),   date = seq(Sys.Date(), length.out = length(letters), by = \"1 day\"),   datetime = seq(Sys.time(), length.out = length(letters), by = \"33.33 hours\") ) rf <- init_filter_states(   data = df,   dataname = \"DF\" )  library(shiny) ui <- fluidPage(   actionButton(\"clear\", tags$span(icon(\"xmark\"), \"Remove all filters\")),   rf$ui_add(id = \"add\"),   rf$ui_active(\"states\"),   verbatimTextOutput(\"expr\"), )  server <- function(input, output, session) {   rf$srv_add(id = \"add\")   rf$srv_active(id = \"states\")   output$expr <- renderText({     deparse1(rf$get_call(), collapse = \"\\n\")   })   observeEvent(input$clear, rf$clear_filter_states()) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filtered_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize FilteredData ‚Äî init_filtered_data","title":"Initialize FilteredData ‚Äî init_filtered_data","text":"Function creates FilteredData object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filtered_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize FilteredData ‚Äî init_filtered_data","text":"","code":"init_filtered_data(x, join_keys = teal.data::join_keys())"},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filtered_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize FilteredData ‚Äî init_filtered_data","text":"x (named list) datasets. join_keys (join_keys) see teal.data::join_keys().","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filtered_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize FilteredData ‚Äî init_filtered_data","text":"Object class FilteredData.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filtered_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize FilteredData ‚Äî init_filtered_data","text":"","code":"datasets <- init_filtered_data(list(iris = iris, mtcars = mtcars)) datasets #> FilteredData: #> { #>   \"slices\": [], #>   \"attributes\": { #>     \"include_varnames\" : { #>       \"iris\"           : [\"Sepal.Length\", \"Sepal.Width\", ... #>       \"mtcars\"         : [\"mpg\", \"cyl\", \"disp\", \"hp\", \"dr... #>     }, #>     \"count_type\"       : \"none\", #>     \"allow_add\"        : true #>   } #> }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filtered_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize FilteredDataset ‚Äî init_filtered_dataset","title":"Initialize FilteredDataset ‚Äî init_filtered_dataset","text":"Initializes FilteredDataset object corresponding class filtered dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filtered_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize FilteredDataset ‚Äî init_filtered_dataset","text":"","code":"init_filtered_dataset(   dataset,   dataname,   keys = character(0),   parent_name = character(0),   parent = reactive(dataset),   join_keys = character(0),   label = attr(dataset, \"label\", exact = TRUE) )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filtered_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize FilteredDataset ‚Äî init_filtered_dataset","text":"dataset object dataname (character(1)) syntactically valid name given dataset. keys (character) optional vector primary key column names. parent_name (character(1)) name parent dataset. parent (reactive) returns filtered data.frame FilteredDataset named parent_name. Passing parent results reactive link causes re-filtering dataset based changes parent. join_keys (character) vector names columns dataset join parent dataset. column names parent match , given names vector. label (character(1)) label describe dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filtered_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize FilteredDataset ‚Äî init_filtered_dataset","text":"Object class FilteredDataset.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filtered_dataset.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Initialize FilteredDataset ‚Äî init_filtered_dataset","text":"function exported allow packages extend teal.slice treated internal. Breaking changes may occur without warning. recommend consulting package maintainer using .","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/init_filtered_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize FilteredDataset ‚Äî init_filtered_dataset","text":"","code":"# DataframeFilteredDataset example library(shiny)  iris_fd <- init_filtered_dataset(iris, dataname = \"iris\") ui <- fluidPage(   iris_fd$ui_add(id = \"add\"),   iris_fd$ui_active(\"dataset\"),   verbatimTextOutput(\"call\") ) server <- function(input, output, session) {   iris_fd$srv_add(id = \"add\")   iris_fd$srv_active(id = \"dataset\")    output$call <- renderText({     paste(       vapply(iris_fd$get_call(), deparse1, character(1), collapse = \"\\n\"),       collapse = \"\\n\"     )   }) } if (interactive()) {   shinyApp(ui, server) }  # \\donttest{ if (requireNamespace(\"MultiAssayExperiment\", quietly = TRUE)) {   # MAEFilteredDataset example   library(shiny)    data(miniACC, package = \"MultiAssayExperiment\")    MAE_fd <- init_filtered_dataset(miniACC, \"MAE\")   ui <- fluidPage(     MAE_fd$ui_add(id = \"add\"),     MAE_fd$ui_active(\"dataset\"),     verbatimTextOutput(\"call\")   )   server <- function(input, output, session) {     MAE_fd$srv_add(id = \"add\")     MAE_fd$srv_active(id = \"dataset\")     output$call <- renderText({       paste(         vapply(MAE_fd$get_call(), deparse1, character(1), collapse = \"\\n\"),         collapse = \"\\n\"       )     })   }   if (interactive()) {     shinyApp(ui, server)   } } # }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/jsonify.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list to a justified JSON string ‚Äî jsonify","title":"Convert a list to a justified JSON string ‚Äî jsonify","text":"function takes list converts JSON string. resulting JSON string optionally justified improve readability trimmed easier fit console printing.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/jsonify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list to a justified JSON string ‚Äî jsonify","text":"","code":"jsonify(x, trim_lines)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/jsonify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list to a justified JSON string ‚Äî jsonify","text":"x (list), possibly recursive, obtained teal_slice teal_slices. trim_lines (logical(1)) flag specifying whether trim lines JSON string.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/jsonify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list to a justified JSON string ‚Äî jsonify","text":"JSON string representation input list.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/justify_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Justify colons in JSON string ‚Äî justify_json","title":"Justify colons in JSON string ‚Äî justify_json","text":"function takes JSON string input, splits lines, pads element names spaces colons justified lines.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/justify_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Justify colons in JSON string ‚Äî justify_json","text":"","code":"justify_json(json)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/justify_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Justify colons in JSON string ‚Äî justify_json","text":"json (character(1)) JSON string.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/justify_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Justify colons in JSON string ‚Äî justify_json","text":"list character strings, can collapsed JSON string.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/make_c_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Build concatenating call ‚Äî make_c_call","title":"Build concatenating call ‚Äî make_c_call","text":"function takes vector values returns c call. vector one element, element returned directly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/make_c_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build concatenating call ‚Äî make_c_call","text":"","code":"make_c_call(choices)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/make_c_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build concatenating call ‚Äî make_c_call","text":"choices vector values.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/make_c_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build concatenating call ‚Äî make_c_call","text":"c call.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/make_c_call.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build concatenating call ‚Äî make_c_call","text":"","code":"# use non-exported function from teal.slice make_c_call <- getFromNamespace(\"make_c_call\", \"teal.slice\") make_c_call(1:3) #> c(1L, 2L, 3L) make_c_call(1) #> [1] 1"},{"path":"https://insightsengineering.github.io/teal.slice/reference/make_count_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Build count text ‚Äî make_count_text","title":"Build count text ‚Äî make_count_text","text":"Returns text label describing filtered counts. text composed following way: countnow NULL: <label> (<countnow>/<countmax>) countnow NULL: <label> (<countmax>)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/make_count_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build count text ‚Äî make_count_text","text":"","code":"make_count_text(label, countmax, countnow = NULL)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/make_count_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build count text ‚Äî make_count_text","text":"label (character(1)) Text displayed counts. countmax (numeric(1)) Number unfiltered counts. countnow (numeric(1)) Number filtered counts.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/make_count_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build count text ‚Äî make_count_text","text":"character string.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/pair_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust counts to match choices ‚Äî pair_counts","title":"Adjust counts to match choices ‚Äî pair_counts","text":"Adjust counts match choices","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/pair_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust counts to match choices ‚Äî pair_counts","text":"","code":"pair_counts(choices, counts)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/pair_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust counts to match choices ‚Äî pair_counts","text":"choices (character) Choices match. counts (named numeric) Counts adjust.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/sanitize_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Encodes ids to be used in JavaScript and Shiny ‚Äî sanitize_id","title":"Encodes ids to be used in JavaScript and Shiny ‚Äî sanitize_id","text":"Replaces non-ASCII characters format can used HTML, JavaScript Shiny. id character allowed, replaced \"_\" 4 character hash original id added start resulting id.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/sanitize_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encodes ids to be used in JavaScript and Shiny ‚Äî sanitize_id","text":"","code":"sanitize_id(id)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/sanitize_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encodes ids to be used in JavaScript and Shiny ‚Äî sanitize_id","text":"id (character(1)) id string.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/sanitize_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encodes ids to be used in JavaScript and Shiny ‚Äî sanitize_id","text":"Sanitized string removes special characters spaces.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/setdiff_teal_slices.html","id":null,"dir":"Reference","previous_headings":"","what":"setdiff method for teal_slices ‚Äî setdiff_teal_slices","title":"setdiff method for teal_slices ‚Äî setdiff_teal_slices","text":"Compare two teal slices objects return teal_slices containing slices present x y.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/setdiff_teal_slices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setdiff method for teal_slices ‚Äî setdiff_teal_slices","text":"","code":"setdiff_teal_slices(x, y)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/setdiff_teal_slices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setdiff method for teal_slices ‚Äî setdiff_teal_slices","text":"x, y (teal_slices)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/setdiff_teal_slices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"setdiff method for teal_slices ‚Äî setdiff_teal_slices","text":"teal_slices","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal.slice-package.html","id":null,"dir":"Reference","previous_headings":"","what":"teal.slice: Interactive Exploration of Clinical Trials Data ‚Äî teal.slice-package","title":"teal.slice: Interactive Exploration of Clinical Trials Data ‚Äî teal.slice-package","text":"teal.slice R library used development teal shiny modules.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal.slice-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"teal.slice: Interactive Exploration of Clinical Trials Data ‚Äî teal.slice-package","text":"Maintainer: Dawid Kaledkowski dawid.kaledkowski@roche.com (ORCID) Authors: Pawel Rucki pawel.rucki@roche.com Aleksander Chlebowski aleksander.chlebowski@contractors.roche.com (ORCID) Andre Verissimo andre.verissimo@roche.com (ORCID) Kartikeya Kirar kartikeya.kirar@businesspartner.roche.com Marcin Kosinski marcin.kosinski.mk1@roche.com Andrew Bates Mahmoud Hallal Nikolas Burkoff Maciej Nasinski Konrad Pagacz Junlue Zhao contributors: Chendi Liao chendi.liao@roche.com [reviewer] Dony Unardi unardid@gene.com [reviewer] F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slice-utilities.html","id":null,"dir":"Reference","previous_headings":"","what":"teal_slice utility functions ‚Äî teal_slice-utilities","title":"teal_slice utility functions ‚Äî teal_slice-utilities","text":"Helper functions working teal_slice object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slice-utilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal_slice utility functions ‚Äî teal_slice-utilities","text":"","code":"is.teal_slice(x)  as.teal_slice(x)  # S3 method for class 'teal_slice' as.list(x, ...)  # S3 method for class 'teal_slice' format(x, show_all = FALSE, trim_lines = TRUE, ...)  # S3 method for class 'teal_slice' print(x, ...)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slice-utilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal_slice utility functions ‚Äî teal_slice-utilities","text":"x (teal.slice) ... additional arguments passed functions. show_all (logical(1)) indicating whether show fields. set FALSE, non-NULL elements printed. trim_lines (logical(1)) indicating whether trim lines printing.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slice-utilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal_slice utility functions ‚Äî teal_slice-utilities","text":"","code":"x1 <- teal_slice(   dataname = \"data\",   id = \"Female adults\",   expr = \"SEX == 'F' & AGE >= 18\",   title = \"Female adults\" ) x2 <- teal_slice(   dataname = \"data\",   varname = \"var\",   choices = c(\"F\", \"M\", \"U\"),   selected = \"F\",   keep_na = TRUE,   keep_inf = TRUE,   fixed = FALSE,   anchored = FALSE,   multiple = TRUE,   id = \"Gender\",   extra_arg = \"extra\" )  is.teal_slice(x1) #> [1] TRUE as.list(x1) #> $dataname #> [1] \"data\" #>  #> $id #> [1] \"Female adults\" #>  #> $expr #> [1] \"SEX == 'F' & AGE >= 18\" #>  #> $fixed #> [1] TRUE #>  #> $anchored #> [1] FALSE #>  #> $title #> [1] \"Female adults\" #>  as.teal_slice(list(dataname = \"a\", varname = \"var\")) #> { #>   \"dataname\" : \"a\", #>   \"varname\"  : \"var\", #>   \"id\"       : \"a var\", #>   \"fixed\"    : false, #>   \"anchored\" : false, #>   \"multiple\" : true #> } format(x1) #> [1] \"{\\n  \\\"dataname\\\" : \\\"data\\\",\\n  \\\"id\\\"       : \\\"Female adults\\\",\\n  \\\"expr\\\"     : \\\"SEX == 'F' & AGE >= 18\\\",\\n  \\\"fixed\\\"    : true,\\n  \\\"anchored\\\" : false,\\n  \\\"title\\\"    : \\\"Female adults\\\"\\n}\" format(x1, show_all = TRUE, trim_lines = FALSE) #> [1] \"{\\n  \\\"dataname\\\" : \\\"data\\\",\\n  \\\"id\\\"       : \\\"Female adults\\\",\\n  \\\"expr\\\"     : \\\"SEX == 'F' & AGE >= 18\\\",\\n  \\\"fixed\\\"    : true,\\n  \\\"anchored\\\" : false,\\n  \\\"title\\\"    : \\\"Female adults\\\"\\n}\" print(x1) #> { #>   \"dataname\" : \"data\", #>   \"id\"       : \"Female adults\", #>   \"expr\"     : \"SEX == 'F' & AGE >= 18\", #>   \"fixed\"    : true, #>   \"anchored\" : false, #>   \"title\"    : \"Female adults\" #> } print(x1, show_all = TRUE, trim_lines = FALSE) #> { #>   \"dataname\" : \"data\", #>   \"id\"       : \"Female adults\", #>   \"expr\"     : \"SEX == 'F' & AGE >= 18\", #>   \"fixed\"    : true, #>   \"anchored\" : false, #>   \"title\"    : \"Female adults\" #> }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slice.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify single filter ‚Äî teal_slice","title":"Specify single filter ‚Äî teal_slice","text":"Create teal_slice object holds complete information filtering one variable. Check teal_slice-utilities functions working teal_slice object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify single filter ‚Äî teal_slice","text":"","code":"teal_slice(   dataname,   varname,   id,   expr,   choices = NULL,   selected = NULL,   keep_na = NULL,   keep_inf = NULL,   fixed = FALSE,   anchored = FALSE,   multiple = TRUE,   title = NULL,   ... )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify single filter ‚Äî teal_slice","text":"dataname (character(1)) name data set varname (character(1)) name variable id (character(1)) identifier filter. Must specified expr set. varname specified id set \"{dataname} {varname}\" default. expr (character(1)) string providing logical expression. Must valid R expression can evaluated context data set. data.frame var == \"x\" sufficient, MultiAssayExperiment::subsetByColData requires dataname prefix, e.g. data$var == \"x\". choices (vector) optional, specifies allowed choices; specified subset values variable denoted varname; Type size depends variable type. Factors coerced character. selected (vector) optional, specifies selected values choices; Type size depends variable type. Factors coerced character. keep_na (logical(1)) optional flag specifying whether keep missing values keep_inf (logical(1)) optional flag specifying whether keep infinite values fixed (logical(1)) flag specifying whether fix filter state (forbid setting state) anchored (logical(1)) flag specifying whether lock filter state (forbid removing inactivating) multiple (logical(1)) optional flag specifying whether one value can selected; applicable ChoicesFilterState LogicalFilterState title (character(1)) optional title filter. Ignored varname set. ... additional arguments can handled extensions teal.slice classes.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify single filter ‚Äî teal_slice","text":"teal.slice object. Depending whether varname expr specified, resulting teal_slice also receives class teal_slice_var teal_slice_expr, respectively.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slice.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify single filter ‚Äî teal_slice","text":"teal_slice object fully describes filter state can used create, modify, delete filter state. teal_slice contains number common fields (named arguments teal_slice), mandatory, dataname  either varname expr must specified, others default values. Setting values NULL means properties modified (setting existing state) determined data (creating new new one). Entire object FilterState class member can accessed FilterState$get_state(). teal_slice can come two flavors: teal_slice_var - describes typical interactive filter refers single variable, managed FilterState class. class created varname specified. object retains fields specified call. id can created default need specified. teal_slice_expr - describes filter state refers expression, can potentially include multiple variables, managed FilterStateExpr class. class created expr specified. dataname anchored retained, fixed set TRUE, id becomes mandatory, title remains optional, arguments disregarded. teal_slice can passed FilterState/FilterStateExpr constructors instantiate object. can also passed FilterState$set_state modify state. However, FilterState created, mutable features can set teal_slice: selected, keep_na keep_inf. Special consideration given two fields: fixed anchored. always immutable logical flags default FALSE. FilterState instantiated fixed = TRUE features selected, keep_na, keep_inf changed. Note FilterStateExpr always considered fixed = TRUE. FilterState instantiated anchored = TRUE removed.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slice.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Specify single filter ‚Äî teal_slice","text":"Date time objects POSIX*t classes printed strings converting UTC timezone.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slice.html","id":"filters-in-sumarizedexperiment-and-multiassayexperiment-objects","dir":"Reference","previous_headings":"","what":"Filters in SumarizedExperiment and MultiAssayExperiment objects","title":"Specify single filter ‚Äî teal_slice","text":"establish filter column data.frame, dataname varname sufficient. MultiAssayExperiment objects can filtered either colData slot (contains subject information) experiments, stored experimentList slot. filters referring colData extra arguments needed. filter state created experiment, experiment name must specified experiment argument. Furthermore, specify filter SummarizedExperiment one must also set arg (\"subset\"  \"select\", arguments subset() function SummarizedExperiment) order determine whether filter refers SE's rowData colData.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify single filter ‚Äî teal_slice","text":"","code":"x1 <- teal_slice(   dataname = \"data\",   id = \"Female adults\",   expr = \"SEX == 'F' & AGE >= 18\",   title = \"Female adults\" ) x2 <- teal_slice(   dataname = \"data\",   varname = \"var\",   choices = c(\"F\", \"M\", \"U\"),   selected = \"F\",   keep_na = TRUE,   keep_inf = TRUE,   fixed = FALSE,   anchored = FALSE,   multiple = TRUE,   id = \"Gender\",   extra_arg = \"extra\" )  is.teal_slice(x1) #> [1] TRUE as.list(x1) #> $dataname #> [1] \"data\" #>  #> $id #> [1] \"Female adults\" #>  #> $expr #> [1] \"SEX == 'F' & AGE >= 18\" #>  #> $fixed #> [1] TRUE #>  #> $anchored #> [1] FALSE #>  #> $title #> [1] \"Female adults\" #>  as.teal_slice(list(dataname = \"a\", varname = \"var\")) #> { #>   \"dataname\" : \"a\", #>   \"varname\"  : \"var\", #>   \"id\"       : \"a var\", #>   \"fixed\"    : false, #>   \"anchored\" : false, #>   \"multiple\" : true #> } format(x1) #> [1] \"{\\n  \\\"dataname\\\" : \\\"data\\\",\\n  \\\"id\\\"       : \\\"Female adults\\\",\\n  \\\"expr\\\"     : \\\"SEX == 'F' & AGE >= 18\\\",\\n  \\\"fixed\\\"    : true,\\n  \\\"anchored\\\" : false,\\n  \\\"title\\\"    : \\\"Female adults\\\"\\n}\" format(x1, show_all = TRUE, trim_lines = FALSE) #> [1] \"{\\n  \\\"dataname\\\" : \\\"data\\\",\\n  \\\"id\\\"       : \\\"Female adults\\\",\\n  \\\"expr\\\"     : \\\"SEX == 'F' & AGE >= 18\\\",\\n  \\\"fixed\\\"    : true,\\n  \\\"anchored\\\" : false,\\n  \\\"title\\\"    : \\\"Female adults\\\"\\n}\" print(x1) #> { #>   \"dataname\" : \"data\", #>   \"id\"       : \"Female adults\", #>   \"expr\"     : \"SEX == 'F' & AGE >= 18\", #>   \"fixed\"    : true, #>   \"anchored\" : false, #>   \"title\"    : \"Female adults\" #> } print(x1, show_all = TRUE, trim_lines = FALSE) #> { #>   \"dataname\" : \"data\", #>   \"id\"       : \"Female adults\", #>   \"expr\"     : \"SEX == 'F' & AGE >= 18\", #>   \"fixed\"    : true, #>   \"anchored\" : false, #>   \"title\"    : \"Female adults\" #> }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slices-utilities.html","id":null,"dir":"Reference","previous_headings":"","what":"teal_slices utility functions ‚Äî teal_slices-utilities","title":"teal_slices utility functions ‚Äî teal_slices-utilities","text":"Helper functions working teal_slices object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slices-utilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal_slices utility functions ‚Äî teal_slices-utilities","text":"","code":"is.teal_slices(x)  as.teal_slices(x)  # S3 method for class 'teal_slices' as.list(x, recursive = FALSE, ...)  # S3 method for class 'teal_slices' x[i]  # S3 method for class 'teal_slices' c(...)  # S3 method for class 'teal_slices' format(x, show_all = FALSE, trim_lines = TRUE, ...)  # S3 method for class 'teal_slices' print(x, ...)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slices-utilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal_slices utility functions ‚Äî teal_slices-utilities","text":"x object test teal_slices, object convert teal_slices teal_slices object recursive (logical(1)) flag specifying whether also convert list elements teal_slices ... additional arguments passed functions. (character numeric logical) indicating elements extract show_all (logical(1)) whether display non-null elements constituent teal_slice objects trim_lines (logical(1)) whether trim lines","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slices-utilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal_slices utility functions ‚Äî teal_slices-utilities","text":"","code":"filter_1 <- teal_slice(   dataname = \"dataname1\",   varname = \"varname1\",   choices = letters,   selected = \"b\",   keep_na = TRUE,   fixed = FALSE,   extra1 = \"extraone\" ) filter_2 <- teal_slice(   dataname = \"dataname1\",   varname = \"varname2\",   choices = 1:10,   keep_na = TRUE,   selected = 2,   fixed = TRUE,   anchored = FALSE,   extra2 = \"extratwo\" ) filter_3 <- teal_slice(   dataname = \"dataname2\",   varname = \"varname3\",   choices = 1:10 / 10,   keep_na = TRUE,   selected = 0.2,   fixed = TRUE,   anchored = FALSE,   extra1 = \"extraone\",   extra2 = \"extratwo\" )  all_filters <- teal_slices(   filter_1,   filter_2,   filter_3,   exclude_varnames = list(     \"dataname1\" = \"varname2\"   ) )  is.teal_slices(all_filters) #> [1] TRUE all_filters[1:2] #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname1\", #>       \"id\"             : \"dataname1 varname1\", #>       \"choices\"        : [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"... #>       \"selected\"       : [\"b\"], #>       \"keep_na\"        : true, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra1\"         : \"extraone\" #>     }, #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname2\", #>       \"id\"             : \"dataname1 varname2\", #>       \"choices\"        : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #>       \"selected\"       : [2], #>       \"keep_na\"        : true, #>       \"fixed\"          : true, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra2\"         : \"extratwo\" #>     } #>   ], #>   \"attributes\": { #>     \"exclude_varnames\" : { #>       \"dataname1\"      : \"varname2\" #>     }, #>     \"allow_add\"        : true #>   } #> }  c(all_filters[1], all_filters[2]) #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname1\", #>       \"id\"             : \"dataname1 varname1\", #>       \"choices\"        : [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"... #>       \"selected\"       : [\"b\"], #>       \"keep_na\"        : true, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra1\"         : \"extraone\" #>     }, #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname2\", #>       \"id\"             : \"dataname1 varname2\", #>       \"choices\"        : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #>       \"selected\"       : [2], #>       \"keep_na\"        : true, #>       \"fixed\"          : true, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra2\"         : \"extratwo\" #>     } #>   ], #>   \"attributes\": { #>     \"exclude_varnames\" : { #>       \"dataname1\"      : \"varname2\" #>     }, #>     \"allow_add\"        : true #>   } #> }  print(all_filters) #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname1\", #>       \"id\"             : \"dataname1 varname1\", #>       \"choices\"        : [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"... #>       \"selected\"       : [\"b\"], #>       \"keep_na\"        : true, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra1\"         : \"extraone\" #>     }, #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname2\", #>       \"id\"             : \"dataname1 varname2\", #>       \"choices\"        : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #>       \"selected\"       : [2], #>       \"keep_na\"        : true, #>       \"fixed\"          : true, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra2\"         : \"extratwo\" #>     }, #>     { #>       \"dataname\"       : \"dataname2\", #>       \"varname\"        : \"varname3\", #>       \"id\"             : \"dataname2 varname3\", #>       \"choices\"        : [0.10000000000000001, 0.20000000... #>       \"selected\"       : [0.20000000000000001], #>       \"keep_na\"        : true, #>       \"fixed\"          : true, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra2\"         : \"extratwo\", #>       \"extra1\"         : \"extraone\" #>     } #>   ], #>   \"attributes\": { #>     \"exclude_varnames\" : { #>       \"dataname1\"      : \"varname2\" #>     }, #>     \"allow_add\"        : true #>   } #> }  print(all_filters, trim_lines = FALSE) #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname1\", #>       \"id\"             : \"dataname1 varname1\", #>       \"choices\"        : [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"], #>       \"selected\"       : [\"b\"], #>       \"keep_na\"        : true, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra1\"         : \"extraone\" #>     }, #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname2\", #>       \"id\"             : \"dataname1 varname2\", #>       \"choices\"        : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #>       \"selected\"       : [2], #>       \"keep_na\"        : true, #>       \"fixed\"          : true, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra2\"         : \"extratwo\" #>     }, #>     { #>       \"dataname\"       : \"dataname2\", #>       \"varname\"        : \"varname3\", #>       \"id\"             : \"dataname2 varname3\", #>       \"choices\"        : [0.10000000000000001, 0.20000000000000001, 0.29999999999999999, 0.40000000000000002, 0.5, 0.59999999999999998, 0.69999999999999996, 0.80000000000000004, 0.90000000000000002, 1], #>       \"selected\"       : [0.20000000000000001], #>       \"keep_na\"        : true, #>       \"fixed\"          : true, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra2\"         : \"extratwo\", #>       \"extra1\"         : \"extraone\" #>     } #>   ], #>   \"attributes\": { #>     \"exclude_varnames\" : { #>       \"dataname1\"      : \"varname2\" #>     }, #>     \"allow_add\"        : true #>   } #> }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slices.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete filter specification ‚Äî teal_slices","title":"Complete filter specification ‚Äî teal_slices","text":"Create teal_slices object package multiple filters additional settings. Check teal_slices-utilities functions working teal_slices object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete filter specification ‚Äî teal_slices","text":"","code":"teal_slices(   ...,   exclude_varnames = NULL,   include_varnames = NULL,   count_type = NULL,   allow_add = TRUE )"},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete filter specification ‚Äî teal_slices","text":"... number teal_slice objects. include_varnames, exclude_varnames (named lists character) list names match names data sets vector elements match variable names respective data sets; specify variables allowed filtered; see Details. count_type new feature. kindly share opinions teal.slice's GitHub repository. (character(1)) string specifying observations tallied filter states. Possible options: \"none\" (default) counts single FilterState show unfiltered number . \"\" counts single FilterState show number observation filtered unfiltered dataset. Note, issues reported using option MultiAssayExperiment. Please make sure adding new filters fail target platform deploying production. allow_add (logical(1)) logical flag specifying whether user able add new filters","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete filter specification ‚Äî teal_slices","text":"teal_slices, unnamed list teal_slice objects.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complete filter specification ‚Äî teal_slices","text":"teal_slices() collates multiple teal_slice objects teal_slices object, complete filter specification. used classes FilterState well filter_panel_api wrapper functions. teal_slices attributes modify behavior filter panel, resolved different classes. include_varnames exclude_varnames determine variables can filters assigned. former enumerates allowed variables, latter enumerates forbidden values. Since mutually exclusive, impossible set allowed forbidden variables one data set one teal_slices.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/reference/teal_slices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete filter specification ‚Äî teal_slices","text":"","code":"filter_1 <- teal_slice(   dataname = \"dataname1\",   varname = \"varname1\",   choices = letters,   selected = \"b\",   keep_na = TRUE,   fixed = FALSE,   extra1 = \"extraone\" ) filter_2 <- teal_slice(   dataname = \"dataname1\",   varname = \"varname2\",   choices = 1:10,   keep_na = TRUE,   selected = 2,   fixed = TRUE,   anchored = FALSE,   extra2 = \"extratwo\" ) filter_3 <- teal_slice(   dataname = \"dataname2\",   varname = \"varname3\",   choices = 1:10 / 10,   keep_na = TRUE,   selected = 0.2,   fixed = TRUE,   anchored = FALSE,   extra1 = \"extraone\",   extra2 = \"extratwo\" )  all_filters <- teal_slices(   filter_1,   filter_2,   filter_3,   exclude_varnames = list(     \"dataname1\" = \"varname2\"   ) )  is.teal_slices(all_filters) #> [1] TRUE all_filters[1:2] #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname1\", #>       \"id\"             : \"dataname1 varname1\", #>       \"choices\"        : [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"... #>       \"selected\"       : [\"b\"], #>       \"keep_na\"        : true, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra1\"         : \"extraone\" #>     }, #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname2\", #>       \"id\"             : \"dataname1 varname2\", #>       \"choices\"        : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #>       \"selected\"       : [2], #>       \"keep_na\"        : true, #>       \"fixed\"          : true, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra2\"         : \"extratwo\" #>     } #>   ], #>   \"attributes\": { #>     \"exclude_varnames\" : { #>       \"dataname1\"      : \"varname2\" #>     }, #>     \"allow_add\"        : true #>   } #> }  c(all_filters[1], all_filters[2]) #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname1\", #>       \"id\"             : \"dataname1 varname1\", #>       \"choices\"        : [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"... #>       \"selected\"       : [\"b\"], #>       \"keep_na\"        : true, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra1\"         : \"extraone\" #>     }, #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname2\", #>       \"id\"             : \"dataname1 varname2\", #>       \"choices\"        : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #>       \"selected\"       : [2], #>       \"keep_na\"        : true, #>       \"fixed\"          : true, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra2\"         : \"extratwo\" #>     } #>   ], #>   \"attributes\": { #>     \"exclude_varnames\" : { #>       \"dataname1\"      : \"varname2\" #>     }, #>     \"allow_add\"        : true #>   } #> }  print(all_filters) #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname1\", #>       \"id\"             : \"dataname1 varname1\", #>       \"choices\"        : [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"... #>       \"selected\"       : [\"b\"], #>       \"keep_na\"        : true, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra1\"         : \"extraone\" #>     }, #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname2\", #>       \"id\"             : \"dataname1 varname2\", #>       \"choices\"        : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #>       \"selected\"       : [2], #>       \"keep_na\"        : true, #>       \"fixed\"          : true, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra2\"         : \"extratwo\" #>     }, #>     { #>       \"dataname\"       : \"dataname2\", #>       \"varname\"        : \"varname3\", #>       \"id\"             : \"dataname2 varname3\", #>       \"choices\"        : [0.10000000000000001, 0.20000000... #>       \"selected\"       : [0.20000000000000001], #>       \"keep_na\"        : true, #>       \"fixed\"          : true, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra2\"         : \"extratwo\", #>       \"extra1\"         : \"extraone\" #>     } #>   ], #>   \"attributes\": { #>     \"exclude_varnames\" : { #>       \"dataname1\"      : \"varname2\" #>     }, #>     \"allow_add\"        : true #>   } #> }  print(all_filters, trim_lines = FALSE) #> { #>   \"slices\": [ #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname1\", #>       \"id\"             : \"dataname1 varname1\", #>       \"choices\"        : [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"], #>       \"selected\"       : [\"b\"], #>       \"keep_na\"        : true, #>       \"fixed\"          : false, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra1\"         : \"extraone\" #>     }, #>     { #>       \"dataname\"       : \"dataname1\", #>       \"varname\"        : \"varname2\", #>       \"id\"             : \"dataname1 varname2\", #>       \"choices\"        : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #>       \"selected\"       : [2], #>       \"keep_na\"        : true, #>       \"fixed\"          : true, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra2\"         : \"extratwo\" #>     }, #>     { #>       \"dataname\"       : \"dataname2\", #>       \"varname\"        : \"varname3\", #>       \"id\"             : \"dataname2 varname3\", #>       \"choices\"        : [0.10000000000000001, 0.20000000000000001, 0.29999999999999999, 0.40000000000000002, 0.5, 0.59999999999999998, 0.69999999999999996, 0.80000000000000004, 0.90000000000000002, 1], #>       \"selected\"       : [0.20000000000000001], #>       \"keep_na\"        : true, #>       \"fixed\"          : true, #>       \"anchored\"       : false, #>       \"multiple\"       : true, #>       \"extra2\"         : \"extratwo\", #>       \"extra1\"         : \"extraone\" #>     } #>   ], #>   \"attributes\": { #>     \"exclude_varnames\" : { #>       \"dataname1\"      : \"varname2\" #>     }, #>     \"allow_add\"        : true #>   } #> }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a list to a JSON string ‚Äî to_json","title":"Converts a list to a JSON string ‚Äî to_json","text":"Converts list representation teal_slice teal_slices JSON string. Ensures proper unboxing list elements. function used format methods teal_slice teal_slices.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a list to a JSON string ‚Äî to_json","text":"","code":"to_json(x)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a list to a JSON string ‚Äî to_json","text":"x (list) representation teal_slices object.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/to_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a list to a JSON string ‚Äî to_json","text":"JSON string.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/toggle_button.html","id":null,"dir":"Reference","previous_headings":"","what":"Toggle button properties. ‚Äî toggle_button","title":"Toggle button properties. ‚Äî toggle_button","text":"Switch different icons titles button.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/toggle_button.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toggle button properties. ‚Äî toggle_button","text":"","code":"toggle_icon(input_id, icons, one_way = FALSE)  toggle_title(input_id, titles, one_way = FALSE)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/toggle_button.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Toggle button properties. ‚Äî toggle_button","text":"input_id (character(1)) (name-spaced) id button icons, titles (character(2)) vector specifying values toggle one_way (logical(1)) flag specifying whether keep toggling; TRUE, target changed first element icons/titles second","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/toggle_button.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Toggle button properties. ‚Äî toggle_button","text":"NULL, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/toggle_button.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Toggle button properties. ‚Äî toggle_button","text":"Wrapper functions use shinyjs::runjs change button properties response events, typically clicking buttons. shiny's actionButton actionLink create <> tags, may contain child <> tag specifies icon displayed. toggle_icon calls toggleClass (one_way = FALSE) removeClass addClass methods (one_way = TRUE) change icons. toggle_title calls attr method modify Title attribute button.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/toggle_button.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Toggle button properties. ‚Äî toggle_button","text":"","code":"# use non-exported function from teal.slice toggle_icon <- getFromNamespace(\"toggle_icon\", \"teal.slice\")  library(shiny) library(shinyjs)  ui <- fluidPage(   useShinyjs(),   actionButton(\"hide_content\", label = \"hide\", icon = icon(\"xmark\")),   actionButton(\"show_content\", label = \"show\", icon = icon(\"check\")),   actionButton(\"toggle_content\", label = \"toggle\", icon = icon(\"angle-down\")),   tags$br(),   tags$div(     id = \"content\",     verbatimTextOutput(\"printout\")   ) )  server <- function(input, output, session) {   observeEvent(input$hide_content,     {       hide(\"content\")       toggle_icon(\"toggle_content\", c(\"fa-angle-down\", \"fa-angle-right\"), one_way = TRUE)     },     ignoreInit = TRUE   )    observeEvent(input$show_content,     {       show(\"content\")       toggle_icon(\"toggle_content\", c(\"fa-angle-right\", \"fa-angle-down\"), one_way = TRUE)     },     ignoreInit = TRUE   )    observeEvent(input$toggle_content,     {       toggle(\"content\")       toggle_icon(\"toggle_content\", c(\"fa-angle-right\", \"fa-angle-down\"))     },     ignoreInit = TRUE   )    output$printout <- renderPrint({     head(faithful, 10)   }) } if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.slice/reference/topological_sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Topological graph sort ‚Äî topological_sort","title":"Topological graph sort ‚Äî topological_sort","text":"Graph list node contains vector child nodes returned list, parents appear children.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/topological_sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Topological graph sort ‚Äî topological_sort","text":"","code":"topological_sort(graph)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/topological_sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Topological graph sort ‚Äî topological_sort","text":"graph (named list) node vector elements","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/topological_sort.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Topological graph sort ‚Äî topological_sort","text":"Implementation Kahn algorithm modification maintain order input elements.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/topological_sort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Topological graph sort ‚Äî topological_sort","text":"","code":"# use non-exported function from teal.slice topological_sort <- getFromNamespace(\"topological_sort\", \"teal.slice\")  topological_sort(list(A = c(), B = c(\"A\"), C = c(\"B\"), D = c(\"A\"))) #> [[1]] #> [1] \"A\" #>  #> [[2]] #> [1] \"B\" #>  #> [[3]] #> [1] \"C\" #>  #> [[4]] #> [1] \"D\" #>  topological_sort(list(D = c(\"A\"), A = c(), B = c(\"A\"), C = c(\"B\"))) #> [[1]] #> [1] \"A\" #>  #> [[2]] #> [1] \"D\" #>  #> [[3]] #> [1] \"B\" #>  #> [[4]] #> [1] \"C\" #>  topological_sort(list(D = c(\"A\"), B = c(\"A\"), C = c(\"B\"), A = c())) #> [[1]] #> [1] \"A\" #>  #> [[2]] #> [1] \"D\" #>  #> [[3]] #> [1] \"B\" #>  #> [[4]] #> [1] \"C\" #>"},{"path":"https://insightsengineering.github.io/teal.slice/reference/trim_lines_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim lines in JSON string ‚Äî trim_lines_json","title":"Trim lines in JSON string ‚Äî trim_lines_json","text":"function takes JSON string input returns modified version input values portion line trimmed less messy console output.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/trim_lines_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim lines in JSON string ‚Äî trim_lines_json","text":"","code":"trim_lines_json(x)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/trim_lines_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim lines in JSON string ‚Äî trim_lines_json","text":"x (character)","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/trim_lines_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim lines in JSON string ‚Äî trim_lines_json","text":"character string trimmed certain hard-coded number characters value portion.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/variable_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Get classes of selected columns from dataset ‚Äî variable_types","title":"Get classes of selected columns from dataset ‚Äî variable_types","text":"Get classes selected columns dataset","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/variable_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get classes of selected columns from dataset ‚Äî variable_types","text":"","code":"variable_types(data, columns = NULL)"},{"path":"https://insightsengineering.github.io/teal.slice/reference/variable_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get classes of selected columns from dataset ‚Äî variable_types","text":"data (data.frame DataFrame matrix) Object determine variable types. columns (character) Vector columns data get types. Set NULL get types columns.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/variable_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get classes of selected columns from dataset ‚Äî variable_types","text":"Character vector classes columns provided data.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/reference/variable_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get classes of selected columns from dataset ‚Äî variable_types","text":"","code":"# use non-exported function from teal.slice variable_types <- getFromNamespace(\"variable_types\", \"teal.slice\")  variable_types(   data.frame(     x = 1:3, y = factor(c(\"a\", \"b\", \"a\")), z = c(\"h1\", \"h2\", \"h3\"),     stringsAsFactors = FALSE   ),   \"x\" ) #>         x  #> \"integer\"   variable_types(   data.frame(     x = 1:3, y = factor(c(\"a\", \"b\", \"a\")), z = c(\"h1\", \"h2\", \"h3\"),     stringsAsFactors = FALSE   ),   c(\"x\", \"z\") ) #>           x           z  #>   \"integer\" \"character\"   variable_types(   data.frame(     x = 1:3, y = factor(c(\"a\", \"b\", \"a\")), z = c(\"h1\", \"h2\", \"h3\"),     stringsAsFactors = FALSE   ) ) #>           x           y           z  #>   \"integer\"    \"factor\" \"character\""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"tealslice-060","dir":"Changelog","previous_headings":"","what":"teal.slice 0.6.0","title":"teal.slice 0.6.0","text":"CRAN release: 2025-02-03","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"enhancements-0-6-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.slice 0.6.0","text":"Reduced space filter panel displaying ‚Äúadd filters‚Äù UI separate panel. deprecated parameters code check removed init_filtered_data().","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"bug-fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.slice 0.6.0","text":"Fix error creating filter choices data factor level containing empty string (‚Äú‚Äú).","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"breaking-changes-0-6-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal.slice 0.6.0","text":"ui_add srv_add longer exist adding new filters part ui_active srv_active.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"miscellaneous-0-6-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.slice 0.6.0","text":"print.teal_slice() print.teal_slices() now return object invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"tealslice-051","dir":"Changelog","previous_headings":"","what":"teal.slice 0.5.1","title":"teal.slice 0.5.1","text":"CRAN release: 2024-04-30","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"bug-fixes-0-5-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.slice 0.5.1","text":"Fix filter panel handles NA values Date column. Fix filtering ordered column return right call. Ensure choices sorted factor ordered data types.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"miscellaneous-0-5-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.slice 0.5.1","text":"Added teal_slice teal_slices package index. Implement mouse-behavior filter card selected.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"tealslice-050","dir":"Changelog","previous_headings":"","what":"teal.slice 0.5.0","title":"teal.slice 0.5.0","text":"CRAN release: 2024-02-06","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"enhancements-0-5-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.slice 0.5.0","text":"Simplified init_filtered_data accept named list datasets. init_filtered_data currently handle list containing dataset, metadata, datalabel code.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"breaking-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal.slice 0.5.0","text":"TealData object longer supported teal.slice. set_filter_state longer accepts nested list. Use teal_slices() teal_slice() instead. Renamed FilteredDataset subclass handles data.frames DefaultFilteredDataset DataframeFilteredDataset. Added new class DefaultFilteredDataset store type object. Filtering supported.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.slice 0.5.0","text":"Performs exact match determining default label dataset attributes.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"miscellaneous-0-5-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.slice 0.5.0","text":"Specified minimal version package dependencies. Removed storing restoring teal_slices objects. Update documentation code reflect changes due refactor teal.data::JoinKeys teal.data::join_keys.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.slice 0.4.0","text":"Filter panel API now based teal_slice teal_slices objects. now possible specify filter based arbitrary logical expression. See expr argument teal_slice. now possible limit choices single filter card. See choices argument teal_slice. now possible initialize filter panel without ‚ÄúAdd filter variables‚Äù panel allow_add teal_slices. now possible set filter removed app user. See anchored argument teal_slice. now possible set filter whose selection changed. See fixed argument teal_slice. now possible limit choices within variable single value . See multiple argument teal_slice . Changed appearance filter cards collapsible accordion. Replaced sliderInput interactive plotly chart allow user zoom variable distribution. Implemented reactive counts single filter cards compare filtered unfiltered variable distributions. See count_type argument teal_slices. Added state history: individual filter states track changes user can rewind reset initial state.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"breaking-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal.slice 0.4.0","text":"Setting filters using list now deprecated. Use teal_slices teal_slice instead. Removed CDISCFilteredData CDISCFilteredDataset implementing JoinKeys handling parent classes (FilteredData DefaultFilteredDataset). Specifying set filterable columns done include_varnames exclude_varnames teal_slices. Specifying attr(, \"filterable\") hard deprecated. Removed private fields $code $check FilteredData class made appropriate changes constructor init_filtered_data.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"tealslice-030","dir":"Changelog","previous_headings":"","what":"teal.slice 0.3.0","title":"teal.slice 0.3.0","text":"Examples now use scda.2022 instead scda.2021. Transferred data hashing step FilteredDataset teal. Removed constructor Queue class.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.slice 0.3.0","text":"Added global turn /button Filter Panel. Added ability collapse Active Filter Display panel. Added ability collapse filters individual dataset. Added fixed filter states.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"enhancements-0-3-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.slice 0.3.0","text":"Improved filter state presentation FilterState$format.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.slice 0.3.0","text":"Fixed error RangeFilterState produced error using bootstrap 4. Fixed bug caused range slider omit values selected filter API. Fixed bug setting incorrect values Date Date time ranges caused app crash.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"miscellaneous-0-3-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.slice 0.3.0","text":"Calculation step slider RangeFilterState now uses checkmate::test_integerish instead .integer. Updated init_filtered_data take account removal CDISCTealData teal.data package. Added shinyvalidate validation Date Date time ranges. Added examples apps FilterState child classes DFFilterStates.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.slice 0.2.0","text":"Added set_filterable_varnames method FilteredData FilteredDataset objects control variables can filtered. Added support custom bslib bootstrap themes via teal.bs_theme option. See teal vignette teal-bs-themses information. Removed CDISCFilteredDataset class functionality moved CDISCFilteredData. Changed constructor FilteredData require TealData object. See help(init_filtered_data) details. filtered data now stored FilteredData FilteredDataset. join keys stored inside FilteredData now JoinKeys objects. Updated get_filter_state return list active filter states attribute character form filter states. Updated get_varlabels method FilterStates classes. now accepts vector input. Exported S3 generic function init_filter_states can used packages. Added FilterPanelAPI class encapsulate API filter panel.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"enhancements-0-2-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.slice 0.2.0","text":"Redesigned count bars filter panel check box inputs. Redesigned filter panel input dates use CSS flexbox. Update icons compatible Font Awesome 6. Updates FilteredData method get_formatted_filter_state longer appends empty filters. Added clearer installation instructions README.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal.slice 0.2.0","text":"Renamed internal S3 method get_filterable_varnames get_supported_filter_varnames.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.slice 0.2.0","text":"Fixed bug filter panel overview refresh panel hidden transition active modules. Fixed bug FilterState sliderInput step values precise.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"new-features-0-1-1","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.slice 0.1.1","text":"Added formatting function filter panel classes.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"miscellaneous-0-1-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.slice 0.1.1","text":"Added template pkgdown site. Updated package authors. Added package vignettes.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"fix-0-1-1","dir":"Changelog","previous_headings":"","what":"Fix","title":"teal.slice 0.1.1","text":"Fixed bug FilteredDataset, launching shiny application without FilteredData attach appropriate CSS files.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"tealslice-010","dir":"Changelog","previous_headings":"","what":"teal.slice 0.1.0","title":"teal.slice 0.1.0","text":"Initial release teal.slice - package providing filter module teal applications.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"breaking-changes-0-1-0","dir":"Changelog","previous_headings":"Changes (from behavior when functionality was part of teal)","what":"Breaking changes","title":"teal.slice 0.1.0","text":"default_filter deprecated - use list() instead default filter.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"Changes (from behavior when functionality was part of teal)","what":"Bug fixes","title":"teal.slice 0.1.0","text":"Add counts filtering categorical variables bar charts filtering panel cases missing. Fixed bug causing error sliders RangeFilterState put either end allowed range UI.","code":""},{"path":"https://insightsengineering.github.io/teal.slice/news/index.html","id":"miscellaneous-0-1-0","dir":"Changelog","previous_headings":"Changes (from behavior when functionality was part of teal)","what":"Miscellaneous","title":"teal.slice 0.1.0","text":"Added is_any_filtered method FilterState classes detect selected values actually filters data. used decide explicit filter statement added call. filter panel now displays helpful message data rows columns place empty drop widget. FilteredData now stores whether datasets reproducibility check via two new methods class: set_check get_check.","code":""}]
