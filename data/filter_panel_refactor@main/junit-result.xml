<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="CDISCFilteredData" timestamp="2023-03-03T17:02:30Z" hostname="df4995eb832b" tests="14" skipped="0" failures="0" errors="4" time="0.968">
    <testcase time="0.18" classname="CDISCFilteredData" name="load_and_set_datasets"/>
    <testcase time="0.244" classname="CDISCFilteredData" name="load_and_set_datasets"/>
    <testcase time="0.0129999999999999" classname="CDISCFilteredData" name="load_and_set_datasets"/>
    <testcase time="0.00300000000000011" classname="CDISCFilteredData" name="load_and_set_datasets"/>
    <testcase time="0.0749999999999997" classname="CDISCFilteredData" name="get_call_for_child_dataset_includes_filter_call_for_parent_dataset"/>
    <testcase time="0.0390000000000001" classname="CDISCFilteredData" name="get_parentname_returns_the_parent_name_of_the_datasets"/>
    <testcase time="0.00199999999999978" classname="CDISCFilteredData" name="get_parentname_returns_the_parent_name_of_the_datasets"/>
    <testcase time="0.0340000000000003" classname="CDISCFilteredData" name="get_varlabels_returns_the_column_labels_of_the_passed_dataset"/>
    <testcase time="0.00199999999999978" classname="CDISCFilteredData" name="get_varlabels_returns_the_column_labels_of_the_passed_dataset"/>
    <testcase time="0.0429999999999997" classname="CDISCFilteredData" name="get_filterable_varnames_does_not_return_child_duplicates">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-CDISCFilteredData.R:92')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
 1. testthat::expect_identical(...)
      at test-CDISCFilteredData.R:92:2
 2. testthat::quasi_label(enquo(object), label, arg = "object")
 3. rlang::eval_bare(expr, quo_get_env(quo))</error>
    </testcase>
    <testcase time="0.109" classname="CDISCFilteredData" name="get_filterable_varnames_does_not_return_child_non_filterable_variables">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-CDISCFilteredData.R:114')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
 1. testthat::expect_identical(...)
      at test-CDISCFilteredData.R:114:2
 2. testthat::quasi_label(enquo(object), label, arg = "object")
 3. rlang::eval_bare(expr, quo_get_env(quo))</error>
    </testcase>
    <testcase time="0.101" classname="CDISCFilteredData" name="get_filterable_varnames_return_all_filterable_variables_from_parent_dataset">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-CDISCFilteredData.R:133')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
 1. testthat::expect_identical(...)
      at test-CDISCFilteredData.R:133:2
 2. testthat::quasi_label(enquo(object), label, arg = "object")
 3. rlang::eval_bare(expr, quo_get_env(quo))</error>
    </testcase>
    <testcase time="0.0600000000000001" classname="CDISCFilteredData" name="get_filterable_varnames_does_not_return_duplicates_from_parent_even_if_they_are_not_filterable">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-CDISCFilteredData.R:161')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
 1. testthat::expect_identical(...)
      at test-CDISCFilteredData.R:161:2
 2. testthat::quasi_label(enquo(object), label, arg = "object")
 3. rlang::eval_bare(expr, quo_get_env(quo))</error>
    </testcase>
    <testcase time="0.0630000000000002" classname="CDISCFilteredData" name="set_filter_state_returns_warning_when_setting_a_filter_on_a_column_which_belongs_to_parent_dataset"/>
  </testsuite>
  <testsuite name="ChoicesFilterState" timestamp="2023-03-03T17:02:31Z" hostname="df4995eb832b" tests="64" skipped="0" failures="0" errors="1" time="0.652">
    <testcase time="0.0349999999999997" classname="ChoicesFilterState" name="constructor_accepts_all_data_classes"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="constructor_accepts_all_data_classes"/>
    <testcase time="0.00700000000000012" classname="ChoicesFilterState" name="constructor_accepts_all_data_classes"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="constructor_accepts_all_data_classes"/>
    <testcase time="0.0089999999999999" classname="ChoicesFilterState" name="constructor_accepts_all_data_classes"/>
    <testcase time="0.00900000000000034" classname="ChoicesFilterState" name="constructor_accepts_all_data_classes"/>
    <testcase time="0.0259999999999998" classname="ChoicesFilterState" name="get_call_returns_call_that_evaluated_leaves_all_values_passed_to_constructor"/>
    <testcase time="0.0129999999999999" classname="ChoicesFilterState" name="get_call_returns_call_that_evaluated_leaves_all_values_passed_to_constructor"/>
    <testcase time="0.0150000000000001" classname="ChoicesFilterState" name="get_call_returns_call_that_evaluated_leaves_all_values_passed_to_constructor"/>
    <testcase time="0.0140000000000002" classname="ChoicesFilterState" name="get_call_returns_call_that_evaluated_leaves_all_values_passed_to_constructor"/>
    <testcase time="0.0209999999999999" classname="ChoicesFilterState" name="get_call_returns_call_that_evaluated_leaves_all_values_passed_to_constructor"/>
    <testcase time="0.016" classname="ChoicesFilterState" name="get_call_returns_call_that_evaluated_leaves_all_values_passed_to_constructor"/>
    <testcase time="0.0109999999999997" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00300000000000011" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.0100000000000002" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00299999999999967" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.0100000000000002" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00300000000000011" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00999999999999979" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00499999999999989" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.0100000000000002" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00999999999999979" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00499999999999989" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.0110000000000001" classname="ChoicesFilterState" name="set_selected_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.00300000000000011" classname="ChoicesFilterState" name="set_selected_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.0089999999999999" classname="ChoicesFilterState" name="set_selected_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.00300000000000011" classname="ChoicesFilterState" name="set_selected_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.0089999999999999" classname="ChoicesFilterState" name="set_selected_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="set_selected_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.0100000000000002" classname="ChoicesFilterState" name="set_selected_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="set_selected_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.00999999999999979" classname="ChoicesFilterState" name="set_selected_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="set_selected_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.0110000000000001" classname="ChoicesFilterState" name="set_selected_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.00499999999999989" classname="ChoicesFilterState" name="set_selected_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.012" classname="ChoicesFilterState" name="set_selected_sets_the_intersection_of_choices_and_the_passed_values"/>
    <testcase time="0.0110000000000001" classname="ChoicesFilterState" name="set_selected_sets_the_intersection_of_choices_and_the_passed_values"/>
    <testcase time="0.0110000000000001" classname="ChoicesFilterState" name="set_selected_sets_the_intersection_of_choices_and_the_passed_values"/>
    <testcase time="0.00999999999999979" classname="ChoicesFilterState" name="set_selected_sets_the_intersection_of_choices_and_the_passed_values"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="set_selected_sets_the_intersection_of_choices_and_the_passed_values"/>
    <testcase time="0.00999999999999979" classname="ChoicesFilterState" name="set_selected_sets_the_intersection_of_choices_and_the_passed_values"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="set_selected_sets_the_intersection_of_choices_and_the_passed_values"/>
    <testcase time="0.012" classname="ChoicesFilterState" name="set_selected_sets_the_intersection_of_choices_and_the_passed_values"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="set_selected_sets_the_intersection_of_choices_and_the_passed_values"/>
    <testcase time="0.0110000000000001" classname="ChoicesFilterState" name="set_state_needs_a_named_list_with_selected_and_keep_na_elements"/>
    <testcase time="0.0390000000000001" classname="ChoicesFilterState" name="set_state_needs_a_named_list_with_selected_and_keep_na_elements"/>
    <testcase time="0.0139999999999998" classname="ChoicesFilterState" name="set_state_sets_values_of_selected_and_keep_na_as_provided_in_the_list"/>
    <testcase time="0.00900000000000034" classname="ChoicesFilterState" name="set_state_sets_values_of_selected_and_keep_na_as_provided_in_the_list"/>
    <testcase time="0.0139999999999998" classname="ChoicesFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.0089999999999999" classname="ChoicesFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.0169999999999999" classname="ChoicesFilterState" name="ChoicesFilterState_is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.0100000000000002" classname="ChoicesFilterState" name="ChoicesFilterState_is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.0110000000000001" classname="ChoicesFilterState" name="ChoicesFilterState_is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.0109999999999997" classname="ChoicesFilterState" name="ChoicesFilterState_is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.0410000000000004" classname="ChoicesFilterState" name="ChoicesFilterState_private_methods_return_proper_filtered_counts_and_choice_labels"/>
    <testcase time="0.012" classname="ChoicesFilterState" name="ChoicesFilterState_private_methods_return_proper_filtered_counts_and_choice_labels">
      <error type="error" message="Error in `filter_state$test_get_choice_labels()`: attempt to apply non-function ('test-ChoicesFilterState.R:296')">Error in `filter_state$test_get_choice_labels()`: attempt to apply non-function
Backtrace:
  1. testthat::expect_identical(...)
       at test-ChoicesFilterState.R:296:4
 16. filter_state$test_get_choice_labels()</error>
    </testcase>
  </testsuite>
  <testsuite name="DFFilterStates" timestamp="2023-03-03T17:02:32Z" hostname="df4995eb832b" tests="21" skipped="0" failures="2" errors="14" time="0.788">
    <testcase time="0.073" classname="DFFilterStates" name="The_contructor_accepts_a_string_as_varlabels_and_keys">
      <failure type="failure" message="Expected `DFFilterStates$new(...)` to run without any errors. ('test-DFFilterStates.R:2')">Expected `DFFilterStates$new(...)` to run without any errors.
ℹ Actually got a &lt;simpleError&gt;:
  Error in `checkmate::assert_data_frame()`:
  ! argument "data" is missing, with no default</failure>
    </testcase>
    <testcase time="0.0139999999999998" classname="DFFilterStates" name="The_contructor_accepts_a_string_as_varlabels_and_keys"/>
    <testcase time="0.0110000000000001" classname="DFFilterStates" name="get_fun_returns_dplyr_filter">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:11')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:11:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.032" classname="DFFilterStates" name="DFFilterStates_set_filter_state_sets_filters_in_FilterState_s_specified_by_the_named_list">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:23')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:23:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0389999999999997" classname="DFFilterStates" name="DFFilterStates_set_filter_state_sets_filters_as_a_named_unnamed_selected_list">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:48')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:48:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0310000000000001" classname="DFFilterStates" name="DFFilterStates_set_filter_state_updates_filter_state_which_was_set_already">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:72')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:72:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0329999999999999" classname="DFFilterStates" name="DFFilterStates_set_filter_state_throws_error_when_using_an_unnamed_list">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:99')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:99:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0330000000000004" classname="DFFilterStates" name="DFFilterStates_get_filter_state_returns_list_identical_to_input">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:116')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:116:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0319999999999996" classname="DFFilterStates" name="Selecting_a_new_variable_initializes_a_new_filter_state">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:132')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:132:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0350000000000001" classname="DFFilterStates" name="Adding_var_to_add_adds_another_filter_state">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:164')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:164:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0329999999999999" classname="DFFilterStates" name="DFFilterStates_remove_filter_state_removes_specified_filter_in_FilterState_s_">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:201')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:201:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0369999999999999" classname="DFFilterStates" name="DFFilterStates_remove_filter_state_throws_warning_when_name_is_not_in_FilterStates">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:226')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:226:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0420000000000003" classname="DFFilterStates" name="DFFilterStates_ui_add_filter_state_returns_a_message_inside_a_div_when_data_has_no_columns_or_no_rows">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:245')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:245:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0350000000000001" classname="DFFilterStates" name="_format_is_a_method_of_DFFilterStates">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:264')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:264:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0329999999999999" classname="DFFilterStates" name="_format_asserts_the_indent_argument_is_a_number">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:276')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:276:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0349999999999997" classname="DFFilterStates" name="_format_concatenates_its_FilterState_elements_using_n_without_additional_indent">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-DFFilterStates.R:289')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-DFFilterStates.R:289:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0859999999999999" classname="DFFilterStates" name="DFFilterStates_set_filter_state_sets_sid_after_state_list_index_and_varname"/>
    <testcase time="0.0580000000000007" classname="DFFilterStates" name="DFFilterState_get_call_skips_conditions_form_FilterState_which_are_identified_by_sid"/>
    <testcase time="0.032" classname="DFFilterStates" name="DFFilterState_get_call_skips_conditions_form_FilterState_which_are_identified_by_sid"/>
    <testcase time="0.0439999999999996" classname="DFFilterStates" name="DFFilterState_get_call_skips_conditions_form_FilterState_which_are_identified_by_sid">
      <failure type="failure" message="shiny::isolate(filter_states$get_call(sid = sid_attrs[3])) not identical to quote(...). ('test-DFFilterStates.R:384')">shiny::isolate(filter_states$get_call(sid = sid_attrs[3])) not identical to quote(...).
Objects equal but not identical</failure>
    </testcase>
    <testcase time="0.0199999999999996" classname="DFFilterStates" name="DFFilterState_get_call_skips_conditions_form_FilterState_which_are_identified_by_sid"/>
  </testsuite>
  <testsuite name="DateFilterState" timestamp="2023-03-03T17:02:33Z" hostname="df4995eb832b" tests="32" skipped="0" failures="4" errors="0" time="0.437">
    <testcase time="0.0230000000000006" classname="DateFilterState" name="The_constructor_accepts_a_Date_object"/>
    <testcase time="0.016" classname="DateFilterState" name="get_call_returns_a_condition_true_for_the_object_passed_in_the_constructor"/>
    <testcase time="0.032" classname="DateFilterState" name="set_selected_accepts_an_array_of_two_Date_objects"/>
    <testcase time="0.0249999999999995" classname="DateFilterState" name="set_selected_warns_when_selection_is_not_within_the_possible_range">
      <failure type="failure" message="`filter_state$set_selected(c(dates[1] - 1, dates[10]))` produced unexpected warnings. ('test-DateFilterState.R:19')">`filter_state$set_selected(c(dates[1] - 1, dates[10]))` produced unexpected warnings.
Expected match: outside of the possible range
Actual values:
* </failure>
    </testcase>
    <testcase time="0.0200000000000005" classname="DateFilterState" name="set_selected_warns_when_selection_is_not_within_the_possible_range">
      <failure type="failure" message="`filter_state$set_selected(c(dates[1], dates[10] + 1))` produced unexpected warnings. ('test-DateFilterState.R:23')">`filter_state$set_selected(c(dates[1], dates[10] + 1))` produced unexpected warnings.
Expected match: outside of the possible range
Actual values:
* </failure>
    </testcase>
    <testcase time="0.0220000000000002" classname="DateFilterState" name="set_selected_warns_when_selection_is_not_within_the_possible_range">
      <failure type="failure" message="`filter_state$set_selected(c(dates[1] - 1, dates[10] + 1))` produced unexpected warnings. ('test-DateFilterState.R:27')">`filter_state$set_selected(c(dates[1] - 1, dates[10] + 1))` produced unexpected warnings.
Expected match: outside of the possible range
Actual values:
* 
* </failure>
    </testcase>
    <testcase time="0.024" classname="DateFilterState" name="set_selected_limits_the_selected_range_to_the_lower_and_the_upper_bound_of_the_possible_range"/>
    <testcase time="0.00499999999999989" classname="DateFilterState" name="set_selected_limits_the_selected_range_to_the_lower_and_the_upper_bound_of_the_possible_range"/>
    <testcase time="0.00399999999999956" classname="DateFilterState" name="set_selected_limits_the_selected_range_to_the_lower_and_the_upper_bound_of_the_possible_range"/>
    <testcase time="0.0170000000000003" classname="DateFilterState" name="set_selected_raises_error_when_selection_is_not_sorted">
      <failure type="failure" message="`suppressWarnings(filter_state$set_selected(dates[c(10, 1)]))` did not throw an error. ('test-DateFilterState.R:45')">`suppressWarnings(filter_state$set_selected(dates[c(10, 1)]))` did not throw an error.</failure>
    </testcase>
    <testcase time="0.0310000000000006" classname="DateFilterState" name="set_selected_raises_error_when_selection_is_not_Date"/>
    <testcase time="0.016" classname="DateFilterState" name="get_call_returns_call_with_limits_imposed_by_constructor_and_selection"/>
    <testcase time="0.00499999999999989" classname="DateFilterState" name="get_call_returns_call_with_limits_imposed_by_constructor_and_selection"/>
    <testcase time="0.0129999999999999" classname="DateFilterState" name="set_keep_na_changes_whether_call_returned_by_get_call_allows_NA_values"/>
    <testcase time="0.00499999999999989" classname="DateFilterState" name="set_keep_na_changes_whether_call_returned_by_get_call_allows_NA_values"/>
    <testcase time="0.0129999999999999" classname="DateFilterState" name="set_state_accepts_a_named_list_with_selected_and_keep_na_elements"/>
    <testcase time="0.0110000000000001" classname="DateFilterState" name="set_state_accepts_a_named_list_with_selected_and_keep_na_elements"/>
    <testcase time="0.0190000000000001" classname="DateFilterState" name="set_state_sets_values_of_selected_and_keep_na_as_provided_in_the_list"/>
    <testcase time="0.00800000000000001" classname="DateFilterState" name="set_state_sets_values_of_selected_and_keep_na_as_provided_in_the_list"/>
    <testcase time="0.0110000000000001" classname="DateFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.00300000000000011" classname="DateFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.00699999999999967" classname="DateFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.0170000000000003" classname="DateFilterState" name="DateFilterState_is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.0119999999999996" classname="DateFilterState" name="DateFilterState_is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00999999999999979" classname="DateFilterState" name="DateFilterState_is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00900000000000034" classname="DateFilterState" name="DateFilterState_is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.0119999999999996" classname="DateFilterState" name="_format_is_a_FilterStates_s_method_that_accepts_indent"/>
    <testcase time="0.0170000000000003" classname="DateFilterState" name="_format_asserts_that_indent_is_numeric"/>
    <testcase time="0.0110000000000001" classname="DateFilterState" name="_format_returns_a_string_representation_the_FilterState_object"/>
    <testcase time="0.0119999999999996" classname="DateFilterState" name="_format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00400000000000045" classname="DateFilterState" name="_format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00299999999999923" classname="DateFilterState" name="_format_prepends_spaces_to_every_line_of_the_returned_string"/>
  </testsuite>
  <testsuite name="DatetimeFilterState" timestamp="2023-03-03T17:02:33Z" hostname="df4995eb832b" tests="32" skipped="0" failures="4" errors="0" time="0.471">
    <testcase time="0.0209999999999999" classname="DatetimeFilterState" name="constructor_accepts_a_POSIXct_or_POSIXlt_object"/>
    <testcase time="0.00800000000000001" classname="DatetimeFilterState" name="constructor_accepts_a_POSIXct_or_POSIXlt_object"/>
    <testcase time="0.0110000000000001" classname="DatetimeFilterState" name="get_call_returns_call_that_encompasses_all_values_passed_to_constructor"/>
    <testcase time="0.0330000000000004" classname="DatetimeFilterState" name="set_selected_accepts_an_array_of_two_POSIXct_objects"/>
    <testcase time="0.0139999999999993" classname="DatetimeFilterState" name="get_call_returns_a_condition_true_for_the_object_in_the_selected_range"/>
    <testcase time="0.0150000000000006" classname="DatetimeFilterState" name="get_call_returns_a_condition_true_for_the_object_in_the_selected_range"/>
    <testcase time="0.0110000000000001" classname="DatetimeFilterState" name="get_call_returns_a_condition_evaluating_to_TRUE_for_NA_values_after_set_keep_na_TRUE_"/>
    <testcase time="0.00499999999999989" classname="DatetimeFilterState" name="get_call_returns_a_condition_evaluating_to_TRUE_for_NA_values_after_set_keep_na_TRUE_"/>
    <testcase time="0.0139999999999993" classname="DatetimeFilterState" name="DatetimeFilterState_echoes_the_timezone_of_the_ISO_object_passed_to_the_constructor"/>
    <testcase time="0.0190000000000001" classname="DatetimeFilterState" name="set_selected_warns_when_the_selected_range_intersects_the_possible_range_but_is_not_fully_included_in_it">
      <failure type="failure" message="`filter_state$set_selected(c(objects[1] - 1, objects[1]))` produced unexpected warnings. ('test-DatetimeFilterState.R:65')">`filter_state$set_selected(c(objects[1] - 1, objects[1]))` produced unexpected warnings.
Expected match: outside of the possible range
Actual values:
* </failure>
    </testcase>
    <testcase time="0.0289999999999999" classname="DatetimeFilterState" name="set_selected_warns_when_the_selected_range_intersects_the_possible_range_but_is_not_fully_included_in_it">
      <failure type="failure" message="`filter_state$set_selected(c(objects[2], objects[2] + 1))` produced unexpected warnings. ('test-DatetimeFilterState.R:66')">`filter_state$set_selected(c(objects[2], objects[2] + 1))` produced unexpected warnings.
Expected match: outside of the possible range
Actual values:
* </failure>
    </testcase>
    <testcase time="0.0230000000000006" classname="DatetimeFilterState" name="set_selected_warns_when_the_selected_range_intersects_the_possible_range_but_is_not_fully_included_in_it">
      <failure type="failure" message="`filter_state$set_selected(c(objects[1] - 1, objects[2] + 1))` produced unexpected warnings. ('test-DatetimeFilterState.R:67')">`filter_state$set_selected(c(objects[1] - 1, objects[2] + 1))` produced unexpected warnings.
Expected match: outside of the possible range
Actual values:
* 
* </failure>
    </testcase>
    <testcase time="0.0299999999999994" classname="DatetimeFilterState" name="set_selected_throws_when_the_selected_range_is_completely_outside_of_the_possible_range">
      <failure type="failure" message="`suppressWarnings(...)` did not throw an error. ('test-DatetimeFilterState.R:76')">`suppressWarnings(...)` did not throw an error.</failure>
    </testcase>
    <testcase time="0.0280000000000005" classname="DatetimeFilterState" name="set_selected_limits_the_selected_range_to_the_lower_and_the_upper_bound_of_the_possible_range"/>
    <testcase time="0.00600000000000023" classname="DatetimeFilterState" name="set_selected_limits_the_selected_range_to_the_lower_and_the_upper_bound_of_the_possible_range"/>
    <testcase time="0.00699999999999967" classname="DatetimeFilterState" name="set_selected_limits_the_selected_range_to_the_lower_and_the_upper_bound_of_the_possible_range"/>
    <testcase time="0.0200000000000005" classname="DatetimeFilterState" name="set_selected_throws_when_the_value_type_cannot_be_interpreted_as_POSIX"/>
    <testcase time="0.0149999999999997" classname="DatetimeFilterState" name="set_state_needs_a_named_list_with_selected_and_keep_na_elements"/>
    <testcase time="0.0110000000000001" classname="DatetimeFilterState" name="set_state_needs_a_named_list_with_selected_and_keep_na_elements"/>
    <testcase time="0.0129999999999999" classname="DatetimeFilterState" name="set_state_sets_values_of_selected_and_keep_na_as_provided_in_the_list"/>
    <testcase time="0.00800000000000001" classname="DatetimeFilterState" name="set_state_sets_values_of_selected_and_keep_na_as_provided_in_the_list"/>
    <testcase time="0.0149999999999997" classname="DatetimeFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.00400000000000045" classname="DatetimeFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.00699999999999967" classname="DatetimeFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.0170000000000003" classname="DatetimeFilterState" name="DatetimeFilterState_is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00899999999999945" classname="DatetimeFilterState" name="DatetimeFilterState_is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.0120000000000005" classname="DatetimeFilterState" name="_format_is_a_FilterStates_s_method_that_accepts_indent"/>
    <testcase time="0.0190000000000001" classname="DatetimeFilterState" name="_format_asserts_that_indent_is_numeric"/>
    <testcase time="0.016" classname="DatetimeFilterState" name="_format_returns_a_string_representation_the_FilterState_object"/>
    <testcase time="0.0209999999999999" classname="DatetimeFilterState" name="_format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00599999999999934" classname="DatetimeFilterState" name="_format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00400000000000045" classname="DatetimeFilterState" name="_format_prepends_spaces_to_every_line_of_the_returned_string"/>
  </testsuite>
  <testsuite name="DefaultFilteredDataset" timestamp="2023-03-03T17:02:33Z" hostname="df4995eb832b" tests="10" skipped="0" failures="0" errors="1" time="0.294">
    <testcase time="0.0140000000000002" classname="DefaultFilteredDataset" name="The_constructor_accepts_a_data.frame_object_with_a_dataname"/>
    <testcase time="0.0139999999999993" classname="DefaultFilteredDataset" name="get_call_returns_a_list_of_calls_or_NULL"/>
    <testcase time="0.0510000000000002" classname="DefaultFilteredDataset" name="get_call_returns_a_list_of_calls_or_NULL"/>
    <testcase time="0.0390000000000006" classname="DefaultFilteredDataset" name="DefaultFilteredDataset_set_filter_state_sets_filters_specified_by_list_names"/>
    <testcase time="0.0169999999999995" classname="DefaultFilteredDataset" name="DefaultFilteredDataset_set_filter_state_throws_error_when_list_is_not_named"/>
    <testcase time="0.0430000000000001" classname="DefaultFilteredDataset" name="DefaultFilteredDataset_remove_filter_state_removes_desired_filter"/>
    <testcase time="0.04" classname="DefaultFilteredDataset" name="DefaultFilteredDataset_get_filter_state_returns_list_identical_to_input"/>
    <testcase time="0.0499999999999998" classname="DefaultFilteredDataset" name="DefaultFilteredDataset_remove_filter_state_removes_more_than_one_filter"/>
    <testcase time="0.0110000000000001" classname="DefaultFilteredDataset" name="get_filter_overview_info_returns_overview_matrix_for_DefaultFilteredDataset_without_filtering"/>
    <testcase time="0.0149999999999997" classname="DefaultFilteredDataset" name="get_filter_overview_info_returns_overview_matrix_for_DefaultFilteredDataset_if_a_filtered_dataset_is_passed_in">
      <error type="error" message="Error in `dataset_iris$get_filter_overview_info(dplyr::filter(utils::head(iris),  ('test-DefaultFilteredDataset.R:124')">Error in `dataset_iris$get_filter_overview_info(dplyr::filter(utils::head(iris), 
    Species == "virginica"))`: unused argument (dplyr::filter(utils::head(iris), Species == "virginica"))
Backtrace:
  1. testthat::expect_equal(...)
       at test-DefaultFilteredDataset.R:124:4
  4. shiny::isolate(...)
  6. ctx$run(...)
 13. env$runWith(self, func)
 14. shiny (local) contextFunc()
 15. shiny::..stacktraceon..(expr)</error>
    </testcase>
  </testsuite>
  <testsuite name="EmptyFilterState" timestamp="2023-03-03T17:02:34Z" hostname="df4995eb832b" tests="8" skipped="0" failures="0" errors="0" time="0.132">
    <testcase time="0.0520000000000005" classname="EmptyFilterState" name="get_call_returns_NULL_after_set_keep_na_FALSE_"/>
    <testcase time="0.0110000000000001" classname="EmptyFilterState" name="get_call_returns_a_call_after_set_keep_na_TRUE_"/>
    <testcase time="0.0149999999999997" classname="EmptyFilterState" name="set_state_needs_a_named_list_with_selected_and_keep_na_elements"/>
    <testcase time="0.00900000000000034" classname="EmptyFilterState" name="set_state_needs_a_named_list_with_selected_and_keep_na_elements"/>
    <testcase time="0.00999999999999979" classname="EmptyFilterState" name="set_state_needs_a_named_list_with_selected_and_keep_na_elements"/>
    <testcase time="0.0110000000000001" classname="EmptyFilterState" name="get_state_returns_a_list_identical_to_set_state_input"/>
    <testcase time="0.0149999999999997" classname="EmptyFilterState" name="EmptyFilterState_is_any_filtered_returns_FALSE_when_keep_na_is_TRUE_and_returns_TRUE_when_keep_na_is_FALSE"/>
    <testcase time="0.00900000000000034" classname="EmptyFilterState" name="EmptyFilterState_is_any_filtered_returns_FALSE_when_keep_na_is_TRUE_and_returns_TRUE_when_keep_na_is_FALSE"/>
  </testsuite>
  <testsuite name="FilterState-utils" timestamp="2023-03-03T17:02:34Z" hostname="df4995eb832b" tests="12" skipped="0" failures="0" errors="0" time="0.101">
    <testcase time="0.00999999999999979" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00999999999999979" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00900000000000034" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00900000000000034" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00999999999999979" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00999999999999979" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00900000000000034" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00999999999999979" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00999999999999979" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00600000000000023" classname="FilterState_utils" name="contain_interval_returns_containing_range"/>
    <testcase time="0.00399999999999956" classname="FilterState_utils" name="contain_interval_returns_x_if_interval_matches_ticks"/>
    <testcase time="0.00400000000000045" classname="FilterState_utils" name="contain_interval_returns_range_if_x_is_x_is_out_of_bounds"/>
  </testsuite>
  <testsuite name="FilterState" timestamp="2023-03-03T17:02:34Z" hostname="df4995eb832b" tests="38" skipped="0" failures="0" errors="0" time="0.376">
    <testcase time="0.0149999999999997" classname="FilterState" name="The_constructor_accepts_character_as_varname"/>
    <testcase time="0.0110000000000001" classname="FilterState" name="The_constructor_accepts_character_as_varname"/>
    <testcase time="0.0129999999999999" classname="FilterState" name="The_constructor_accepts_character_as_varname"/>
    <testcase time="0.0179999999999998" classname="FilterState" name="The_constructor_requires_a_varname"/>
    <testcase time="0.00800000000000001" classname="FilterState" name="The_constructor_accepts_a_string_as_varlabel"/>
    <testcase time="0.0210000000000008" classname="FilterState" name="dataname_must_be_specified_if_extract_type_is_specified"/>
    <testcase time="0.0129999999999999" classname="FilterState" name="get_call_returns_NULL"/>
    <testcase time="0.00899999999999945" classname="FilterState" name="get_dataname_returns_a_string_when_dataname_is_NULL"/>
    <testcase time="0.00900000000000034" classname="FilterState" name="get_varlabel_returns_a_string_passed_to_the_constructor"/>
    <testcase time="0.00800000000000001" classname="FilterState" name="get_varname_returns_a_name_if_varname_passed_to_the_constructor_is_a_string"/>
    <testcase time="0.00800000000000001" classname="FilterState" name="get_varname_returns_a_string_if_varname_passed_to_the_constructor_is_a_string"/>
    <testcase time="0.0119999999999996" classname="FilterState" name="get_selected_returns_NULL_after_initialization"/>
    <testcase time="0.00900000000000034" classname="FilterState" name="set_selected_sets_value_get_selected_returns_the_same"/>
    <testcase time="0.0119999999999996" classname="FilterState" name="get_keep_na_returns_FALSE_after_initialization"/>
    <testcase time="0.0100000000000007" classname="FilterState" name="set_state_sets_selected_and_keep_na"/>
    <testcase time="0.00999999999999979" classname="FilterState" name="get_state_returns_a_list_identical_to_set_state_input"/>
    <testcase time="0.00900000000000034" classname="FilterState" name="add_keep_na_call_does_not_add_anything_by_default"/>
    <testcase time="0.00999999999999979" classname="FilterState" name="add_keep_na_call_adds_is.na_when_keep_na_is_set"/>
    <testcase time="0.00999999999999979" classname="FilterState" name="Setting_private_na_rm_to_TRUE_adds_is.na_before_condition_via_add_keep_na_call"/>
    <testcase time="0.00999999999999979" classname="FilterState" name="Setting_private_na_rm_to_TRUE_doesn_t_add_is.na_before_condition_via_add_keep_na_call_when_variable_has_no_NAs"/>
    <testcase time="0.0110000000000001" classname="FilterState" name="_format_is_a_FilterStates_s_method_that_accepts_indent"/>
    <testcase time="0.0149999999999997" classname="FilterState" name="_format_asserts_that_indent_is_numeric"/>
    <testcase time="0.0120000000000005" classname="FilterState" name="_format_returns_a_string_representation_the_FilterState_object"/>
    <testcase time="0.0110000000000001" classname="FilterState" name="_format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00499999999999989" classname="FilterState" name="_format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00399999999999956" classname="FilterState" name="_format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.0120000000000005" classname="FilterState" name="_format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00499999999999989" classname="FilterState" name="_format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00499999999999989" classname="FilterState" name="_format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00900000000000034" classname="FilterState" name="_format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00600000000000023" classname="FilterState" name="_format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00399999999999956" classname="FilterState" name="_format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00400000000000045" classname="FilterState" name="_format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00499999999999989" classname="FilterState" name="_format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00399999999999956" classname="FilterState" name="_format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00400000000000045" classname="FilterState" name="_format_returns_a_properly_wrapped_string"/>
    <testcase time="0.0219999999999994" classname="FilterState" name="_format_line_wrapping_breaks_if_strings_are_too_long"/>
    <testcase time="0.0129999999999999" classname="FilterState" name="_format_line_wrapping_breaks_if_strings_are_too_long"/>
  </testsuite>
  <testsuite name="FilterStates" timestamp="2023-03-03T17:02:34Z" hostname="df4995eb832b" tests="54" skipped="0" failures="4" errors="41" time="9.992">
    <testcase time="0.0380000000000003" classname="FilterStates" name="The_constructor_accepts_only_a_string_as_dataname">
      <failure type="failure" message="Expected `FilterStates$new(dataname = &quot;string&quot;, datalabel = &quot;test&quot;)` to run without any errors. ('test-FilterStates.R:6')">Expected `FilterStates$new(dataname = "string", datalabel = "test")` to run without any errors.
ℹ Actually got a &lt;simpleError&gt;:
  Error in `initialize()`:
  ! argument "data" is missing, with no default</failure>
    </testcase>
    <testcase time="0.0140000000000002" classname="FilterStates" name="The_constructor_accepts_only_a_string_as_dataname"/>
    <testcase time="0.0110000000000001" classname="FilterStates" name="The_constructor_accepts_only_a_string_as_dataname"/>
    <testcase time="0.00899999999999945" classname="FilterStates" name="The_constructor_accepts_only_a_string_as_dataname"/>
    <testcase time="0.0180000000000007" classname="FilterStates" name="validate_state_list_exists_raises_errors_if_no_filters_were_added">
      <failure type="failure" message="`shiny::isolate(filter_states$state_list_get(1, 1))` threw an error with unexpected message. ('test-FilterStates.R:21')">`shiny::isolate(filter_states$state_list_get(1, 1))` threw an error with unexpected message.
Expected match: "Filter state list 1 has not been initialized in FilterStates object belonging to the dataset test"
Actual message: "Filter state list 1 has not been initialized in FilterStates object belonging to the dataset "
Backtrace:
  1. testthat::expect_error(...)
       at test-FilterStates.R:21:2
 18. filter_states$state_list_get(1, 1)
 19. private$validate_state_list_exists(state_list_index)</failure>
    </testcase>
    <testcase time="0.0349999999999993" classname="FilterStates" name="validate_state_list_exists_raises_errors_if_no_filters_were_added">
      <failure type="failure" message="`shiny::isolate(...)` threw an error with unexpected message. ('test-FilterStates.R:25')">`shiny::isolate(...)` threw an error with unexpected message.
Expected match: "Filter state list 1 has not been initialized in FilterStates object belonging to the dataset test"
Actual message: "Filter state list 1 has not been initialized in FilterStates object belonging to the dataset "
Backtrace:
  1. testthat::expect_error(...)
       at test-FilterStates.R:25:2
 18. filter_states$state_list_push(filter_state, 1, 1)
 19. private$validate_state_list_exists(state_list_index)</failure>
    </testcase>
    <testcase time="0.0339999999999998" classname="FilterStates" name="validate_state_list_exists_raises_errors_if_no_filters_were_added">
      <failure type="failure" message="`shiny::isolate(filter_states$state_list_remove(1, 1))` threw an error with unexpected message. ('test-FilterStates.R:29')">`shiny::isolate(filter_states$state_list_remove(1, 1))` threw an error with unexpected message.
Expected match: "Filter state list 1 has not been initialized in FilterStates object belonging to the dataset test"
Actual message: "Filter state list 1 has not been initialized in FilterStates object belonging to the dataset "
Backtrace:
  1. testthat::expect_error(...)
       at test-FilterStates.R:29:2
 18. filter_states$state_list_remove(1, 1)
 19. private$validate_state_list_exists(state_list_index)</failure>
    </testcase>
    <testcase time="0.0270000000000001" classname="FilterStates" name="Emptying_empty_FilterStates_does_not_raise_errors"/>
    <testcase time="0.00999999999999979" classname="FilterStates" name="Error_message_from_validate_state_list_exists_displays_index_if_datalabel_is_character_0_">
      <error type="error" message="Error in `initialize(...)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:41')">Error in `initialize(...)`: argument "data" is missing, with no default
Backtrace:
 1. FilterStates$new(dataname = "test", datalabel = character(0))
      at test-FilterStates.R:41:2
 2. teal.slice (local) initialize(...)</error>
    </testcase>
    <testcase time="0.0369999999999999" classname="FilterStates" name="state_list_push_does_not_raise_errors_DFFilterStates">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:51')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:51:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0380000000000003" classname="FilterStates" name="state_list_push_does_not_raise_errors_MatrixFilterStates">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:64')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:64:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="7.116" classname="FilterStates" name="state_list_push_does_not_raise_errors_SEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:75')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:75:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="1.109" classname="FilterStates" name="state_list_push_does_not_raise_errors_MAEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:86')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-FilterStates.R:86:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.0350000000000001" classname="FilterStates" name="Passing_a_FilterState_to_state_list_push_is_the_same_as_passing_it_in_a_list_DFFilterStates">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:103')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:103:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0329999999999995" classname="FilterStates" name="Passing_a_FilterState_to_state_list_push_is_the_same_as_passing_it_in_a_list_MatrixFilterStates">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:129')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:129:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="0.0440000000000005" classname="FilterStates" name="Passing_a_FilterState_to_state_list_push_is_the_same_as_passing_it_in_a_list_SEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:151')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:151:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0389999999999997" classname="FilterStates" name="Passing_a_FilterState_to_state_list_push_is_the_same_as_passing_it_in_a_list_MAEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:173')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-FilterStates.R:173:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.0449999999999999" classname="FilterStates" name="state_list_get_returns_the_list_of_FilterState_objects_pushed_DFFilterStates">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:199')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:199:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0449999999999999" classname="FilterStates" name="state_list_get_returns_the_list_of_FilterState_objects_pushed_MatrixFilterStates">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:211')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:211:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="0.0440000000000005" classname="FilterStates" name="state_list_get_returns_the_list_of_FilterState_objects_pushed_SEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:221')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:221:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0389999999999997" classname="FilterStates" name="state_list_get_returns_the_list_of_FilterState_objects_pushed_MAEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:231')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-FilterStates.R:231:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.0400000000000009" classname="FilterStates" name="Elements_of_the_list_returned_by_state_list_get_have_names_corresponding_to_varname_DFFilterStates">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:247')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:247:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0399999999999991" classname="FilterStates" name="Elements_of_the_list_returned_by_state_list_get_have_names_corresponding_to_varname_MatrixFilterStates">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:265')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:265:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="0.0419999999999998" classname="FilterStates" name="Elements_of_the_list_returned_by_state_list_get_have_names_corresponding_to_varname_SEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:281')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:281:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0410000000000004" classname="FilterStates" name="Elements_of_the_list_returned_by_state_list_get_have_names_corresponding_to_varname_MAEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:297')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-FilterStates.R:297:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.0400000000000009" classname="FilterStates" name="state_list_remove_removes_filter_state_without_error_DFFilterStates">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:315')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:315:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0379999999999985" classname="FilterStates" name="state_list_remove_removes_filter_state_without_error_MatrixFilterStates">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:329')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:329:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="0.0400000000000009" classname="FilterStates" name="state_list_remove_removes_filter_state_without_error_SEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:341')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:341:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0440000000000005" classname="FilterStates" name="state_list_remove_removes_filter_state_without_error_MAEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:353')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-FilterStates.R:353:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.0409999999999986" classname="FilterStates" name="state_list_is_empty_after_pushing_and_removing_an_element_from_it_DFFilterStates">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:369')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:369:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.043000000000001" classname="FilterStates" name="state_list_is_empty_after_pushing_and_removing_an_element_from_it_MatrixFilterStates">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:384')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:384:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="0.0389999999999997" classname="FilterStates" name="state_list_is_empty_after_pushing_and_removing_an_element_from_it_SEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:396')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:396:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0359999999999996" classname="FilterStates" name="state_list_is_empty_after_pushing_and_removing_an_element_from_it_MAEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:407')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-FilterStates.R:407:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.0389999999999997" classname="FilterStates" name="state_list_is_empty_after_state_list_empty_DFFilterStates">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:422')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:422:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0370000000000008" classname="FilterStates" name="state_list_is_empty_after_state_list_empty_MatrixFilterStates">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:435')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:435:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="0.0389999999999997" classname="FilterStates" name="state_list_is_empty_after_state_list_empty_SEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:446')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:446:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0389999999999997" classname="FilterStates" name="state_list_is_empty_after_state_list_empty_MAEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:457')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-FilterStates.R:457:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.0330000000000013" classname="FilterStates" name="get_fun_returns_subset_after_initialization"/>
    <testcase time="0.0119999999999987" classname="FilterStates" name="get_call_returns_NULL_after_initialization_if_no_filter_applied">
      <error type="error" message="Error in `initialize(...)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:479')">Error in `initialize(...)`: argument "data" is missing, with no default
Backtrace:
 1. FilterStates$new(dataname = "test", datalabel = "label")
      at test-FilterStates.R:479:2
 2. teal.slice (local) initialize(...)</error>
    </testcase>
    <testcase time="0.0420000000000016" classname="FilterStates" name="get_call_returns_a_call_filtering_a_data.frame_based_on_a_RangeFilterState">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:490')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:490:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0389999999999997" classname="FilterStates" name="get_call_returns_a_call_filtering_a_data.frame_based_on_a_ChoicesFilterState">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:512')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:512:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0399999999999991" classname="FilterStates" name="get_call_returns_a_call_filtering_a_data.frame_based_on_a_LogicalFilterState">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:534')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:534:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0410000000000004" classname="FilterStates" name="get_call_returns_a_call_filtering_a_data.frame_based_on_a_DateFilterState">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:556')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:556:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0410000000000004" classname="FilterStates" name="get_call_returns_a_call_filtering_a_data.frame_based_on_a_DatetimeFilterState">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:585')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:585:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0419999999999998" classname="FilterStates" name="get_call_returns_a_call_filtering_a_data.frame_base_on_a_combination_of_FilterState_objects">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:626')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:626:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0350000000000001" classname="FilterStates" name="data_choices_labeled_returns_an_empty_character_array_if_choices_are_an_empty_array"/>
    <testcase time="0.0129999999999999" classname="FilterStates" name="data_choices_labeled_returns_a_choices_labeled_object_if_choices_are_not_empty"/>
    <testcase time="0.00600000000000023" classname="FilterStates" name="data_choices_labeled_returns_names_of_the_elements_matching_the_choices"/>
    <testcase time="0.00499999999999901" classname="FilterStates" name="data_choices_labeled_returns_labels_of_the_elements_matching_the_choices_if_the_varlabels_are_provided_for_the_elements"/>
    <testcase time="0.0120000000000005" classname="FilterStates" name="get_filter_count_returns_the_number_of_active_filter_states_DFFilterStates">
      <error type="error" message="Error in `checkmate::assert_data_frame(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:701')">Error in `checkmate::assert_data_frame(data)`: argument "data" is missing, with no default
Backtrace:
 1. DFFilterStates$new(...)
      at test-FilterStates.R:701:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_data_frame(data)</error>
    </testcase>
    <testcase time="0.0380000000000003" classname="FilterStates" name="get_filter_count_returns_the_number_of_active_filter_states_MartixFilterStates">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:717')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:717:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="0.0660000000000007" classname="FilterStates" name="get_filter_count_returns_the_number_of_active_filter_states_SEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:731')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:731:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0329999999999995" classname="FilterStates" name="get_filter_count_returns_the_number_of_active_filter_states_MAEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:745')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-FilterStates.R:745:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.0360000000000014" classname="FilterStates" name="get_filter_count_properly_tallies_multiple_state_lists_SEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-FilterStates.R:761')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-FilterStates.R:761:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
  </testsuite>
  <testsuite name="FilteredData" timestamp="2023-03-03T17:02:44Z" hostname="df4995eb832b" tests="65" skipped="0" failures="1" errors="4" time="3.002">
    <testcase time="0.0389999999999979" classname="FilteredData" name="The_constructor_does_not_throw"/>
    <testcase time="0.0100000000000016" classname="FilteredData" name="set_dataset_accepts_a_data.frame_object"/>
    <testcase time="0.00799999999999912" classname="FilteredData" name="set_dataset_returns_self"/>
    <testcase time="0.00900000000000034" classname="FilteredData" name="get_keys_returns_an_empty_character_when_dataset_has_no_keys"/>
    <testcase time="0.00900000000000034" classname="FilteredData" name="get_keys_returns_the_same_character_array_if_a_dataset_has_keys"/>
    <testcase time="0.0139999999999993" classname="FilteredData" name="get_join_keys_returns_NULL_if_no_join_keys"/>
    <testcase time="0.0309999999999988" classname="FilteredData" name="get_join_keys_returns_join_keys_object_if_it_exists"/>
    <testcase time="0.0100000000000016" classname="FilteredData" name="get_varnames_returns_dataname_s_column_names"/>
    <testcase time="0.0109999999999992" classname="FilteredData" name="get_varlabels_returns_an_array_of_NAs_when_dataset_has_no_variable_labels"/>
    <testcase time="0.0100000000000016" classname="FilteredData" name="get_varlabels_returns_array_s_labels_when_dataset_has_variable_labels"/>
    <testcase time="0.00999999999999801" classname="FilteredData" name="get_datalabel_returns_character_0_for_a_dataset_with_no_labels"/>
    <testcase time="0.00900000000000034" classname="FilteredData" name="get_datalabel_returns_the_label_of_a_passed_dataset"/>
    <testcase time="0.0180000000000007" classname="FilteredData" name="get_metadata_throws_error_if_dataset_does_not_exist"/>
    <testcase time="0.0150000000000006" classname="FilteredData" name="get_metadata_returns_metadata_if_dataset_exists"/>
    <testcase time="0.00600000000000023" classname="FilteredData" name="get_metadata_returns_metadata_if_dataset_exists"/>
    <testcase time="0.0109999999999992" classname="FilteredData" name="get_code_returns_the_code_passed_to_set_code"/>
    <testcase time="0.00400000000000134" classname="FilteredData" name="get_code_returns_a_string_when_FilteredData_has_no_code"/>
    <testcase time="0.014999999999997" classname="FilteredData" name="get_data_does_not_throw_when_passed_a_dataset_name"/>
    <testcase time="0.0100000000000016" classname="FilteredData" name="get_filtered_dataset_returns_a_list_of_FilteredDataset"/>
    <testcase time="0.0180000000000007" classname="FilteredData" name="get_filtered_dataset_returns_a_list_with_elements_named_after_set_datasets"/>
    <testcase time="0.0150000000000006" classname="FilteredData" name="get_call_returns_a_list_of_language_objects_or_NULL"/>
    <testcase time="0.0380000000000003" classname="FilteredData" name="get_call_returns_a_list_of_language_objects_or_NULL"/>
    <testcase time="0.0739999999999981" classname="FilteredData" name="FilteredData_set_filter_state_sets_filters_in_FilteredDataset_specified_by_the_named_list"/>
    <testcase time="0.00499999999999901" classname="FilteredData" name="FilteredData_set_filter_state_sets_filters_in_FilteredDataset_specified_by_the_named_list"/>
    <testcase time="0.0210000000000008" classname="FilteredData" name="FilteredData_set_filter_state_throws_error_with_unnamed_datasets_list"/>
    <testcase time="0.0249999999999986" classname="FilteredData" name="FilteredData_set_filter_state_throws_error_with_unnamed_variables_list"/>
    <testcase time="0.150000000000002" classname="FilteredData" name="FilteredData_get_filter_state_returns_list_identical_to_input_with_attributes">
      <error type="error" message="Error in `colData(data)`: could not find function &quot;colData&quot; ('test-FilteredData.R:276')">Error in `colData(data)`: could not find function "colData"
Backtrace:
  1. shiny::isolate(datasets$set_filter_state(state = fs))
       at test-FilteredData.R:276:4
 13. datasets$set_filter_state(state = fs)
 14. base::lapply(...)
 15. teal.slice (local) FUN(X[[i]], ...)
 16. fdataset$set_filter_state(state = dataset_state)
 17. base::lapply(...)
 18. teal.slice (local) FUN(X[[i]], ...)
 19. fs$set_filter_state(state = state[[fs_name]])
 20. teal.slice:::get_supported_filter_varnames(colData(data))</error>
    </testcase>
    <testcase time="0.163" classname="FilteredData" name="FilteredData_get_filter_state_returns_list_whose_attribute_is_a_character_form_of_the_list">
      <error type="error" message="Error in `colData(data)`: could not find function &quot;colData&quot; ('test-FilteredData.R:311')">Error in `colData(data)`: could not find function "colData"
Backtrace:
  1. shiny::isolate(datasets$set_filter_state(state = fs))
       at test-FilteredData.R:311:4
 13. datasets$set_filter_state(state = fs)
 14. base::lapply(...)
 15. teal.slice (local) FUN(X[[i]], ...)
 16. fdataset$set_filter_state(state = dataset_state)
 17. base::lapply(...)
 18. teal.slice (local) FUN(X[[i]], ...)
 19. fs$set_filter_state(state = state[[fs_name]])
 20. teal.slice:::get_supported_filter_varnames(colData(data))</error>
    </testcase>
    <testcase time="0.107999999999997" classname="FilteredData" name="FilteredData_remove_filter_state_removes_states_defined_in_list"/>
    <testcase time="0.0860000000000021" classname="FilteredData" name="FilteredData_remove_all_filter_states_removes_all_filters_of_all_datasets_in_FilteredData"/>
    <testcase time="0.00799999999999912" classname="FilteredData" name="FilteredData_remove_all_filter_states_removes_all_filters_of_all_datasets_in_FilteredData"/>
    <testcase time="0.0770000000000017" classname="FilteredData" name="FilteredData_remove_all_filter_states_remove_the_filters_of_the_desired_dataset_only"/>
    <testcase time="0.00600000000000023" classname="FilteredData" name="FilteredData_remove_all_filter_states_remove_the_filters_of_the_desired_dataset_only"/>
    <testcase time="0.308999999999997" classname="FilteredData" name="get_filter_overview_accepts_all_datasets_argument_input"/>
    <testcase time="0.106000000000002" classname="FilteredData" name="get_filter_overview_accepts_single_dataset_argument_input"/>
    <testcase time="0.00499999999999901" classname="FilteredData" name="get_filter_overview_accepts_single_dataset_argument_input"/>
    <testcase time="0.109999999999999" classname="FilteredData" name="get_filter_overview_accepts_single_dataset_argument_input"/>
    <testcase time="0.109999999999999" classname="FilteredData" name="get_filter_overview_throws_error_with_empty_argument_input"/>
    <testcase time="0.114000000000001" classname="FilteredData" name="get_filter_overview_throws_error_with_wrong_argument_input"/>
    <testcase time="0.0339999999999989" classname="FilteredData" name="get_filter_overview_throws_error_with_wrong_argument_input"/>
    <testcase time="0.0120000000000005" classname="FilteredData" name="get_filter_overview_throws_error_with_wrong_argument_input"/>
    <testcase time="0.234000000000002" classname="FilteredData" name="get_filter_overview_returns_overview_matrix_for_non_filtered_datasets"/>
    <testcase time="0.137" classname="FilteredData" name="get_filter_overview_returns_overview_matrix_for_filtered_datasets">
      <error type="error" message="Error in `vapply(items, function(x) !attr(x, &quot;sid&quot;) %in% sid, logical(1L))`: values must be length 1, ('test-FilteredData.R:512')">Error in `vapply(items, function(x) !attr(x, "sid") %in% sid, logical(1L))`: values must be length 1,
 but FUN(X[[1]]) result is length 0
Backtrace:
  1. testthat::expect_equal(...)
       at test-FilteredData.R:512:2
 16. datasets$get_filter_overview(datasets$datanames())
 17. base::lapply(...)
 18. teal.slice (local) FUN(X[[i]], ...)
 19. self$get_filtered_dataset(dataname)$get_filter_overview_info()
 21. private$get_filter_overview_nobs(dataset, data_filtered)
 23. shiny (local) data_filtered()
 25. self$.updateValue()
 26. ctx$run(...)
     ...
 40. private$data_filtered_fun()
 41. self$get_call(sid)
 42. super$get_call(sid)
 46. base::lapply(self$get_filter_states(), function(x) x$get_call(sid))
 47. teal.slice (local) FUN(X[[i]], ...)
 48. x$get_call(sid)
 49. base::sapply(...)
 50. base::lapply(X = X, FUN = FUN, ...)
 51. teal.slice (local) FUN(X[[i]], ...)
 52. base::vapply(items, function(x) !attr(x, "sid") %in% sid, logical(1L))</error>
    </testcase>
    <testcase time="0.0549999999999997" classname="FilteredData" name="restore_state_from_bookmark_is_a_pure_virtual_method">
      <failure type="failure" message="`FilteredData$new(list(iris = list(dataset = iris)), join_keys = NULL)$restore_state_from_bookmark(&quot;test&quot;)` threw an error with unexpected message. ('test-FilteredData.R:533')">`FilteredData$new(list(iris = list(dataset = iris)), join_keys = NULL)$restore_state_from_bookmark("test")` threw an error with unexpected message.
Expected match: "Pure virtual method"
Actual message: "attempt to apply non-function"
Backtrace:
 1. testthat::expect_error(...)
      at test-FilteredData.R:533:2
 2. testthat:::quasi_capture(...)
 5. rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))</failure>
    </testcase>
    <testcase time="0.0410000000000004" classname="FilteredData" name="get_filter_expr_returns_a_string_with_a_filtering_expression"/>
    <testcase time="0.0159999999999982" classname="FilteredData" name="FilteredData_from_TealData_preserves_the_check_field_when_check_is_FALSE"/>
    <testcase time="0.0150000000000006" classname="FilteredData" name="FilteredData_preserves_the_check_field_when_check_is_TRUE"/>
    <testcase time="0.0139999999999993" classname="FilteredData" name="get_data_returns_the_object_passed_to_the_constructor"/>
    <testcase time="0.0190000000000019" classname="FilteredData" name="get_data_assert_the_filtered_argument_is_logical_1_"/>
    <testcase time="0.157" classname="FilteredData" name="filter_panel_disable"/>
    <testcase time="0.0809999999999995" classname="FilteredData" name="filter_panel_enable"/>
    <testcase time="0.00399999999999778" classname="FilteredData" name="filter_panel_enable"/>
    <testcase time="0.0790000000000006" classname="FilteredData" name="filter_panel_disable_and_filter_panel_enable"/>
    <testcase time="0.00700000000000145" classname="FilteredData" name="filter_panel_disable_and_filter_panel_enable"/>
    <testcase time="0.00999999999999801" classname="FilteredData" name="filter_panel_disable_and_filter_panel_enable"/>
    <testcase time="0.00800000000000267" classname="FilteredData" name="filter_panel_disable_and_filter_panel_enable"/>
    <testcase time="0.0719999999999992" classname="FilteredData" name="filter_panel_disable_and_filter_panel_enable"/>
    <testcase time="0.00799999999999912" classname="FilteredData" name="filter_panel_disable_and_filter_panel_enable"/>
    <testcase time="0.0150000000000006" classname="FilteredData" name="turn_filed_by_default_equal_to_TRUE"/>
    <testcase time="0.00900000000000034" classname="FilteredData" name="get_filter_panel_ui_id_empty_when_no_shiny_session"/>
    <testcase time="0.0549999999999997" classname="FilteredData" name="get_filter_panel_ui_id_non_empty_when_in_shiny_session"/>
    <testcase time="0.032" classname="FilteredData" name="FilteredData_get_active_filters_properly_tallies_active_filter_states"/>
    <testcase time="0.0569999999999986" classname="FilteredData" name="FilteredData_get_active_filters_properly_tallies_active_filter_states"/>
    <testcase time="0.0219999999999985" classname="FilteredData" name="FilteredData_get_active_filters_properly_tallies_active_filter_states_for_MAE_objects"/>
    <testcase time="0.0120000000000005" classname="FilteredData" name="FilteredData_get_active_filters_properly_tallies_active_filter_states_for_MAE_objects">
      <error type="error" message="Error in `colData(data)`: could not find function &quot;colData&quot; ('test-FilteredData.R:699')">Error in `colData(data)`: could not find function "colData"
Backtrace:
  1. shiny::isolate(datasets$set_filter_state(state = fs))
       at test-FilteredData.R:699:4
 13. datasets$set_filter_state(state = fs)
 14. base::lapply(...)
 15. teal.slice (local) FUN(X[[i]], ...)
 16. fdataset$set_filter_state(state = dataset_state)
 17. base::lapply(...)
 18. teal.slice (local) FUN(X[[i]], ...)
 19. fs$set_filter_state(state = state[[fs_name]])
 20. teal.slice:::get_supported_filter_varnames(colData(data))</error>
    </testcase>
  </testsuite>
  <testsuite name="FilteredDataset" timestamp="2023-03-03T17:02:47Z" hostname="df4995eb832b" tests="21" skipped="0" failures="0" errors="3" time="0.352">
    <testcase time="0.0380000000000003" classname="FilteredDataset" name="The_constructor_accepts_a_data.frame_object_and_dataname"/>
    <testcase time="0.00499999999999901" classname="FilteredDataset" name="state_lists_empty_does_not_throw_after_initializing_FilteredDataset"/>
    <testcase time="0.00500000000000256" classname="FilteredDataset" name="get_filter_states_returns_an_empty_list_after_initialization"/>
    <testcase time="0.00499999999999901" classname="FilteredDataset" name="get_dataname_returns_the_dataname_passed_to_the_constructor"/>
    <testcase time="0.00600000000000023" classname="FilteredDataset" name="get_dataset_returns_the_dataset_passed_to_the_constructor"/>
    <testcase time="0.00400000000000134" classname="FilteredDataset" name="get_dataset_label_retruns_the_dataset_label_passed_to_the_constructor"/>
    <testcase time="0.00499999999999901" classname="FilteredDataset" name="get_keys_returns_the_keys_passed_to_the_constructor"/>
    <testcase time="0.0109999999999992" classname="FilteredDataset" name="set_filterable_varnames_restricts_which_variables_can_be_filtered">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-FilteredDataset.R:38')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
 1. testthat::expect_setequal(...)
      at test-FilteredDataset.R:38:2
 2. testthat::quasi_label(enquo(object), arg = "object")
 3. rlang::eval_bare(expr, quo_get_env(quo))</error>
    </testcase>
    <testcase time="0.0350000000000001" classname="FilteredDataset" name="setting_filterable_varnames_to_NULL_or_character_0_does_not_affect_the_filterable_variables">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-FilteredDataset.R:52')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
 1. testthat::expect_setequal(...)
      at test-FilteredDataset.R:52:2
 2. testthat::quasi_label(enquo(object), arg = "object")
 3. rlang::eval_bare(expr, quo_get_env(quo))</error>
    </testcase>
    <testcase time="0.0330000000000013" classname="FilteredDataset" name="setting_filterable_varnames_which_include_columns_that_do_not_exist_ignores_these_columns">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-FilteredDataset.R:61')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
 1. testthat::expect_equal(...)
      at test-FilteredDataset.R:61:2
 2. testthat::quasi_label(enquo(object), label, arg = "object")
 3. rlang::eval_bare(expr, quo_get_env(quo))</error>
    </testcase>
    <testcase time="0.0339999999999989" classname="FilteredDataset" name="setting_filterable_varnames_with_varnames_not_NULL_or_non_missing_character_throws_error"/>
    <testcase time="0.0100000000000016" classname="FilteredDataset" name="setting_filterable_varnames_with_varnames_not_NULL_or_non_missing_character_throws_error"/>
    <testcase time="0.00899999999999679" classname="FilteredDataset" name="setting_filterable_varnames_with_varnames_not_NULL_or_non_missing_character_throws_error"/>
    <testcase time="0.00600000000000023" classname="FilteredDataset" name="get_varlabels_NULL_returns_a_named_array_of_NAs_if_data.frame_has_no_varlabels"/>
    <testcase time="0.00499999999999901" classname="FilteredDataset" name="get_varlabels_returns_labels_for_the_part_of_the_variables_only"/>
    <testcase time="0.00600000000000023" classname="FilteredDataset" name="get_varnames_returns_the_names_of_the_variables_in_the_data_passed_to_the_constructor"/>
    <testcase time="0.0139999999999993" classname="FilteredDataset" name="ui_add_filter_state_is_pure_virtual"/>
    <testcase time="0.00700000000000145" classname="FilteredDataset" name="get_metadata_returns_the_metadata_of_the_data_passed_to_the_constructor"/>
    <testcase time="0.00799999999999912" classname="FilteredDataset" name="get_metadata_returns_the_metadata_of_the_data_passed_to_the_constructor"/>
    <testcase time="0.0420000000000016" classname="FilteredDataset" name="_get_formatted_filter_state_returns_a_string_representation_of_filters"/>
    <testcase time="0.0640000000000001" classname="FilteredDataset" name="_get_call_returns_the_filter_call_of_the_dataset"/>
  </testsuite>
  <testsuite name="LogicalFilterState" timestamp="2023-03-03T17:02:48Z" hostname="df4995eb832b" tests="35" skipped="0" failures="0" errors="0" time="0.345">
    <testcase time="0.0189999999999984" classname="LogicalFilterState" name="The_constructor_accepts_logical_values"/>
    <testcase time="0.0100000000000016" classname="LogicalFilterState" name="The_constructor_accepts_NA_values"/>
    <testcase time="0.0109999999999992" classname="LogicalFilterState" name="get_call_returns_FALSE_values_from_data_passed_to_selector"/>
    <testcase time="0.0100000000000016" classname="LogicalFilterState" name="set_selected_accepts_a_logical_of_length_1"/>
    <testcase time="0.00300000000000011" classname="LogicalFilterState" name="set_selected_accepts_a_logical_of_length_1"/>
    <testcase time="0.00999999999999801" classname="LogicalFilterState" name="set_selected_accepts_a_logical_of_length_1"/>
    <testcase time="0.0120000000000005" classname="LogicalFilterState" name="set_selected_accepts_a_non_logical_coercible_to_logical_of_length_1"/>
    <testcase time="0.00300000000000011" classname="LogicalFilterState" name="set_selected_accepts_a_non_logical_coercible_to_logical_of_length_1"/>
    <testcase time="0.0100000000000016" classname="LogicalFilterState" name="set_selected_accepts_a_non_logical_coercible_to_logical_of_length_1"/>
    <testcase time="0.0119999999999969" classname="LogicalFilterState" name="get_call_returns_appropriate_call_depending_on_selection_state"/>
    <testcase time="0.00600000000000023" classname="LogicalFilterState" name="get_call_returns_appropriate_call_depending_on_selection_state"/>
    <testcase time="0.00400000000000134" classname="LogicalFilterState" name="get_call_returns_appropriate_call_depending_on_selection_state"/>
    <testcase time="0.0100000000000016" classname="LogicalFilterState" name="set_state_needs_a_named_list_with_selected_and_keep_na_elements"/>
    <testcase time="0.00899999999999679" classname="LogicalFilterState" name="set_state_needs_a_named_list_with_selected_and_keep_na_elements"/>
    <testcase time="0.0110000000000028" classname="LogicalFilterState" name="set_state_sets_values_of_selected_and_keep_na_as_provided_in_the_list"/>
    <testcase time="0.0069999999999979" classname="LogicalFilterState" name="set_state_sets_values_of_selected_and_keep_na_as_provided_in_the_list"/>
    <testcase time="0.0100000000000016" classname="LogicalFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.0069999999999979" classname="LogicalFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.00700000000000145" classname="LogicalFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.0160000000000018" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00799999999999912" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.0159999999999982" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.00800000000000267" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.00899999999999679" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.00900000000000034" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.00900000000000034" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.0100000000000016" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.0159999999999982" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_only_TRUE_or_FALSE_is_present"/>
    <testcase time="0.0100000000000016" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_only_TRUE_or_FALSE_is_present"/>
    <testcase time="0.00999999999999801" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_only_TRUE_or_FALSE_is_present"/>
    <testcase time="0.00900000000000034" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_only_TRUE_or_FALSE_is_present"/>
    <testcase time="0.0160000000000018" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_only_TRUE_or_FALSE_is_present"/>
    <testcase time="0.00900000000000034" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_only_TRUE_or_FALSE_is_present"/>
    <testcase time="0.00900000000000034" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_only_TRUE_or_FALSE_is_present"/>
    <testcase time="0.00999999999999801" classname="LogicalFilterState" name="LogicalFilterState_is_any_filtered_works_properly_when_only_TRUE_or_FALSE_is_present"/>
  </testsuite>
  <testsuite name="MAEFilterStates" timestamp="2023-03-03T17:02:48Z" hostname="df4995eb832b" tests="17" skipped="0" failures="1" errors="15" time="1.168">
    <testcase time="0.0259999999999998" classname="MAEFilterStates" name="The_constructor_does_not_throw">
      <failure type="failure" message="Expected `MAEFilterStates$new(...)` to run without any errors. ('test-MAEFilterStates.R:2')">Expected `MAEFilterStates$new(...)` to run without any errors.
ℹ Actually got a &lt;simpleError&gt;:
  Error in `checkmate::assert_class()`:
  ! argument "data" is missing, with no default</failure>
    </testcase>
    <testcase time="0.0130000000000017" classname="MAEFilterStates" name="The_constructor_does_not_throw"/>
    <testcase time="0.00999999999999801" classname="MAEFilterStates" name="MAEFilterStates_accept_vector_as_an_input_for_varlabels">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:13')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:13:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.0310000000000024" classname="MAEFilterStates" name="get_fun_returns_the_MAE_specific_subset_function">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:23')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:23:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.0300000000000011" classname="MAEFilterStates" name="The_constructor_initializes_a_state_list">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:33')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:33:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.102" classname="MAEFilterStates" name="get_call_returns_a_call_filtering_an_MAE_object_using_ChoicesFilterState">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:44')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:44:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.100999999999999" classname="MAEFilterStates" name="get_call_returns_a_call_filtering_an_MAE_object_using_RangeFilterState">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:69')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:69:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.102" classname="MAEFilterStates" name="MAEFilterStates_set_filter_state_sets_filters_in_FilterState_s_specified_by_the_named_list">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:103')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:103:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.106000000000002" classname="MAEFilterStates" name="MAEFilterStates_set_filter_state_updates_filter_state_which_was_set_already">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:132')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:132:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.107999999999997" classname="MAEFilterStates" name="MAEFilterStates_set_filter_state_throws_error_when_not_using_a_named_list">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:169')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:169:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.104000000000003" classname="MAEFilterStates" name="MAEFilterStates_get_filter_state_returns_list_identical_to_input">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:188')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:188:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.108000000000001" classname="MAEFilterStates" name="MAEFilterStates_remove_filter_state_removes_filters_in_FilterState_s_">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:208')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:208:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.104999999999997" classname="MAEFilterStates" name="MAEFilterStates_remove_filter_state_throws_warning_when_name_is_not_in_FilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:242')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:242:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.0410000000000004" classname="MAEFilterStates" name="MAEFilterStates_ui_add_filter_state_returns_a_message_inside_a_div_when_data_has_no_rows_or_no_columns">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:263')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:263:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.0390000000000015" classname="MAEFilterStates" name="_format_is_a_method_of_MAEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:289')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:289:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.0359999999999978" classname="MAEFilterStates" name="_format_asserts_the_indent_argument_is_a_number">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:301')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:301:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
    <testcase time="0.106000000000002" classname="MAEFilterStates" name="_format_concatenates_its_FilterState_elements_using_n_and_indents_the_FilterState_objects">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;MultiAssayExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-MAEFilterStates.R:315')">Error in `checkmate::assert_class(data, "MultiAssayExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. MAEFilterStates$new(...)
      at test-MAEFilterStates.R:315:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "MultiAssayExperiment")</error>
    </testcase>
  </testsuite>
  <testsuite name="MAEFilteredDataset" timestamp="2023-03-03T17:02:49Z" hostname="df4995eb832b" tests="17" skipped="0" failures="0" errors="8" time="2.048">
    <testcase time="0.122999999999998" classname="MAEFilteredDataset" name="MAEFilteredDataset_accepts_a_MultiAssayExperiment_object"/>
    <testcase time="0.0120000000000005" classname="MAEFilteredDataset" name="MAEFilteredDataset_throws_error_with_a_data.frame_passed_to_constructor"/>
    <testcase time="0.100000000000001" classname="MAEFilteredDataset" name="MAEFilteredDataset_get_call_returns_NULL_without_applying_filter"/>
    <testcase time="0.111999999999998" classname="MAEFilteredDataset" name="MAEFilteredDataset_get_call_returns_a_call_with_applying_filter">
      <error type="error" message="Error in `vapply(items, function(x) !attr(x, &quot;sid&quot;) %in% sid, logical(1L))`: values must be length 1, ('test-MAEFilteredDataset.R:34')">Error in `vapply(items, function(x) !attr(x, "sid") %in% sid, logical(1L))`: values must be length 1,
 but FUN(X[[1]]) result is length 0
Backtrace:
  1. shiny::isolate(filtered_dataset$get_call())
       at test-MAEFilteredDataset.R:34:2
 13. filtered_dataset$get_call()
 17. base::lapply(self$get_filter_states(), function(x) x$get_call(sid))
 18. teal.slice (local) FUN(X[[i]], ...)
 19. x$get_call(sid)
 20. base::sapply(...)
 21. base::lapply(X = X, FUN = FUN, ...)
 22. teal.slice (local) FUN(X[[i]], ...)
 23. base::vapply(items, function(x) !attr(x, "sid") %in% sid, logical(1L))</error>
    </testcase>
    <testcase time="0.189" classname="MAEFilteredDataset" name="get_filter_overview_info_returns_overview_matrix_for_MAEFilteredDataset_without_filtering"/>
    <testcase time="0.186" classname="MAEFilteredDataset" name="get_filter_overview_info_returns_overview_matrix_for_MAEFilteredDataset_with_filtering">
      <error type="error" message="Error in `filtered_dataset$get_filter_overview_info(MultiAssayExperiment::subsetByColData(miniACC,  ('test-MAEFilteredDataset.R:79')">Error in `filtered_dataset$get_filter_overview_info(MultiAssayExperiment::subsetByColData(miniACC, 
    y = !is.na(miniACC$race) &amp; miniACC$race == "white"))`: unused argument (MultiAssayExperiment::subsetByColData(miniACC, y = !is.na(miniACC$race) &amp; miniACC$race == "white"))
Backtrace:
  1. testthat::expect_equal(...)
       at test-MAEFilteredDataset.R:79:2
  4. shiny::isolate(...)
  6. ctx$run(...)
 13. env$runWith(self, func)
 14. shiny (local) contextFunc()
 15. shiny::..stacktraceon..(expr)</error>
    </testcase>
    <testcase time="0.126000000000001" classname="MAEFilteredDataset" name="MAEFilteredDataset_set_filter_state_sets_filters_in_FilterStates_specified_by_list_names">
      <error type="error" message="Error in `colData(data)`: could not find function &quot;colData&quot; ('test-MAEFilteredDataset.R:113')">Error in `colData(data)`: could not find function "colData"
Backtrace:
  1. shiny::isolate(dataset$set_filter_state(state = fs))
       at test-MAEFilteredDataset.R:113:4
 13. dataset$set_filter_state(state = fs)
 14. base::lapply(...)
 15. teal.slice (local) FUN(X[[i]], ...)
 16. fs$set_filter_state(state = state[[fs_name]])
 17. teal.slice:::get_supported_filter_varnames(colData(data))</error>
    </testcase>
    <testcase time="0.120999999999999" classname="MAEFilteredDataset" name="MAEFilteredDataset_set_filter_state_throws_error_when_using_unnamed_list"/>
    <testcase time="0.100000000000001" classname="MAEFilteredDataset" name="MAEFilteredDataset_set_filter_state_throws_error_when_using_unnamed_variables_list"/>
    <testcase time="0.0990000000000002" classname="MAEFilteredDataset" name="MAEFilteredDataset_set_filter_state_throws_error_if_state_argument_is_not_a_list_"/>
    <testcase time="0.103999999999999" classname="MAEFilteredDataset" name="MAEFilteredDataset_get_filter_state_returns_list_identical_to_input">
      <error type="error" message="Error in `colData(data)`: could not find function &quot;colData&quot; ('test-MAEFilteredDataset.R:200')">Error in `colData(data)`: could not find function "colData"
Backtrace:
  1. shiny::isolate(dataset$set_filter_state(state = fs))
       at test-MAEFilteredDataset.R:200:4
 13. dataset$set_filter_state(state = fs)
 14. base::lapply(...)
 15. teal.slice (local) FUN(X[[i]], ...)
 16. fs$set_filter_state(state = state[[fs_name]])
 17. teal.slice:::get_supported_filter_varnames(colData(data))</error>
    </testcase>
    <testcase time="0.126000000000001" classname="MAEFilteredDataset" name="MAEFilteredDataset_remove_filter_state_removes_desired_filter">
      <error type="error" message="Error in `colData(data)`: could not find function &quot;colData&quot; ('test-MAEFilteredDataset.R:220')">Error in `colData(data)`: could not find function "colData"
Backtrace:
  1. shiny::isolate(dataset$set_filter_state(state = fs))
       at test-MAEFilteredDataset.R:220:4
 13. dataset$set_filter_state(state = fs)
 14. base::lapply(...)
 15. teal.slice (local) FUN(X[[i]], ...)
 16. fs$set_filter_state(state = state[[fs_name]])
 17. teal.slice:::get_supported_filter_varnames(colData(data))</error>
    </testcase>
    <testcase time="0.125999999999998" classname="MAEFilteredDataset" name="MAEFilteredDataset_remove_filter_state_throws_error_if_list_in_unnamed">
      <error type="error" message="Error in `colData(data)`: could not find function &quot;colData&quot; ('test-MAEFilteredDataset.R:259')">Error in `colData(data)`: could not find function "colData"
Backtrace:
  1. shiny::isolate(dataset$set_filter_state(state = fs))
       at test-MAEFilteredDataset.R:259:4
 13. dataset$set_filter_state(state = fs)
 14. base::lapply(...)
 15. teal.slice (local) FUN(X[[i]], ...)
 16. fs$set_filter_state(state = state[[fs_name]])
 17. teal.slice:::get_supported_filter_varnames(colData(data))</error>
    </testcase>
    <testcase time="0.124000000000002" classname="MAEFilteredDataset" name="MAEFilteredDataset_get_filterable_varnames_returns_character_0_">
      <error type="error" message="Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function ('test-MAEFilteredDataset.R:266')">Error in `eval_bare(expr, quo_get_env(quo))`: attempt to apply non-function
Backtrace:
 1. testthat::expect_identical(...)
      at test-MAEFilteredDataset.R:266:2
 2. testthat::quasi_label(enquo(object), label, arg = "object")
 3. rlang::eval_bare(expr, quo_get_env(quo))</error>
    </testcase>
    <testcase time="0.113" classname="MAEFilteredDataset" name="get_supported_filter_varnames.MAEFilteredDataset_returns_character_0_"/>
    <testcase time="0.184999999999999" classname="MAEFilteredDataset" name="MAEFilteredDataset_get_varlabels_returns_column_variable_labels"/>
    <testcase time="0.102" classname="MAEFilteredDataset" name="MAEFilteredDataset_filters_removed_using_remove_filters">
      <error type="error" message="Error in `colData(data)`: could not find function &quot;colData&quot; ('test-MAEFilteredDataset.R:298')">Error in `colData(data)`: could not find function "colData"
Backtrace:
  1. shiny::isolate(filtered_dataset$set_filter_state(state = fs))
       at test-MAEFilteredDataset.R:298:2
 13. filtered_dataset$set_filter_state(state = fs)
 14. base::lapply(...)
 15. teal.slice (local) FUN(X[[i]], ...)
 16. fs$set_filter_state(state = state[[fs_name]])
 17. teal.slice:::get_supported_filter_varnames(colData(data))</error>
    </testcase>
  </testsuite>
  <testsuite name="MatrixFilterStates" timestamp="2023-03-03T17:02:51Z" hostname="df4995eb832b" tests="9" skipped="0" failures="1" errors="7" time="0.271">
    <testcase time="0.0470000000000006" classname="MatrixFilterStates" name="The_constructor_does_not_raise_errors">
      <failure type="failure" message="Expected `MatrixFilterStates$new(dataname = &quot;test&quot;, datalabel = &quot;test&quot;)` to run without any errors. ('test-MatrixFilterStates.R:2')">Expected `MatrixFilterStates$new(dataname = "test", datalabel = "test")` to run without any errors.
ℹ Actually got a &lt;simpleError&gt;:
  Error in `checkmate::assert_matrix()`:
  ! argument "data" is missing, with no default</failure>
    </testcase>
    <testcase time="0.0130000000000017" classname="MatrixFilterStates" name="The_constructor_does_not_raise_errors"/>
    <testcase time="0.00999999999999801" classname="MatrixFilterStates" name="The_constructor_initializes_one_state_list">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-MatrixFilterStates.R:8')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-MatrixFilterStates.R:8:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="0.0330000000000013" classname="MatrixFilterStates" name="get_call_returns_a_call_filtering_a_matrix_with_numeric_values">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-MatrixFilterStates.R:18')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-MatrixFilterStates.R:18:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="0.0309999999999988" classname="MatrixFilterStates" name="set_filter_state_adds_filters_to_state_list">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-MatrixFilterStates.R:37')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-MatrixFilterStates.R:37:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="0.0350000000000001" classname="MatrixFilterStates" name="set_filter_state_throws_error_when_list_is_unnamed">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-MatrixFilterStates.R:53')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-MatrixFilterStates.R:53:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="0.0330000000000013" classname="MatrixFilterStates" name="remove_filter_state_removes_filters_from_state_list">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-MatrixFilterStates.R:68')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-MatrixFilterStates.R:68:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="0.0339999999999989" classname="MatrixFilterStates" name="remove_filter_state_throws_warning_when_state_id_is_not_in_state_list">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-MatrixFilterStates.R:88')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "test", datalabel = "test")
      at test-MatrixFilterStates.R:88:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
    <testcase time="0.0350000000000001" classname="MatrixFilterStates" name="MatrixFilterStates_ui_add_filter_state_returns_a_message_inside_a_div_when_data_has_no_rows_or_no_columns">
      <error type="error" message="Error in `checkmate::assert_matrix(data)`: argument &quot;data&quot; is missing, with no default ('test-MatrixFilterStates.R:106')">Error in `checkmate::assert_matrix(data)`: argument "data" is missing, with no default
Backtrace:
 1. MatrixFilterStates$new(dataname = "iris", datalabel = "test")
      at test-MatrixFilterStates.R:106:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_matrix(data)</error>
    </testcase>
  </testsuite>
  <testsuite name="RangeFilterState" timestamp="2023-03-03T17:02:52Z" hostname="df4995eb832b" tests="44" skipped="0" failures="0" errors="0" time="0.781">
    <testcase time="0.0489999999999995" classname="RangeFilterState" name="The_constructor_accepts_numerical_values"/>
    <testcase time="0.0199999999999996" classname="RangeFilterState" name="The_constructor_accepts_infinite_values_but_not_infinite_only"/>
    <testcase time="0.0100000000000016" classname="RangeFilterState" name="The_constructor_accepts_infinite_values_but_not_infinite_only"/>
    <testcase time="0.00999999999999801" classname="RangeFilterState" name="The_constructor_accepts_infinite_values_but_not_infinite_only"/>
    <testcase time="0.0190000000000019" classname="RangeFilterState" name="get_selected_returns_range_computed_on_a_vector_containing_c_1_Inf_Inf_NA_"/>
    <testcase time="0.0240000000000009" classname="RangeFilterState" name="set_selected_raises_error_when_the_passed_values_are_not_coercible_to_numeric"/>
    <testcase time="0.0179999999999971" classname="RangeFilterState" name="set_selected_accepts_an_array_with_two_numerical_elements"/>
    <testcase time="0.0180000000000007" classname="RangeFilterState" name="get_call_returns_call_encompassing_all_values_passed_to_constructor"/>
    <testcase time="0.0190000000000019" classname="RangeFilterState" name="get_call_returns_call_encompassing_all_values_passed_to_constructor"/>
    <testcase time="0.0199999999999996" classname="RangeFilterState" name="get_call_returns_valid_call_after_unsuccessfull_set_selected"/>
    <testcase time="0.00399999999999778" classname="RangeFilterState" name="get_call_returns_valid_call_after_unsuccessfull_set_selected"/>
    <testcase time="0.022000000000002" classname="RangeFilterState" name="get_call_returns_call_with_values_passed_in_set_selected"/>
    <testcase time="0.0210000000000008" classname="RangeFilterState" name="get_call_returns_call_that_evaluates_to_TRUE_for_values_within_range_passed_to_set_selected"/>
    <testcase time="0.0229999999999997" classname="RangeFilterState" name="set_keep_inf_switches_get_call_returning_call_that_allows_infinite_values"/>
    <testcase time="0.00799999999999912" classname="RangeFilterState" name="set_keep_inf_switches_get_call_returning_call_that_allows_infinite_values"/>
    <testcase time="0.0210000000000008" classname="RangeFilterState" name="set_keep_na_switches_get_call_returning_call_that_allows_NAs"/>
    <testcase time="0.0069999999999979" classname="RangeFilterState" name="set_keep_na_switches_get_call_returning_call_that_allows_NAs"/>
    <testcase time="0.0199999999999996" classname="RangeFilterState" name="NA_and_Inf_can_bothe_be_included_by_call_returned_by_get_call"/>
    <testcase time="0.00300000000000011" classname="RangeFilterState" name="NA_and_Inf_can_bothe_be_included_by_call_returned_by_get_call"/>
    <testcase time="0.0210000000000008" classname="RangeFilterState" name="get_state_returns_a_list_identical_to_set_state_input"/>
    <testcase time="0.0189999999999984" classname="RangeFilterState" name="set_state_needs_a_named_list_with_selected_keep_na_and_keep_inf_elements"/>
    <testcase time="0.00900000000000034" classname="RangeFilterState" name="set_state_needs_a_named_list_with_selected_keep_na_and_keep_inf_elements"/>
    <testcase time="0.0210000000000008" classname="RangeFilterState" name="set_state_sets_values_of_selected_and_keep_na_as_provided_in_the_list"/>
    <testcase time="0.0069999999999979" classname="RangeFilterState" name="set_state_sets_values_of_selected_and_keep_na_as_provided_in_the_list"/>
    <testcase time="0.00799999999999912" classname="RangeFilterState" name="set_state_sets_values_of_selected_and_keep_na_as_provided_in_the_list"/>
    <testcase time="0.0230000000000032" classname="RangeFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.00399999999999778" classname="RangeFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.00700000000000145" classname="RangeFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.00799999999999912" classname="RangeFilterState" name="set_state_overwrites_fields_included_in_the_input_only"/>
    <testcase time="0.0259999999999998" classname="RangeFilterState" name="RangeFilterState_is_any_filtered_works_properly_when_NA_and_Inf_are_present_in_data"/>
    <testcase time="0.0100000000000016" classname="RangeFilterState" name="RangeFilterState_is_any_filtered_works_properly_when_NA_and_Inf_are_present_in_data"/>
    <testcase time="0.0259999999999998" classname="RangeFilterState" name="RangeFilterState_is_any_filtered_works_properly_when_NA_and_Inf_are_present_in_data"/>
    <testcase time="0.0109999999999992" classname="RangeFilterState" name="RangeFilterState_is_any_filtered_works_properly_when_NA_and_Inf_are_present_in_data"/>
    <testcase time="0.0120000000000005" classname="RangeFilterState" name="RangeFilterState_is_any_filtered_works_properly_when_NA_and_Inf_are_present_in_data"/>
    <testcase time="0.0109999999999992" classname="RangeFilterState" name="RangeFilterState_is_any_filtered_works_properly_when_NA_and_Inf_are_present_in_data"/>
    <testcase time="0.0109999999999992" classname="RangeFilterState" name="RangeFilterState_is_any_filtered_works_properly_when_NA_and_Inf_are_present_in_data"/>
    <testcase time="0.0199999999999996" classname="RangeFilterState" name="_format_is_a_FilterStates_s_method_that_accepts_indent"/>
    <testcase time="0.0259999999999998" classname="RangeFilterState" name="_format_asserts_that_indent_is_numeric"/>
    <testcase time="0.0210000000000008" classname="RangeFilterState" name="_format_returns_a_string_representation_the_FilterState_object"/>
    <testcase time="0.0210000000000008" classname="RangeFilterState" name="_format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00400000000000134" classname="RangeFilterState" name="_format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00399999999999778" classname="RangeFilterState" name="_format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.0190000000000019" classname="RangeFilterState" name="private_get_pretty_range_step_returns_pretty_step_size"/>
    <testcase time="0.0960000000000001" classname="RangeFilterState" name="private_get_pretty_range_step_returns_pretty_step_size"/>
  </testsuite>
  <testsuite name="SEFilterStates" timestamp="2023-03-03T17:02:52Z" hostname="df4995eb832b" tests="28" skipped="0" failures="2" errors="25" time="1.618">
    <testcase time="0.0279999999999987" classname="SEFilterStates" name="The_constructor_does_not_throw">
      <failure type="failure" message="Expected `SEFilterStates$new(dataname = &quot;test&quot;, datalabel = &quot;test&quot;)` to run without any errors. ('test-SEFilterStates.R:38')">Expected `SEFilterStates$new(dataname = "test", datalabel = "test")` to run without any errors.
ℹ Actually got a &lt;simpleError&gt;:
  Error in `checkmate::assert_class()`:
  ! argument "data" is missing, with no default</failure>
    </testcase>
    <testcase time="0.0120000000000005" classname="SEFilterStates" name="The_constructor_does_not_throw"/>
    <testcase time="0.0109999999999992" classname="SEFilterStates" name="The_constructor_initializes_two_state_lists">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:45')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-SEFilterStates.R:45:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0309999999999988" classname="SEFilterStates" name="set_filter_state_throws_error_when_input_is_missing">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:54')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-SEFilterStates.R:54:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.032" classname="SEFilterStates" name="set_filter_state_throws_error_when_no_data_argument_is_inputted">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:62')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-SEFilterStates.R:62:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0310000000000024" classname="SEFilterStates" name="set_filter_state_throws_error_when_data_argument_is_not_of_class_SummarizedExperiment">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:70')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-SEFilterStates.R:70:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.032" classname="SEFilterStates" name="set_filter_state_throws_error_when_state_argument_contains_extra_elements">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:79')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-SEFilterStates.R:79:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.032" classname="SEFilterStates" name="set_filter_state_throws_error_when_state_argument_is_not_a_list">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:89')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-SEFilterStates.R:89:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0309999999999988" classname="SEFilterStates" name="set_filter_state_returns_NULL_when_state_argument_contains_subset_and_select_set_as_NULL">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:102')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-SEFilterStates.R:102:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0330000000000013" classname="SEFilterStates" name="set_filter_state_returns_NULL_when_state_argument_is_an_empty_list">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:115')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-SEFilterStates.R:115:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0329999999999977" classname="SEFilterStates" name="clone_method_returns_object_with_the_same_state">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:124')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-SEFilterStates.R:124:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.032" classname="SEFilterStates" name="get_call_method_returns_NULL">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:132')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-SEFilterStates.R:132:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.032" classname="SEFilterStates" name="get_fun_method_returns_subset">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:140')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "test")
      at test-SEFilterStates.R:140:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.294" classname="SEFilterStates" name="SEFilterStates_set_filter_state_sets_state_with_only_subset">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:151')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = character(0))
      at test-SEFilterStates.R:151:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.100000000000001" classname="SEFilterStates" name="SEFilterStates_set_filter_state_updates_select_state_which_has_been_set_already">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:168')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = character(0))
      at test-SEFilterStates.R:168:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.070999999999998" classname="SEFilterStates" name="SEFilterStates_set_filter_state_updates_subset_state_which_has_been_set_already">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:182')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = character(0))
      at test-SEFilterStates.R:182:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0660000000000025" classname="SEFilterStates" name="SEFilterStates_set_filter_state_updates_subset_state_which_has_been_set_already">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:198')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = character(0))
      at test-SEFilterStates.R:198:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0689999999999991" classname="SEFilterStates" name="SEFilterStates_set_filter_state_sets_state_with_neither_subset_nor_select">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:215')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = character(0))
      at test-SEFilterStates.R:215:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0700000000000003" classname="SEFilterStates" name="SEFilterStates_set_filter_state_sets_filters_in_state_list_specified_by_the_named_list">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:231')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = character(0))
      at test-SEFilterStates.R:231:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.131999999999998" classname="SEFilterStates" name="SEFilterStates_get_filter_state_returns_list_identical_to_input">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:254')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = character(0))
      at test-SEFilterStates.R:254:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0670000000000002" classname="SEFilterStates" name="SEFilterStates_remove_filter_state_removes_filters_in_state_list">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:270')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = character(0))
      at test-SEFilterStates.R:270:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0700000000000003" classname="SEFilterStates" name="SEFilterStates_remove_filter_state_removes_all_filters_in_state_list">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:293')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = character(0))
      at test-SEFilterStates.R:293:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0710000000000015" classname="SEFilterStates" name="SEFilterStates_remove_filter_state_throws_error_when_list_is_not_named">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:313')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = character(0))
      at test-SEFilterStates.R:313:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0700000000000003" classname="SEFilterStates" name="SEFilterStates_remove_filter_state_throws_warning_when_list_has_unknown_name_in_the_FilterState">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:333')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = character(0))
      at test-SEFilterStates.R:333:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0319999999999965" classname="SEFilterStates" name="SEFilterStates_ui_add_filter_state_returns_a_message_inside_a_div_when_data_has_no_rows_or_no_columns">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:351')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = character(0))
      at test-SEFilterStates.R:351:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0310000000000024" classname="SEFilterStates" name="_format_is_a_method_of_SEFilterStates">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:374')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = character(0))
      at test-SEFilterStates.R:374:2
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
    <testcase time="0.0350000000000001" classname="SEFilterStates" name="_format_asserts_the_indent_argument_is_a_number">
      <failure type="failure" message="`SEFilterStates$new(dataname = &quot;test&quot;, datalabel = character(0))$format(indent = &quot;wrong type&quot;)` threw an error with unexpected message. ('test-SEFilterStates.R:384')">`SEFilterStates$new(dataname = "test", datalabel = character(0))$format(indent = "wrong type")` threw an error with unexpected message.
Expected match: "Assertion on 'indent' failed: Must be of type 'number'"
Actual message: "argument \"data\" is missing, with no default"
Backtrace:
 1. testthat::expect_error(...)
      at test-SEFilterStates.R:384:2
 6. SEFilterStates$new(dataname = "test", datalabel = character(0))
 7. teal.slice (local) initialize(...)
 8. checkmate::assert_class(data, "SummarizedExperiment")</failure>
    </testcase>
    <testcase time="0.0700000000000003" classname="SEFilterStates" name="_format_concatenates_its_FilterState_elements_using_n_and_indents_the_FilterState_strings">
      <error type="error" message="Error in `checkmate::assert_class(data, &quot;SummarizedExperiment&quot;)`: argument &quot;data&quot; is missing, with no default ('test-SEFilterStates.R:397')">Error in `checkmate::assert_class(data, "SummarizedExperiment")`: argument "data" is missing, with no default
Backtrace:
 1. SEFilterStates$new(dataname = "test", datalabel = "Label")
      at test-SEFilterStates.R:397:4
 2. teal.slice (local) initialize(...)
 3. checkmate::assert_class(data, "SummarizedExperiment")</error>
    </testcase>
  </testsuite>
  <testsuite name="calls_combine_by" timestamp="2023-03-03T17:02:54Z" hostname="df4995eb832b" tests="9" skipped="0" failures="0" errors="0" time="0.079">
    <testcase time="0.0350000000000001" classname="calls_combine_by" name="calls_combine_by_different_operators"/>
    <testcase time="0.00199999999999889" classname="calls_combine_by" name="calls_combine_by_different_operators"/>
    <testcase time="0.00199999999999889" classname="calls_combine_by" name="calls_combine_by_different_operators"/>
    <testcase time="0.00800000000000267" classname="calls_combine_by" name="calls_combine_by_different_operators"/>
    <testcase time="0.00999999999999801" classname="calls_combine_by" name="calls_combine_by_different_operators"/>
    <testcase time="0.00199999999999889" classname="calls_combine_by" name="calls_combine_by_different_operators"/>
    <testcase time="0.00800000000000267" classname="calls_combine_by" name="calls_combine_by_different_forms_of_calls"/>
    <testcase time="0.00199999999999889" classname="calls_combine_by" name="calls_combine_by_different_forms_of_calls"/>
    <testcase time="0.0100000000000016" classname="calls_combine_by" name="calls_combine_by_different_forms_of_calls"/>
  </testsuite>
  <testsuite name="check_ellipsis" timestamp="2023-03-03T17:02:54Z" hostname="df4995eb832b" tests="18" skipped="0" failures="0" errors="0" time="0.13">
    <testcase time="0.0109999999999992" classname="check_ellipsis" name="check_ellipsis_with_no_unused"/>
    <testcase time="0.0120000000000005" classname="check_ellipsis" name="check_ellipsis_with_extra_unamed_arguments"/>
    <testcase time="0.00300000000000011" classname="check_ellipsis" name="check_ellipsis_with_extra_unamed_arguments"/>
    <testcase time="0.0119999999999969" classname="check_ellipsis" name="check_ellipsis_with_extra_named_arguments"/>
    <testcase time="0.00400000000000134" classname="check_ellipsis" name="check_ellipsis_with_extra_named_arguments"/>
    <testcase time="0.0120000000000005" classname="check_ellipsis" name="check_ellipsis_with_extra_named_and_unamed_arguments"/>
    <testcase time="0.00300000000000011" classname="check_ellipsis" name="check_ellipsis_with_extra_named_and_unamed_arguments"/>
    <testcase time="0.0109999999999992" classname="check_ellipsis" name="check_ellipsis_with_extra_named_and_unamed_arguments_in_wrong_order"/>
    <testcase time="0.00300000000000011" classname="check_ellipsis" name="check_ellipsis_with_extra_named_and_unamed_arguments_in_wrong_order"/>
    <testcase time="0.00499999999999901" classname="check_ellipsis" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.0100000000000016" classname="check_ellipsis" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00900000000000034" classname="check_ellipsis" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.0109999999999992" classname="check_ellipsis" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00400000000000134" classname="check_ellipsis" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00999999999999801" classname="check_ellipsis" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00400000000000134" classname="check_ellipsis" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00300000000000011" classname="check_ellipsis" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00300000000000011" classname="check_ellipsis" name="check_ellipsis_with_allowed_args"/>
  </testsuite>
  <testsuite name="check_simple_name" timestamp="2023-03-03T17:02:54Z" hostname="df4995eb832b" tests="15" skipped="0" failures="0" errors="0" time="0.081">
    <testcase time="0.0109999999999992" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00199999999999889" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00300000000000011" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00300000000000011" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00300000000000011" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00300000000000011" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00200000000000244" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00299999999999656" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00300000000000011" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00300000000000011" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00800000000000267" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00900000000000034" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00899999999999679" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.0100000000000016" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00900000000000034" classname="check_simple_name" name="check_simple_name_behaves_as_expected"/>
  </testsuite>
  <testsuite name="count_labels" timestamp="2023-03-03T17:02:54Z" hostname="df4995eb832b" tests="53" skipped="0" failures="0" errors="0" time="0.427">
    <testcase time="0.0109999999999992" classname="count_labels" name="make_count_text_requires_label_to_be_a_character_1_"/>
    <testcase time="0.0100000000000016" classname="count_labels" name="make_count_text_requires_label_to_be_a_character_1_"/>
    <testcase time="0.0109999999999992" classname="count_labels" name="make_count_text_requires_label_to_be_a_character_1_"/>
    <testcase time="0.00400000000000134" classname="count_labels" name="make_count_text_requires_countmax_to_be_a_numeric_1_"/>
    <testcase time="0.00999999999999801" classname="count_labels" name="make_count_text_requires_countmax_to_be_a_numeric_1_"/>
    <testcase time="0.0100000000000016" classname="count_labels" name="make_count_text_requires_countmax_to_be_a_numeric_1_"/>
    <testcase time="0.00300000000000011" classname="count_labels" name="make_count_text_requires_countnow_to_be_a_numeric_1_NULL_or_missing"/>
    <testcase time="0.00199999999999889" classname="count_labels" name="make_count_text_requires_countnow_to_be_a_numeric_1_NULL_or_missing"/>
    <testcase time="0.00300000000000011" classname="count_labels" name="make_count_text_requires_countnow_to_be_a_numeric_1_NULL_or_missing"/>
    <testcase time="0.00999999999999801" classname="count_labels" name="make_count_text_requires_countnow_to_be_a_numeric_1_NULL_or_missing"/>
    <testcase time="0.0100000000000016" classname="count_labels" name="make_count_text_requires_countnow_to_be_a_numeric_1_NULL_or_missing"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="make_count_text_returns_label_countnow_countmax_"/>
    <testcase time="0.00400000000000134" classname="count_labels" name="make_count_text_returns_label_countmax_when_countnow_is_null_or_missing"/>
    <testcase time="0.00199999999999889" classname="count_labels" name="make_count_text_returns_label_countmax_when_countnow_is_null_or_missing"/>
    <testcase time="0.00600000000000023" classname="count_labels" name="countBar_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00900000000000034" classname="count_labels" name="countBar_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.0109999999999992" classname="count_labels" name="countBar_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.0120000000000005" classname="count_labels" name="countBar_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.0109999999999992" classname="count_labels" name="countBar_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00500000000000256" classname="count_labels" name="countBar_requires_label_to_be_a_character_1_"/>
    <testcase time="0.00999999999999801" classname="count_labels" name="countBar_requires_label_to_be_a_character_1_"/>
    <testcase time="0.0100000000000016" classname="count_labels" name="countBar_requires_label_to_be_a_character_1_"/>
    <testcase time="0.00900000000000034" classname="count_labels" name="countBar_requires_label_to_be_a_character_1_"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBar_requires_countmax_to_be_a_numeric_1_"/>
    <testcase time="0.0100000000000016" classname="count_labels" name="countBar_requires_countmax_to_be_a_numeric_1_"/>
    <testcase time="0.00999999999999801" classname="count_labels" name="countBar_requires_countmax_to_be_a_numeric_1_"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBar_requires_counttotal_to_be_a_numeric_1_"/>
    <testcase time="0.00900000000000034" classname="count_labels" name="countBar_requires_counttotal_to_be_a_numeric_1_"/>
    <testcase time="0.0110000000000028" classname="count_labels" name="countBar_requires_counttotal_to_be_a_numeric_1_"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBar_requires_countnow_to_be_a_numeric_1_NULL_or_missing"/>
    <testcase time="0.00300000000000011" classname="count_labels" name="countBar_requires_countnow_to_be_a_numeric_1_NULL_or_missing"/>
    <testcase time="0.00300000000000011" classname="count_labels" name="countBar_requires_countnow_to_be_a_numeric_1_NULL_or_missing"/>
    <testcase time="0.0109999999999992" classname="count_labels" name="countBar_requires_countnow_to_be_a_numeric_1_NULL_or_missing"/>
    <testcase time="0.0120000000000005" classname="count_labels" name="countBar_requires_countnow_to_be_a_numeric_1_NULL_or_missing"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBar_returns_a_div_with_class_and_two_progressbars"/>
    <testcase time="0.00600000000000023" classname="count_labels" name="countBars_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.0109999999999992" classname="count_labels" name="countBars_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.0120000000000005" classname="count_labels" name="countBars_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.0109999999999992" classname="count_labels" name="countBars_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00900000000000034" classname="count_labels" name="countBars_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00600000000000023" classname="count_labels" name="countBars_requires_choices_to_be_a_vector"/>
    <testcase time="0.00400000000000134" classname="count_labels" name="countBars_requires_choices_to_be_a_vector"/>
    <testcase time="0.00999999999999801" classname="count_labels" name="countBars_requires_choices_to_be_a_vector"/>
    <testcase time="0.00700000000000145" classname="count_labels" name="countBars_requires_countsmax_to_be_a_numeric_of_the_same_length_as_choices"/>
    <testcase time="0.0109999999999992" classname="count_labels" name="countBars_requires_countsmax_to_be_a_numeric_of_the_same_length_as_choices"/>
    <testcase time="0.0109999999999992" classname="count_labels" name="countBars_requires_countsmax_to_be_a_numeric_of_the_same_length_as_choices"/>
    <testcase time="0.0120000000000005" classname="count_labels" name="countBars_requires_countsmax_to_be_a_numeric_of_the_same_length_as_choices"/>
    <testcase time="0.00700000000000145" classname="count_labels" name="countBars_requires_counstnow_to_be_a_numeric_lower_than_countsmax_NULL_or_missing"/>
    <testcase time="0.00300000000000011" classname="count_labels" name="countBars_requires_counstnow_to_be_a_numeric_lower_than_countsmax_NULL_or_missing"/>
    <testcase time="0.00999999999999801" classname="count_labels" name="countBars_requires_counstnow_to_be_a_numeric_lower_than_countsmax_NULL_or_missing"/>
    <testcase time="0.0120000000000005" classname="count_labels" name="countBars_requires_counstnow_to_be_a_numeric_lower_than_countsmax_NULL_or_missing"/>
    <testcase time="0.0109999999999992" classname="count_labels" name="countBars_requires_counstnow_to_be_a_numeric_lower_than_countsmax_NULL_or_missing"/>
    <testcase time="0.00700000000000145" classname="count_labels" name="countBars_returns_a_list_of_countBar_s_"/>
  </testsuite>
  <testsuite name="filter_panel_api" timestamp="2023-03-03T17:02:55Z" hostname="df4995eb832b" tests="14" skipped="0" failures="0" errors="0" time="1.47">
    <testcase time="0.0259999999999998" classname="filter_panel_api" name="FilterPanelAPI_constructor_accepts_a_FilteredData_object"/>
    <testcase time="0.0120000000000005" classname="filter_panel_api" name="FilterPanelAPI_constructor_throws_error_with_a_non_FilteredData_object"/>
    <testcase time="0.00999999999999801" classname="filter_panel_api" name="FilterPanelAPI_constructor_throws_error_with_a_non_FilteredData_object"/>
    <testcase time="0.824000000000002" classname="filter_panel_api" name="FilterPanelAPI_set_filter_state_sets_filters_specified_by_the_named_list"/>
    <testcase time="0.0329999999999977" classname="filter_panel_api" name="FilterPanelAPI_get_filter_state_returns_list_identical_to_input_without_attribute"/>
    <testcase time="0.027000000000001" classname="filter_panel_api" name="FilterPanelAPI_remove_filter_state_removes_filter_states_defined_in_the_list"/>
    <testcase time="0.0380000000000003" classname="filter_panel_api" name="FilterPanelAPI_remove_all_filter_states_removes_all_filters_of_datasets_in_FilterPanelAPI"/>
    <testcase time="0.0790000000000006" classname="filter_panel_api" name="FilterPanelAPI_remove_all_filter_states_remove_the_filters_of_the_desired_dataset_only"/>
    <testcase time="0.0859999999999985" classname="filter_panel_api" name="filter_panel_api_neutral_when_filter_panel_is_disabled"/>
    <testcase time="0.00300000000000011" classname="filter_panel_api" name="filter_panel_api_neutral_when_filter_panel_is_disabled"/>
    <testcase time="0.00400000000000134" classname="filter_panel_api" name="filter_panel_api_neutral_when_filter_panel_is_disabled"/>
    <testcase time="0.259" classname="filter_panel_api" name="filter_panel_api_under_disable_enable_filter_panel"/>
    <testcase time="0.00300000000000011" classname="filter_panel_api" name="filter_panel_api_under_disable_enable_filter_panel"/>
    <testcase time="0.0659999999999989" classname="filter_panel_api" name="filter_panel_api_under_disable_enable_filter_panel"/>
  </testsuite>
  <testsuite name="get_supported_filter_varnames" timestamp="2023-03-03T17:02:56Z" hostname="df4995eb832b" tests="5" skipped="0" failures="0" errors="0" time="0.027">
    <testcase time="0.0130000000000017" classname="get_supported_filter_varnames" name="get_supported_filter_varnames_returns_character_0_for_an_empty_matrix"/>
    <testcase time="0.00300000000000011" classname="get_supported_filter_varnames" name="get_supported_filter_varnames_returns_character_0_for_an_empty_data.frame"/>
    <testcase time="0.00399999999999778" classname="get_supported_filter_varnames" name="get_supported_filter_varnames_returns_character_0_for_a_single_column_numeric_matrix"/>
    <testcase time="0.00300000000000011" classname="get_supported_filter_varnames" name="get_supported_filter_varnames_returns_character_0_for_a_single_column_of_NA_values"/>
    <testcase time="0.00400000000000134" classname="get_supported_filter_varnames" name="get_supported_filter_varnames_returns_column_names_for_a_non_empty_data.frame"/>
  </testsuite>
  <testsuite name="init_filter_state" timestamp="2023-03-03T17:02:56Z" hostname="df4995eb832b" tests="28" skipped="0" failures="0" errors="0" time="5.411">
    <testcase time="0.0159999999999982" classname="init_filter_state" name="init_filter_state_accepts_a_string_not_name_as_varname"/>
    <testcase time="0.00900000000000034" classname="init_filter_state" name="init_filter_state_accepts_a_string_not_name_as_varname"/>
    <testcase time="0.0100000000000016" classname="init_filter_state" name="init_filter_state_accepts_a_character_vector_of_length_0_or_1_as_varlabel"/>
    <testcase time="0.00799999999999912" classname="init_filter_state" name="init_filter_state_accepts_a_character_vector_of_length_0_or_1_as_varlabel"/>
    <testcase time="5.142" classname="init_filter_state" name="dataname_must_be_specified_if_extract_type_is_specified"/>
    <testcase time="0.00999999999999801" classname="init_filter_state" name="init_filter_state_accepts_character_as_extract_type"/>
    <testcase time="0.00799999999999557" classname="init_filter_state" name="init_filter_state_accepts_character_as_extract_type"/>
    <testcase time="0.007000000000005" classname="init_filter_state" name="init_filter_state_accepts_character_as_extract_type"/>
    <testcase time="0.0109999999999957" classname="init_filter_state" name="init_filter_state_provides_default_values_for_varlabel_and_dataname"/>
    <testcase time="0.00200000000000244" classname="init_filter_state" name="init_filter_state_provides_default_values_for_varlabel_and_dataname"/>
    <testcase time="0.0129999999999981" classname="init_filter_state" name="init_filter_state_returns_an_EmptyFilterState_if_all_values_provided_are_NA"/>
    <testcase time="0.00900000000000034" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_a_longer_numeric"/>
    <testcase time="0.0189999999999984" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_a_longer_numeric"/>
    <testcase time="0.0100000000000051" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_object_if_passed_a_Date_object_of_length_1"/>
    <testcase time="0.00900000000000034" classname="init_filter_state" name="init_filter_state_returns_a_DateFilterState_object_if_passed_longer_a_Date_object"/>
    <testcase time="0.00999999999999801" classname="init_filter_state" name="init_filter_state_returns_a_DatetimeFilterState_object_if_passed_a_POSIXct_or_POSIXlt_of_length_1"/>
    <testcase time="0.00900000000000034" classname="init_filter_state" name="init_filter_state_returns_a_DatetimeFilterState_object_if_passed_a_POSIXct_or_POSIXlt_of_length_1"/>
    <testcase time="0.00999999999999801" classname="init_filter_state" name="init_filter_state_returns_a_DatetimeFilterState_object_if_passed_a_longer_POSIXct_or_POSIXlt"/>
    <testcase time="0.00900000000000034" classname="init_filter_state" name="init_filter_state_returns_a_DatetimeFilterState_object_if_passed_a_longer_POSIXct_or_POSIXlt"/>
    <testcase time="0.017000000000003" classname="init_filter_state" name="init_filter_state_returns_a_RangeFilterState_if_passed_a_numeric_array_containing_Inf"/>
    <testcase time="0.00799999999999557" classname="init_filter_state" name="init_filter_state_returns_a_RangeFilterState_if_passed_a_numeric_array_containing_Inf"/>
    <testcase time="0.0100000000000051" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_fewer_than_five_non_NA_elements"/>
    <testcase time="0.0069999999999979" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_fewer_than_five_non_NA_elements"/>
    <testcase time="0.00999999999999801" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_a_character_array"/>
    <testcase time="0.00600000000000023" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_a_character_array"/>
    <testcase time="0.00999999999999801" classname="init_filter_state" name="init_filter_state_return_a_LogicalFilterState_if_passed_a_logical_array"/>
    <testcase time="0.00600000000000023" classname="init_filter_state" name="init_filter_state_return_a_LogicalFilterState_if_passed_a_logical_array"/>
    <testcase time="0.0160000000000053" classname="init_filter_state" name="init_filter_state_default_accepts_a_list"/>
  </testsuite>
  <testsuite name="init_filter_states" timestamp="2023-03-03T17:03:02Z" hostname="df4995eb832b" tests="8" skipped="0" failures="0" errors="0" time="0.056">
    <testcase time="0.0120000000000005" classname="init_filter_states" name="init_filter_states_returns_a_DFFilterStates_object_if_passed_an_empty_data.frame"/>
    <testcase time="0.0069999999999979" classname="init_filter_states" name="init_filter_states_returns_a_DFFilterStates_object_if_passed_an_empty_data.frame"/>
    <testcase time="0.0069999999999979" classname="init_filter_states" name="init_filter_states_returns_a_MatrixFilterStates_object_if_passed_an_empty_matrix"/>
    <testcase time="0.00600000000000023" classname="init_filter_states" name="init_filter_states_returns_a_MatrixFilterStates_object_if_passed_an_empty_matrix"/>
    <testcase time="0.00600000000000023" classname="init_filter_states" name="init_filter_states_returns_an_MAEFilterStates_object_if_passed_an_object_of_class_MAE"/>
    <testcase time="0.00600000000000023" classname="init_filter_states" name="init_filter_states_returns_an_MAEFilterStates_object_if_passed_an_object_of_class_MAE"/>
    <testcase time="0.00600000000000023" classname="init_filter_states" name="init_filter_states_returns_an_SEFilterStates_object_if_passed_an_object_of_class_SE"/>
    <testcase time="0.00600000000000023" classname="init_filter_states" name="init_filter_states_returns_an_SEFilterStates_object_if_passed_an_object_of_class_SE"/>
  </testsuite>
  <testsuite name="init_filtered_data" timestamp="2023-03-03T17:03:02Z" hostname="df4995eb832b" tests="10" skipped="0" failures="0" errors="0" time="0.139">
    <testcase time="0.0219999999999985" classname="init_filtered_data" name="init_filtered_data_accepts_a_TealData_object"/>
    <testcase time="0.0249999999999986" classname="init_filtered_data" name="init_filtered_data_accepts_a_CDISCTealData_with_mixed_CDISC_and_Dataset"/>
    <testcase time="0.00900000000000034" classname="init_filtered_data" name="init_filtered_data_accepts_a_list_of_data.frame_objects"/>
    <testcase time="0.0120000000000005" classname="init_filtered_data" name="init_filtered_data.default_asserts_x_has_unique_names"/>
    <testcase time="0.0130000000000052" classname="init_filtered_data" name="init_filtered_data.default_asserts_code_is_CodeClass_"/>
    <testcase time="0.0109999999999957" classname="init_filtered_data" name="init_filtered_data.default_accepts_NULL_passed_to_code"/>
    <testcase time="0.0120000000000005" classname="init_filtered_data" name="init_filtered_data.default_asserts_join_keys_is_JoinKeys_"/>
    <testcase time="0.00999999999999801" classname="init_filtered_data" name="init_filtered_data.default_accepts_NULL_passed_to_join_keys"/>
    <testcase time="0.0130000000000052" classname="init_filtered_data" name="init_filtered_data.default_asserts_cdisc_is_logical_1_"/>
    <testcase time="0.0120000000000005" classname="init_filtered_data" name="init_filtered_data.default_asserts_check_is_logical_1_"/>
  </testsuite>
  <testsuite name="init_filtered_dataset" timestamp="2023-03-03T17:03:02Z" hostname="df4995eb832b" tests="4" skipped="0" failures="0" errors="0" time="0.129">
    <testcase time="0.0150000000000006" classname="init_filtered_dataset" name="init_filtered_dataset_returns_a_DefaultFilteredDataset_when_passed_a_data.frame"/>
    <testcase time="0.0069999999999979" classname="init_filtered_dataset" name="init_filtered_dataset_returns_a_DefaultFilteredDataset_when_passed_a_data.frame"/>
    <testcase time="0.100999999999999" classname="init_filtered_dataset" name="init_filtered_dataset_returns_an_MAEFilteredDataset_when_passed_an_MAE"/>
    <testcase time="0.00600000000000023" classname="init_filtered_dataset" name="init_filtered_dataset_returns_an_MAEFilteredDataset_when_passed_an_MAE"/>
  </testsuite>
  <testsuite name="resolve_state" timestamp="2023-03-03T17:03:02Z" hostname="df4995eb832b" tests="11" skipped="0" failures="0" errors="0" time="0.056">
    <testcase time="0.00900000000000034" classname="resolve_state" name="resolve_state_returns_an_identical_list_if_all_fields_are_named"/>
    <testcase time="0.00300000000000011" classname="resolve_state" name="resolve_state_returns_a_list_regardless_of_names"/>
    <testcase time="0.00300000000000011" classname="resolve_state" name="resolve_state_do_not_change_the_class_of_any_named_field"/>
    <testcase time="0.00300000000000011" classname="resolve_state" name="resolve_state_changes_a_single_unnamed_field_into_selected"/>
    <testcase time="0.00999999999999801" classname="resolve_state" name="resolve_state_throws_when_passed_a_list_with_one_unnamed_element_and_a_selected_element"/>
    <testcase time="0.00399999999999778" classname="resolve_state" name="resolve_state_returns_list_with_selected_when_vectors_is_provided"/>
    <testcase time="0.00300000000000011" classname="resolve_state" name="resolve_state_returns_keep_na_TRUE_if_any_element_of_the_vector_has_NA"/>
    <testcase time="0.00300000000000011" classname="resolve_state" name="resolve_state_returns_keep_inf_TRUE_if_any_element_of_the_vector_has_Inf"/>
    <testcase time="0.00300000000000011" classname="resolve_state" name="resolve_state_for_default_filter_results_in_empty_list"/>
    <testcase time="0.00399999999999778" classname="resolve_state" name="resolve_state_for_empty_list_results_in_empty_list"/>
    <testcase time="0.0110000000000028" classname="resolve_state" name="resolve_state_throws_when_passed_a_list_with_more_than_one_unnamed_element"/>
  </testsuite>
  <testsuite name="utils" timestamp="2023-03-03T17:03:02Z" hostname="df4995eb832b" tests="2" skipped="0" failures="0" errors="0" time="0.059">
    <testcase time="0.0120000000000005" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.046999999999997" classname="utils" name="get_teal_bs_theme"/>
  </testsuite>
</testsuites>
