<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="ChoicesFilterState" timestamp="2023-05-05T08:09:45Z" hostname="9466c6bbc1be" tests="86" skipped="0" failures="0" errors="0" time="0.757">
    <testcase time="0.038" classname="ChoicesFilterState" name="constructor_accepts_all_data_classes"/>
    <testcase time="0.0250000000000001" classname="ChoicesFilterState" name="constructor_accepts_all_data_classes"/>
    <testcase time="0.0109999999999999" classname="ChoicesFilterState" name="constructor_accepts_all_data_classes"/>
    <testcase time="0.00500000000000012" classname="ChoicesFilterState" name="constructor_accepts_all_data_classes"/>
    <testcase time="0.00600000000000001" classname="ChoicesFilterState" name="constructor_accepts_all_data_classes"/>
    <testcase time="0.00499999999999989" classname="ChoicesFilterState" name="constructor_accepts_all_data_classes"/>
    <testcase time="0.03" classname="ChoicesFilterState" name="constructor_raises_warning_if_choices_out_of_range"/>
    <testcase time="0.00600000000000001" classname="ChoicesFilterState" name="constructor_raises_warning_if_choices_out_of_range"/>
    <testcase time="0.00600000000000001" classname="ChoicesFilterState" name="constructor_raises_warning_if_choices_out_of_range"/>
    <testcase time="0.00600000000000001" classname="ChoicesFilterState" name="constructor_raises_warning_if_selected_out_of_range"/>
    <testcase time="0.00499999999999989" classname="ChoicesFilterState" name="constructor_raises_warning_if_selected_out_of_range"/>
    <testcase time="0.0790000000000002" classname="ChoicesFilterState" name="get_call_returns_call_that_evaluated_leaves_all_values_passed_to_constructor"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="get_call_returns_call_that_evaluated_leaves_all_values_passed_to_constructor"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="get_call_returns_call_that_evaluated_leaves_all_values_passed_to_constructor"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="get_call_returns_call_that_evaluated_leaves_all_values_passed_to_constructor"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="get_call_returns_call_that_evaluated_leaves_all_values_passed_to_constructor"/>
    <testcase time="0.00999999999999979" classname="ChoicesFilterState" name="get_call_returns_call_that_evaluated_leaves_all_values_passed_to_constructor"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.0190000000000001" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00600000000000001" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00600000000000001" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00600000000000001" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00499999999999989" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00700000000000012" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00499999999999989" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00600000000000001" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00700000000000012" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00600000000000001" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00499999999999989" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00500000000000012" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00600000000000001" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.0069999999999999" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00600000000000001" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.01" classname="ChoicesFilterState" name="get_call_returns_condition_that_specifies_values_passed_to_set_selected"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="set_state_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.00499999999999989" classname="ChoicesFilterState" name="set_state_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="set_state_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="set_state_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.00900000000000012" classname="ChoicesFilterState" name="set_state_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="set_state_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.0089999999999999" classname="ChoicesFilterState" name="set_state_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.00500000000000012" classname="ChoicesFilterState" name="set_state_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="set_state_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.00499999999999989" classname="ChoicesFilterState" name="set_state_raises_warning_when_selection_not_within_allowed_choices"/>
    <testcase time="0.0110000000000001" classname="ChoicesFilterState" name="set_state_sets_intersection_of_choices_and_passed_values"/>
    <testcase time="0.0089999999999999" classname="ChoicesFilterState" name="set_state_sets_intersection_of_choices_and_passed_values"/>
    <testcase time="0.00900000000000012" classname="ChoicesFilterState" name="set_state_sets_intersection_of_choices_and_passed_values"/>
    <testcase time="0.0089999999999999" classname="ChoicesFilterState" name="set_state_sets_intersection_of_choices_and_passed_values"/>
    <testcase time="0.00300000000000011" classname="ChoicesFilterState" name="set_state_sets_intersection_of_choices_and_passed_values"/>
    <testcase time="0.0089999999999999" classname="ChoicesFilterState" name="set_state_sets_intersection_of_choices_and_passed_values"/>
    <testcase time="0.00300000000000011" classname="ChoicesFilterState" name="set_state_sets_intersection_of_choices_and_passed_values"/>
    <testcase time="0.0089999999999999" classname="ChoicesFilterState" name="set_state_sets_intersection_of_choices_and_passed_values"/>
    <testcase time="0.00299999999999989" classname="ChoicesFilterState" name="set_state_sets_intersection_of_choices_and_passed_values"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="format_accepts_numeric_as_indent"/>
    <testcase time="0.0130000000000001" classname="ChoicesFilterState" name="format_accepts_numeric_as_indent"/>
    <testcase time="0.01" classname="ChoicesFilterState" name="format_returns_properly_formatted_string_representation"/>
    <testcase time="0.0089999999999999" classname="ChoicesFilterState" name="format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00300000000000011" classname="ChoicesFilterState" name="format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00299999999999989" classname="ChoicesFilterState" name="format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00300000000000011" classname="ChoicesFilterState" name="format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.01" classname="ChoicesFilterState" name="format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00299999999999989" classname="ChoicesFilterState" name="format_returns_a_properly_wrapped_string"/>
    <testcase time="0.002" classname="ChoicesFilterState" name="format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00300000000000011" classname="ChoicesFilterState" name="format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00299999999999989" classname="ChoicesFilterState" name="format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00300000000000011" classname="ChoicesFilterState" name="format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00299999999999989" classname="ChoicesFilterState" name="format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00300000000000011" classname="ChoicesFilterState" name="format_returns_a_properly_wrapped_string"/>
    <testcase time="0.002" classname="ChoicesFilterState" name="format_returns_a_properly_wrapped_string"/>
    <testcase time="0.00299999999999989" classname="ChoicesFilterState" name="format_returns_a_properly_wrapped_string"/>
    <testcase time="0.0150000000000001" classname="ChoicesFilterState" name="format_line_wrapping_breaks_if_strings_are_too_long"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="format_line_wrapping_breaks_if_strings_are_too_long"/>
    <testcase time="0.0139999999999998" classname="ChoicesFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00700000000000012" classname="ChoicesFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.032" classname="ChoicesFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FALSE_when_disabled"/>
    <testcase time="0.0069999999999999" classname="ChoicesFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FALSE_when_disabled"/>
    <testcase time="0.00900000000000012" classname="ChoicesFilterState" name="is_any_filtered_is_changed_by_choices_parameter"/>
    <testcase time="0.0089999999999999" classname="ChoicesFilterState" name="is_any_filtered_is_changed_by_choices_parameter"/>
    <testcase time="0.00900000000000012" classname="ChoicesFilterState" name="is_any_filtered_is_changed_by_choices_parameter"/>
    <testcase time="0.01" classname="ChoicesFilterState" name="is_choice_limited_is_set_properly"/>
    <testcase time="0.004" classname="ChoicesFilterState" name="is_choice_limited_is_set_properly"/>
    <testcase time="0.00800000000000001" classname="ChoicesFilterState" name="ChoicesFilterState_private_methods_return_proper_filtered_counts"/>
    <testcase time="0.00299999999999989" classname="ChoicesFilterState" name="ChoicesFilterState_private_methods_return_proper_filtered_counts"/>
  </testsuite>
  <testsuite name="DFFilterStates" timestamp="2023-05-05T08:09:45Z" hostname="9466c6bbc1be" tests="39" skipped="3" failures="0" errors="0" time="0.818">
    <testcase time="0.0209999999999999" classname="DFFilterStates" name="contructor_accepts_a_string_as_varlabels_and_keys"/>
    <testcase time="0.00600000000000001" classname="DFFilterStates" name="constructor_initializes_state_list_of_length_1"/>
    <testcase time="0.00700000000000012" classname="DFFilterStates" name="constructor_initializes_state_list_of_length_1"/>
    <testcase time="0.00299999999999989" classname="DFFilterStates" name="get_fun_returns_dplyr_filter"/>
    <testcase time="0.00800000000000001" classname="DFFilterStates" name="set_filter_state_only_accepts_teal_slices_"/>
    <testcase time="0.05" classname="DFFilterStates" name="set_filter_state_only_accepts_teal_slices_"/>
    <testcase time="0.004" classname="DFFilterStates" name="set_filter_state_adds_states_to_state_list"/>
    <testcase time="0.0170000000000001" classname="DFFilterStates" name="set_filter_state_adds_states_to_state_list"/>
    <testcase time="0.0229999999999999" classname="DFFilterStates" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_used_in_set_state"/>
    <testcase time="0.004" classname="DFFilterStates" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_used_in_set_state"/>
    <testcase time="0.00099999999999989" classname="DFFilterStates" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_used_in_set_state">
      <skipped message="Reason: temporary ('test-DFFilterStates.R:78:3')"/>
    </testcase>
    <testcase time="0.0820000000000001" classname="DFFilterStates" name="set_filter_state_updates_existing_filter_states"/>
    <testcase time="0.004" classname="DFFilterStates" name="set_filter_state_updates_existing_filter_states"/>
    <testcase time="0.00300000000000011" classname="DFFilterStates" name="set_filter_state_updates_existing_filter_states"/>
    <testcase time="0.00199999999999978" classname="DFFilterStates" name="set_filter_state_updates_existing_filter_states">
      <skipped message="Reason: temporary ('test-DFFilterStates.R:117:3')"/>
    </testcase>
    <testcase time="0.048" classname="DFFilterStates" name="set_filter_state_sets_sid_after_state_list_index_and_varname"/>
    <testcase time="0.0230000000000001" classname="DFFilterStates" name="remove_filter_state_removes_filters_specified_by_teal_slices_"/>
    <testcase time="0.00300000000000011" classname="DFFilterStates" name="remove_filter_state_removes_filters_specified_by_teal_slices_"/>
    <testcase time="0.00199999999999978" classname="DFFilterStates" name="remove_filter_state_removes_filters_specified_by_teal_slices_"/>
    <testcase time="0.0210000000000004" classname="DFFilterStates" name="remove_filter_state_raises_warning_when_name_is_not_in_FilterStates"/>
    <testcase time="0.0179999999999998" classname="DFFilterStates" name="format_is_a_method_of_DFFilterStates_that_accepts_numeric_indent_argument"/>
    <testcase time="0.00700000000000012" classname="DFFilterStates" name="format_is_a_method_of_DFFilterStates_that_accepts_numeric_indent_argument"/>
    <testcase time="0.0219999999999998" classname="DFFilterStates" name="format_concatenates_its_FilterState_elements_using_n_without_additional_indent"/>
    <testcase time="0.004" classname="DFFilterStates" name="format_concatenates_its_FilterState_elements_using_n_without_additional_indent"/>
    <testcase time="0.00500000000000034" classname="DFFilterStates" name="format_concatenates_its_FilterState_elements_using_n_without_additional_indent"/>
    <testcase time="0.0209999999999999" classname="DFFilterStates" name="get_call_returns_call_composed_of_conditions_of_all_existing_filter_states"/>
    <testcase time="0.032" classname="DFFilterStates" name="get_call_skips_conditions_form_FilterState_which_are_identified_by_sid"/>
    <testcase time="0.0179999999999998" classname="DFFilterStates" name="get_call_skips_conditions_form_FilterState_which_are_identified_by_sid"/>
    <testcase time="0.00499999999999989" classname="DFFilterStates" name="get_call_skips_conditions_form_FilterState_which_are_identified_by_sid"/>
    <testcase time="0.00600000000000023" classname="DFFilterStates" name="get_call_skips_conditions_form_FilterState_which_are_identified_by_sid"/>
    <testcase time="0.004" classname="DFFilterStates" name="get_filter_count_returns_the_number_of_active_filter_states_DFFilterStates"/>
    <testcase time="0.036" classname="DFFilterStates" name="get_filter_count_returns_the_number_of_active_filter_states_DFFilterStates"/>
    <testcase time="0.004" classname="DFFilterStates" name="get_filter_count_returns_the_number_of_active_filter_states_DFFilterStates"/>
    <testcase time="0.004" classname="DFFilterStates" name="ui_add_returns_a_message_inside_a_div_when_data_has_no_columns_or_no_rows"/>
    <testcase time="0.14" classname="DFFilterStates" name="selecting_a_new_variable_initializes_a_new_filter_state"/>
    <testcase time="0.00100000000000033" classname="DFFilterStates" name="selecting_a_new_variable_initializes_a_new_filter_state">
      <skipped message="Reason: temporary ('test-DFFilterStates.R:348:3')"/>
    </testcase>
    <testcase time="0.024" classname="DFFilterStates" name="adding_var_to_add_adds_another_filter_state"/>
    <testcase time="0.0619999999999998" classname="DFFilterStates" name="adding_var_to_add_adds_another_filter_state"/>
    <testcase time="0.073" classname="DFFilterStates" name="adding_var_to_add_adds_another_filter_state"/>
  </testsuite>
  <testsuite name="DateFilterState" timestamp="2023-05-05T08:09:46Z" hostname="9466c6bbc1be" tests="36" skipped="2" failures="0" errors="0" time="0.338">
    <testcase time="0.0230000000000001" classname="DateFilterState" name="constructor_accepts_a_Date_object"/>
    <testcase time="0.00599999999999978" classname="DateFilterState" name="constructor_accepts_a_Date_object"/>
    <testcase time="0.00600000000000023" classname="DateFilterState" name="constructor_raises_warning_when_selected_out_of_range"/>
    <testcase time="0.00599999999999978" classname="DateFilterState" name="constructor_raises_warning_when_selected_is_not_sorted"/>
    <testcase time="0.0089999999999999" classname="DateFilterState" name="constructor_raises_error_when_selection_is_not_Date"/>
    <testcase time="0.00599999999999978" classname="DateFilterState" name="constructor_raises_warning_when_chioces_is_not_sorted"/>
    <testcase time="0.0100000000000002" classname="DateFilterState" name="constructor_raises_warning_when_chioces_out_of_range"/>
    <testcase time="0.00700000000000012" classname="DateFilterState" name="constructor_raises_error_when_selection_is_not_Date"/>
    <testcase time="0.0199999999999996" classname="DateFilterState" name="set_state_selected_accepts_vector_of_two_Date_objects"/>
    <testcase time="0.00700000000000012" classname="DateFilterState" name="set_state_selected_accepts_vector_of_two_Date_objects"/>
    <testcase time="0.00600000000000023" classname="DateFilterState" name="set_state_selected_accepts_vector_of_two_Date_objects"/>
    <testcase time="0.0089999999999999" classname="DateFilterState" name="set_state_selected_raises_warning_when_selection_is_not_within_the_possible_range"/>
    <testcase time="0.00499999999999989" classname="DateFilterState" name="set_state_selected_raises_warning_when_selection_is_not_within_the_possible_range"/>
    <testcase time="0.00499999999999989" classname="DateFilterState" name="set_state_selected_raises_warning_when_selection_is_not_within_the_possible_range"/>
    <testcase time="0.0100000000000002" classname="DateFilterState" name="set_state_selected_range_is_limited_to_lower_and_upper_bound_of_possible_range"/>
    <testcase time="0.00599999999999978" classname="DateFilterState" name="set_state_selected_range_is_limited_to_lower_and_upper_bound_of_possible_range"/>
    <testcase time="0.00500000000000034" classname="DateFilterState" name="set_state_selected_range_is_limited_to_lower_and_upper_bound_of_possible_range"/>
    <testcase time="0.0109999999999997" classname="DateFilterState" name="set_state_selected_raises_error_when_selection_is_not_a_Date_or_coercible"/>
    <testcase time="0.00900000000000034" classname="DateFilterState" name="get_call_returns_a_condition_true_for_the_object_passed_in_the_constructor"/>
    <testcase time="0.00999999999999979" classname="DateFilterState" name="get_call_returns_call_with_limits_imposed_by_constructor_and_selection"/>
    <testcase time="0.00600000000000023" classname="DateFilterState" name="get_call_returns_call_with_limits_imposed_by_constructor_and_selection"/>
    <testcase time="0.00599999999999978" classname="DateFilterState" name="get_call_returns_a_condition_evaluating_to_TRUE_for_NA_values_is_keep_na_is_TRUE"/>
    <testcase time="0.004" classname="DateFilterState" name="get_call_returns_a_condition_evaluating_to_TRUE_for_NA_values_is_keep_na_is_TRUE"/>
    <testcase time="0.00700000000000012" classname="DateFilterState" name="format_accepts_numeric_as_indent"/>
    <testcase time="0.00199999999999978" classname="DateFilterState" name="format_accepts_numeric_as_indent"/>
    <testcase time="0.00700000000000012" classname="DateFilterState" name="format_accepts_numeric_as_indent"/>
    <testcase time="0.00200000000000022" classname="DateFilterState" name="format_returns_a_properly_formatted_string_representation">
      <skipped message="Reason: temporary ('test-DateFilterState.R:176:3')"/>
    </testcase>
    <testcase time="0.00999999999999979" classname="DateFilterState" name="format_prepends_spaces_to_every_line_of_the_returned_string">
      <skipped message="Reason: temporary ('test-DateFilterState.R:190:3')"/>
    </testcase>
    <testcase time="0.0190000000000001" classname="DateFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00800000000000001" classname="DateFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00699999999999967" classname="DateFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.0100000000000002" classname="DateFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FLASE_when_disabled"/>
    <testcase time="0.00599999999999978" classname="DateFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FLASE_when_disabled"/>
    <testcase time="0.00600000000000023" classname="DateFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FLASE_when_disabled"/>
    <testcase time="0.0129999999999999" classname="DateFilterState" name="is_any_filtered_reacts_to_choices"/>
    <testcase time="0.0489999999999999" classname="DateFilterState" name="is_any_filtered_reacts_to_choices"/>
  </testsuite>
  <testsuite name="DatetimeFilterState" timestamp="2023-05-05T08:09:47Z" hostname="9466c6bbc1be" tests="46" skipped="2" failures="0" errors="0" time="0.386">
    <testcase time="0.0140000000000002" classname="DatetimeFilterState" name="constructor_accepts_a_POSIXct_or_POSIXlt_object"/>
    <testcase time="0.00599999999999978" classname="DatetimeFilterState" name="constructor_accepts_a_POSIXct_or_POSIXlt_object"/>
    <testcase time="0.00499999999999989" classname="DatetimeFilterState" name="constructor_accepts_a_POSIXct_or_POSIXlt_object"/>
    <testcase time="0.00800000000000001" classname="DatetimeFilterState" name="constructor_raises_warning_when_selected_is_out_of_range"/>
    <testcase time="0.00700000000000012" classname="DatetimeFilterState" name="constructor_raises_warning_when_selected_is_not_sorted"/>
    <testcase time="0.0140000000000002" classname="DatetimeFilterState" name="constructor_raises_error_when_selection_is_not_Datetime_or_coercible"/>
    <testcase time="0.00599999999999978" classname="DatetimeFilterState" name="constructor_raises_warning_when_choices_is_out_of_range"/>
    <testcase time="0.00700000000000012" classname="DatetimeFilterState" name="constructor_raises_warning_when_choices_is_not_sorted"/>
    <testcase time="0.00700000000000012" classname="DatetimeFilterState" name="constructor_raises_error_when_choices_is_not_Date"/>
    <testcase time="0.0219999999999998" classname="DatetimeFilterState" name="set_state_selected_accepts_vector_of_two_POSIXct_objects_or_coercible"/>
    <testcase time="0.00700000000000012" classname="DatetimeFilterState" name="set_state_selected_accepts_vector_of_two_POSIXct_objects_or_coercible"/>
    <testcase time="0.00599999999999978" classname="DatetimeFilterState" name="set_state_selected_accepts_vector_of_two_POSIXct_objects_or_coercible"/>
    <testcase time="0.0100000000000002" classname="DatetimeFilterState" name="set_state_selected_raises_warning_when_selection_not_fully_included_in_range"/>
    <testcase time="0.00499999999999989" classname="DatetimeFilterState" name="set_state_selected_raises_warning_when_selection_not_fully_included_in_range"/>
    <testcase time="0.00600000000000023" classname="DatetimeFilterState" name="set_state_selected_raises_warning_when_selection_not_fully_included_in_range"/>
    <testcase time="0.0119999999999996" classname="DatetimeFilterState" name="set_state_selected_range_is_limited_to_lower_and_upper_bound_of_possible_range"/>
    <testcase time="0.0100000000000002" classname="DatetimeFilterState" name="set_state_selected_range_is_limited_to_lower_and_upper_bound_of_possible_range"/>
    <testcase time="0.00599999999999978" classname="DatetimeFilterState" name="set_state_selected_range_is_limited_to_lower_and_upper_bound_of_possible_range"/>
    <testcase time="0.0110000000000001" classname="DatetimeFilterState" name="set_state_selected_raises_error_when_selection_is_not_a_Date_or_coercible"/>
    <testcase time="0.00700000000000012" classname="DatetimeFilterState" name="get_call_returns_call_that_encompasses_all_values_passed_to_constructor"/>
    <testcase time="0.0110000000000001" classname="DatetimeFilterState" name="get_call_returns_a_condition_true_for_the_object_in_the_selected_range"/>
    <testcase time="0.0089999999999999" classname="DatetimeFilterState" name="get_call_returns_a_condition_true_for_the_object_in_the_selected_range"/>
    <testcase time="0.00700000000000012" classname="DatetimeFilterState" name="get_call_returns_a_condition_evaluating_to_TRUE_for_NA_values_is_keep_na_is_TRUE"/>
    <testcase time="0.00499999999999989" classname="DatetimeFilterState" name="get_call_returns_a_condition_evaluating_to_TRUE_for_NA_values_is_keep_na_is_TRUE"/>
    <testcase time="0.00800000000000001" classname="DatetimeFilterState" name="get_call_preserves_timezone_of_ISO_object_passed_to_constructor"/>
    <testcase time="0.0129999999999999" classname="DatetimeFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00700000000000012" classname="DatetimeFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00700000000000012" classname="DatetimeFilterState" name="format_accepts_numeric_as_indent"/>
    <testcase time="0.00299999999999967" classname="DatetimeFilterState" name="format_accepts_numeric_as_indent"/>
    <testcase time="0.00600000000000023" classname="DatetimeFilterState" name="format_accepts_numeric_as_indent"/>
    <testcase time="0.00599999999999978" classname="DatetimeFilterState" name="format_returns_a_properly_formatted_string_representation">
      <skipped message="Reason: temporary ('test-DatetimeFilterState.R:227:3')"/>
    </testcase>
    <testcase time="0.0100000000000002" classname="DatetimeFilterState" name="format_prepends_spaces_to_every_line_of_the_returned_string">
      <skipped message="Reason: temporary ('test-DatetimeFilterState.R:241:3')"/>
    </testcase>
    <testcase time="0.02" classname="DatetimeFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00699999999999967" classname="DatetimeFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00700000000000012" classname="DatetimeFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00600000000000023" classname="DatetimeFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00599999999999978" classname="DatetimeFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00499999999999989" classname="DatetimeFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00600000000000023" classname="DatetimeFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00599999999999978" classname="DatetimeFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.00600000000000023" classname="DatetimeFilterState" name="is_any_filtered_works_properly_when_NA_is_present_in_data"/>
    <testcase time="0.0129999999999999" classname="DatetimeFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FALSE_when_disabled"/>
    <testcase time="0.0100000000000002" classname="DatetimeFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FALSE_when_disabled"/>
    <testcase time="0.00599999999999978" classname="DatetimeFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FALSE_when_disabled"/>
    <testcase time="0.0100000000000002" classname="DatetimeFilterState" name="is_any_filtered_reacts_to_choices"/>
    <testcase time="0.00999999999999979" classname="DatetimeFilterState" name="is_any_filtered_reacts_to_choices"/>
  </testsuite>
  <testsuite name="DefaultFilteredDataset" timestamp="2023-05-05T08:09:47Z" hostname="9466c6bbc1be" tests="22" skipped="0" failures="0" errors="0" time="0.286">
    <testcase time="0.0129999999999999" classname="DefaultFilteredDataset" name="constructor_accepts_data.frame_object_with_a_dataname"/>
    <testcase time="0.00600000000000023" classname="DefaultFilteredDataset" name="constructor_accepts_data.frame_object_with_a_dataname"/>
    <testcase time="0.00499999999999989" classname="DefaultFilteredDataset" name="constructor_accepts_data.frame_object_with_a_dataname"/>
    <testcase time="0.00600000000000023" classname="DefaultFilteredDataset" name="constructor_accepts_data.frame_object_with_a_dataname"/>
    <testcase time="0.00499999999999989" classname="DefaultFilteredDataset" name="constructor_accepts_data.frame_object_with_a_dataname"/>
    <testcase time="0.00499999999999989" classname="DefaultFilteredDataset" name="filter_states_list_is_initialized_with_single_FilterStates_element_named_filter"/>
    <testcase time="0.02" classname="DefaultFilteredDataset" name="set_filter_state_accepts_teal_slices_"/>
    <testcase time="0.00499999999999989" classname="DefaultFilteredDataset" name="set_filter_state_accepts_teal_slices_"/>
    <testcase time="0.0290000000000004" classname="DefaultFilteredDataset" name="get_filter_state_returns_teal_slices_with_features_to_ones_used_in_set_state"/>
    <testcase time="0.004" classname="DefaultFilteredDataset" name="get_filter_state_returns_teal_slices_with_features_to_ones_used_in_set_state"/>
    <testcase time="0.0179999999999998" classname="DefaultFilteredDataset" name="set_filter_state_sets_filters_specified_by_teal_slices_"/>
    <testcase time="0.0129999999999999" classname="DefaultFilteredDataset" name="set_filter_state_sets_filters_specified_by_teal_slices_"/>
    <testcase time="0.00300000000000011" classname="DefaultFilteredDataset" name="set_filter_state_sets_filters_specified_by_teal_slices_"/>
    <testcase time="0.024" classname="DefaultFilteredDataset" name="remove_filter_state_removes_filter_specified_by_teal_slices_"/>
    <testcase time="0.00300000000000011" classname="DefaultFilteredDataset" name="remove_filter_state_removes_filter_specified_by_teal_slices_"/>
    <testcase time="0.00299999999999967" classname="DefaultFilteredDataset" name="remove_filter_state_removes_filter_specified_by_teal_slices_"/>
    <testcase time="0.0370000000000004" classname="DefaultFilteredDataset" name="remove_filter_state_can_remove_multiple_filters"/>
    <testcase time="0.00699999999999967" classname="DefaultFilteredDataset" name="get_filter_overview_returns_overview_data.frame_with_obs_filter_counts"/>
    <testcase time="0.024" classname="DefaultFilteredDataset" name="get_filter_overview_returns_overview_data.frame_with_obs_filter_counts"/>
    <testcase time="0.0190000000000001" classname="DefaultFilteredDataset" name="get_filter_overview_returns_overview_data.frame_with_obs_and_subject_filter_counts_"/>
    <testcase time="0.00800000000000001" classname="DefaultFilteredDataset" name="get_call_returns_a_list_of_calls_or_NULL"/>
    <testcase time="0.0289999999999999" classname="DefaultFilteredDataset" name="get_call_returns_a_list_of_calls_or_NULL"/>
  </testsuite>
  <testsuite name="EmptyFilterState" timestamp="2023-05-05T08:09:47Z" hostname="9466c6bbc1be" tests="3" skipped="0" failures="0" errors="0" time="0.03">
    <testcase time="0.0150000000000001" classname="EmptyFilterState" name="get_call_returns_a_call_if_keep_na_is_TRUE"/>
    <testcase time="0.00800000000000001" classname="EmptyFilterState" name="is_any_filtered_returns_FALSE_when_keep_na_is_TRUE_and_returns_TRUE_when_keep_na_is_FALSE"/>
    <testcase time="0.00700000000000012" classname="EmptyFilterState" name="is_any_filtered_returns_FALSE_when_keep_na_is_TRUE_and_returns_TRUE_when_keep_na_is_FALSE"/>
  </testsuite>
  <testsuite name="FilterState-utils" timestamp="2023-05-05T08:09:47Z" hostname="9466c6bbc1be" tests="22" skipped="0" failures="0" errors="0" time="0.1">
    <testcase time="0.00499999999999989" classname="FilterState_utils" name="check_in_range_raises_errors_as_desired"/>
    <testcase time="0.00499999999999989" classname="FilterState_utils" name="check_in_range_raises_errors_as_desired"/>
    <testcase time="0.00499999999999989" classname="FilterState_utils" name="check_in_range_raises_errors_as_desired"/>
    <testcase time="0.00500000000000034" classname="FilterState_utils" name="check_in_range_raises_errors_as_desired"/>
    <testcase time="0.00599999999999978" classname="FilterState_utils" name="check_in_subset_prepends_error_message"/>
    <testcase time="0.00200000000000022" classname="FilterState_utils" name="check_in_subset_raises_errors_as_desired"/>
    <testcase time="0.00499999999999989" classname="FilterState_utils" name="check_in_subset_raises_errors_as_desired"/>
    <testcase time="0.00599999999999978" classname="FilterState_utils" name="check_in_subset_prepends_error_message"/>
    <testcase time="0.00200000000000022" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00599999999999978" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00500000000000034" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00499999999999989" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00499999999999989" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00600000000000023" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.0089999999999999" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00499999999999989" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00499999999999989" classname="FilterState_utils" name="contain_interval_accepts_proper_arguments"/>
    <testcase time="0.00300000000000011" classname="FilterState_utils" name="contain_interval_returns_containing_range"/>
    <testcase time="0.00199999999999978" classname="FilterState_utils" name="contain_interval_returns_x_if_interval_matches_ticks"/>
    <testcase time="0.00200000000000022" classname="FilterState_utils" name="contain_interval_returns_range_if_x_is_x_is_out_of_bounds"/>
    <testcase time="0.00300000000000011" classname="FilterState_utils" name="n_sig_digits_counts_correctly"/>
    <testcase time="0.00299999999999967" classname="FilterState_utils" name="formatting_of_range_filter_state_for_card_summary"/>
  </testsuite>
  <testsuite name="FilterState" timestamp="2023-05-05T08:09:47Z" hostname="9466c6bbc1be" tests="52" skipped="0" failures="0" errors="0" time="0.367">
    <testcase time="0.0110000000000001" classname="FilterState" name="constructor_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="FilterState" name="constructor_checks_arguments"/>
    <testcase time="0.00599999999999978" classname="FilterState" name="constructor_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="FilterState" name="constructor_checks_arguments"/>
    <testcase time="0.00599999999999978" classname="FilterState" name="constructor_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="FilterState" name="constructor_checks_arguments"/>
    <testcase time="0.00499999999999989" classname="FilterState" name="constructor_checks_arguments"/>
    <testcase time="0.00599999999999978" classname="FilterState" name="constructor_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="FilterState" name="constructor_checks_arguments"/>
    <testcase time="0.00999999999999979" classname="FilterState" name="constructor_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="FilterState" name="constructor_checks_arguments"/>
    <testcase time="0.00599999999999978" classname="FilterState" name="constructor_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="FilterState" name="constructor_checks_arguments"/>
    <testcase time="0.00800000000000001" classname="FilterState" name="set_state_can_set_mutable_fields"/>
    <testcase time="0.004" classname="FilterState" name="set_state_can_set_mutable_fields"/>
    <testcase time="0.004" classname="FilterState" name="set_state_can_set_mutable_fields"/>
    <testcase time="0.004" classname="FilterState" name="set_state_can_set_mutable_fields"/>
    <testcase time="0.00599999999999978" classname="FilterState" name="get_state_returns_a_teal_slice_object"/>
    <testcase time="0.00300000000000011" classname="FilterState" name="get_state_returns_a_teal_slice_object"/>
    <testcase time="0.00800000000000001" classname="FilterState" name="get_state_returns_a_teal_slice_identical_to_set_state_input"/>
    <testcase time="0.00599999999999978" classname="FilterState" name="set_state_only_sets_properties_defined_in_teal_slice"/>
    <testcase time="0.00500000000000034" classname="FilterState" name="set_state_only_sets_properties_defined_in_teal_slice"/>
    <testcase time="0.00499999999999989" classname="FilterState" name="set_state_only_sets_properties_defined_in_teal_slice"/>
    <testcase time="0.00499999999999989" classname="FilterState" name="set_state_only_sets_properties_defined_in_teal_slice"/>
    <testcase time="0.0089999999999999" classname="FilterState" name="set_state_cannot_set_mutable_fields_in_a_fixed_FilterState"/>
    <testcase time="0.016" classname="FilterState" name="set_state_cannot_set_mutable_fields_in_a_disabled_FilterState"/>
    <testcase time="0.012" classname="FilterState" name="set_state_can_enable_FilerState_and_set_mutable_fields_in_a_disabled_FilterState"/>
    <testcase time="0.00900000000000034" classname="FilterState" name="set_state_can_disable_and_enable_a_FilterState"/>
    <testcase time="0.00699999999999967" classname="FilterState" name="set_state_can_disable_and_enable_a_FilterState"/>
    <testcase time="0.00700000000000012" classname="FilterState" name="set_state_can_disable_and_enable_a_FilterState"/>
    <testcase time="0.00600000000000023" classname="FilterState" name="get_state_returns_the_dataname_passed_to_constructor"/>
    <testcase time="0.00800000000000001" classname="FilterState" name="get_state_returns_varname_passed_to_constructor"/>
    <testcase time="0.004" classname="FilterState" name="get_state_returns_varname_passed_to_constructor"/>
    <testcase time="0.00499999999999989" classname="FilterState" name="get_state_returns_varname_passed_to_constructor"/>
    <testcase time="0.00800000000000001" classname="FilterState" name="constructor_initializes_selected_NULL_by_default"/>
    <testcase time="0.0089999999999999" classname="FilterState" name="constructor_initializes_keep_na_TRUE_by_default_if_data_contains_NAs"/>
    <testcase time="0.00800000000000001" classname="FilterState" name="constructor_initializes_keep_na_TRUE_by_default_if_data_contains_NAs"/>
    <testcase time="0.0119999999999996" classname="FilterState" name="get_call_raises_error"/>
    <testcase time="0.00600000000000023" classname="FilterState" name="set_selected_sets_value_get_selected_returns_the_same_value"/>
    <testcase time="0.00600000000000023" classname="FilterState" name="add_keep_na_call_modifies_call_if_keep_na_set_to_TRUE"/>
    <testcase time="0.00499999999999989" classname="FilterState" name="add_keep_na_call_modifies_call_if_keep_na_set_to_TRUE"/>
    <testcase time="0.00600000000000023" classname="FilterState" name="setting_private_na_rm_to_TRUE_adds_is.na_before_condition_via_add_keep_na_call"/>
    <testcase time="0.00600000000000023" classname="FilterState" name="setting_private_na_rm_to_TRUE_doesn_t_add_is.na_before_condition_via_add_keep_na_call_when_variable_has_no_NAs"/>
    <testcase time="0.00599999999999934" classname="FilterState" name="get_varlabel_returns_a_string_if_x_has_the_label_attribute_different_to_varname"/>
    <testcase time="0.00499999999999989" classname="FilterState" name="get_varlabel_returns_a_string_if_x_has_the_label_attribute_different_to_varname"/>
    <testcase time="0.00400000000000045" classname="FilterState" name="get_varlabel_returns_a_string_if_x_has_the_label_attribute_different_to_varname"/>
    <testcase time="0.00999999999999979" classname="FilterState" name="disable_sets_all_state_elements_to_NULL"/>
    <testcase time="0.00400000000000045" classname="FilterState" name="disable_sets_all_state_elements_to_NULL"/>
    <testcase time="0.0110000000000001" classname="FilterState" name="disable_copies_last_state_to_the_cache"/>
    <testcase time="0.00999999999999979" classname="FilterState" name="enable_sets_state_back_to_the_last_state"/>
    <testcase time="0.00999999999999979" classname="FilterState" name="enable_sets_state_back_to_the_last_state"/>
    <testcase time="0.0140000000000002" classname="FilterState" name="enable_clears_cache"/>
  </testsuite>
  <testsuite name="FilterStates" timestamp="2023-05-05T08:09:48Z" hostname="9466c6bbc1be" tests="11" skipped="0" failures="0" errors="0" time="0.042">
    <testcase time="0.00499999999999989" classname="FilterStates" name="constructor_accepts_only_a_string_as_dataname"/>
    <testcase time="0.00600000000000023" classname="FilterStates" name="constructor_accepts_only_a_string_as_dataname"/>
    <testcase time="0.00499999999999989" classname="FilterStates" name="constructor_accepts_only_a_string_as_dataname"/>
    <testcase time="0.00300000000000011" classname="FilterStates" name="get_fun_returns_subset_after_initialization"/>
    <testcase time="0.00399999999999956" classname="FilterStates" name="get_call_returns_NULL_after_initialization_if_no_filter_applied"/>
    <testcase time="0.00800000000000001" classname="FilterStates" name="validate_state_list_exists_raises_errors_if_no_filters_were_added"/>
    <testcase time="0.00300000000000011" classname="FilterStates" name="clearing_empty_FilterStates_does_not_raise_errors"/>
    <testcase time="0.00199999999999978" classname="FilterStates" name="data_choices_labeled_returns_an_empty_character_array_if_choices_are_an_empty_array"/>
    <testcase time="0.00199999999999978" classname="FilterStates" name="data_choices_labeled_returns_a_choices_labeled_object_if_choices_are_not_empty"/>
    <testcase time="0.00200000000000067" classname="FilterStates" name="data_choices_labeled_returns_names_of_the_elements_matching_the_choices"/>
    <testcase time="0.00200000000000067" classname="FilterStates" name="data_choices_labeled_returns_labels_of_the_elements_matching_the_choices_if_the_varlabels_are_provided_for_the_elements"/>
  </testsuite>
  <testsuite name="FilteredData" timestamp="2023-05-05T08:09:48Z" hostname="9466c6bbc1be" tests="97" skipped="0" failures="0" errors="0" time="9.641">
    <testcase time="4.416" classname="FilteredData" name="constructor_accepts_call_with_only_dataset_specified"/>
    <testcase time="0.42" classname="FilteredData" name="constructor_accepts_call_with_only_dataset_specified"/>
    <testcase time="0.00600000000000023" classname="FilteredData" name="constructor_accepts_call_with_only_dataset_specified"/>
    <testcase time="0.00499999999999901" classname="FilteredData" name="constructor_accepts_join_keys_to_be_JoinKeys_or_NULL"/>
    <testcase time="0.00399999999999956" classname="FilteredData" name="constructor_accepts_join_keys_to_be_JoinKeys_or_NULL"/>
    <testcase time="0.00600000000000023" classname="FilteredData" name="constructor_accepts_join_keys_to_be_JoinKeys_or_NULL"/>
    <testcase time="0.00500000000000078" classname="FilteredData" name="constructor_accepts_code_to_be_CodeClass_or_NULL"/>
    <testcase time="0.00399999999999956" classname="FilteredData" name="constructor_accepts_code_to_be_CodeClass_or_NULL"/>
    <testcase time="0.00500000000000078" classname="FilteredData" name="constructor_accepts_code_to_be_CodeClass_or_NULL"/>
    <testcase time="0.00499999999999901" classname="FilteredData" name="constructor_accepts_check_to_be_a_flag"/>
    <testcase time="0.00500000000000078" classname="FilteredData" name="constructor_accepts_check_to_be_a_flag"/>
    <testcase time="0.00600000000000023" classname="FilteredData" name="constructor_accepts_check_to_be_a_flag"/>
    <testcase time="0.00999999999999979" classname="FilteredData" name="FilteredData_preserves_the_check_field_when_check_is_TRUE"/>
    <testcase time="0.00699999999999967" classname="FilteredData" name="FilteredData_preserves_the_check_field_when_check_is_TRUE"/>
    <testcase time="0.0860000000000003" classname="FilteredData" name="FilteredData_forbids_cyclic_graphs_of_datasets_relationship"/>
    <testcase time="0.00799999999999912" classname="FilteredData" name="filtered_data_datanames_returns_character_vector_of_datasets_names"/>
    <testcase time="0.00999999999999979" classname="FilteredData" name="datanames_are_ordered_topologically_from_parent_to_child"/>
    <testcase time="0.00900000000000034" classname="FilteredData" name="datanames_are_ordered_topologically_from_parent_to_child"/>
    <testcase time="0.00699999999999967" classname="FilteredData" name="get_filterable_dataname_returns_all_datasets_by_default"/>
    <testcase time="0.00700000000000145" classname="FilteredData" name="get_filterable_dataname_all_returns_all_datasets"/>
    <testcase time="0.00899999999999856" classname="FilteredData" name="get_filterable_dataname_raises_error_when_dataname_not_subset_of_current_datanames"/>
    <testcase time="0.00500000000000078" classname="FilteredData" name="get_filterable_dataname_returns_dataname_same_as_input"/>
    <testcase time="0.0220000000000002" classname="FilteredData" name="get_filterable_datanames_returns_all_ancestors_if_parents_are_specified_in_join_keys"/>
    <testcase time="0.00799999999999912" classname="FilteredData" name="get_filterable_datanames_returns_all_ancestors_if_parents_are_specified_in_join_keys"/>
    <testcase time="0.00200000000000067" classname="FilteredData" name="get_filterable_datanames_returns_all_ancestors_if_parents_are_specified_in_join_keys"/>
    <testcase time="0.00499999999999901" classname="FilteredData" name="set_dataset_accepts_data_being_data.frame_"/>
    <testcase time="0.00500000000000078" classname="FilteredData" name="set_dataset_returns_self"/>
    <testcase time="0.00500000000000078" classname="FilteredData" name="set_dataset_creates_FilteredDataset_object"/>
    <testcase time="0.0109999999999992" classname="FilteredData" name="set_datasets_creates_FilteredDataset_object_linked_with_parent"/>
    <testcase time="0.00500000000000078" classname="FilteredData" name="get_join_keys_returns_empty_JoinKeys_object"/>
    <testcase time="0.00599999999999845" classname="FilteredData" name="get_keys_returns_keys_of_the_dataset_specified_via_join_keys"/>
    <testcase time="0.0129999999999999" classname="FilteredData" name="get_join_keys_returns_join_keys_object_if_it_exists"/>
    <testcase time="0.00500000000000078" classname="FilteredData" name="get_datalabel_returns_character_0_for_dataset_with_no_label"/>
    <testcase time="0.00600000000000023" classname="FilteredData" name="get_datalabel_returns_the_label_of_a_passed_dataset"/>
    <testcase time="0.00900000000000034" classname="FilteredData" name="get_metadata_raises_error_if_dataset_does_not_exist"/>
    <testcase time="0.00799999999999912" classname="FilteredData" name="get_metadata_returns_metadata_if_dataset_exists"/>
    <testcase time="0.00399999999999956" classname="FilteredData" name="get_metadata_returns_metadata_if_dataset_exists"/>
    <testcase time="0.00600000000000023" classname="FilteredData" name="get_code_returns_the_code_passed_to_CodeClass_set_code"/>
    <testcase time="0.00300000000000011" classname="FilteredData" name="get_code_returns_a_string_when_FilteredData_has_no_code"/>
    <testcase time="0.011000000000001" classname="FilteredData" name="get_call_returns_a_NULL_if_no_filters_applied"/>
    <testcase time="0.00499999999999901" classname="FilteredData" name="get_call_returns_a_NULL_if_no_filters_applied"/>
    <testcase time="0.0280000000000005" classname="FilteredData" name="get_call_return_a_list_of_calls_when_filter_applied"/>
    <testcase time="0.00300000000000011" classname="FilteredData" name="get_call_return_a_list_of_calls_when_filter_applied"/>
    <testcase time="0.0129999999999999" classname="FilteredData" name="get_call_raises_error_if_dataname_doesn_t_match_available_datasets"/>
    <testcase time="0.00900000000000034" classname="FilteredData" name="get_filter_expr_returns_empty_string_when_no_filters_applied"/>
    <testcase time="0.0329999999999995" classname="FilteredData" name="get_filter_expr_returns_all_filter_calls_as_character"/>
    <testcase time="0.00600000000000023" classname="FilteredData" name="get_data_argument_filtered_must_be_a_flag"/>
    <testcase time="0.0080000000000009" classname="FilteredData" name="get_data_argument_filtered_must_be_a_flag"/>
    <testcase time="0.00600000000000023" classname="FilteredData" name="get_data_requires_that_dataname_be_subset_of_datanames"/>
    <testcase time="0.00699999999999967" classname="FilteredData" name="get_data_requires_that_dataname_be_subset_of_datanames"/>
    <testcase time="0.00799999999999912" classname="FilteredData" name="get_data_filtered_FALSE_returns_the_same_object_as_passed_to_the_constructor"/>
    <testcase time="0.0080000000000009" classname="FilteredData" name="get_data_returns_the_same_object_as_passed_to_the_constructor_if_no_filter_applied"/>
    <testcase time="0.0250000000000004" classname="FilteredData" name="get_data_returns_an_object_filtered_by_set_filters"/>
    <testcase time="0.0459999999999994" classname="FilteredData" name="get_data_of_the_child_is_dependent_on_the_ancestor_filter"/>
    <testcase time="0.0459999999999994" classname="FilteredData" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_in_input_adds_format"/>
    <testcase time="0.00500000000000078" classname="FilteredData" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_in_input_adds_format"/>
    <testcase time="0.00499999999999901" classname="FilteredData" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_in_input_adds_format"/>
    <testcase time="0.00200000000000067" classname="FilteredData" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_in_input_adds_format"/>
    <testcase time="0.438000000000001" classname="FilteredData" name="remove_filter_state_removes_states_specified_by_teal_slices"/>
    <testcase time="0.048" classname="FilteredData" name="clear_filter_states_removes_all_filters_of_all_datasets_in_FilteredData"/>
    <testcase time="0.0449999999999999" classname="FilteredData" name="clear_filter_states_removes_filters_of_desired_dataset_only"/>
    <testcase time="0.00999999999999979" classname="FilteredData" name="get_filter_overview_checks_arguments"/>
    <testcase time="0.00300000000000011" classname="FilteredData" name="get_filter_overview_checks_arguments"/>
    <testcase time="0.00399999999999956" classname="FilteredData" name="get_filter_overview_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="FilteredData" name="get_filter_overview_checks_arguments"/>
    <testcase time="0.00699999999999967" classname="FilteredData" name="get_filter_overview_checks_arguments"/>
    <testcase time="0.00699999999999967" classname="FilteredData" name="get_filter_overview_checks_arguments"/>
    <testcase time="0.00699999999999967" classname="FilteredData" name="get_filter_overview_checks_arguments"/>
    <testcase time="0.011000000000001" classname="FilteredData" name="get_filter_overview_returns_overview_data.frame_with_obs_counts_if_the_keys_are_not_specified"/>
    <testcase time="0.032" classname="FilteredData" name="get_filter_overview_returns_overview_data.frame_with_filtered_counts"/>
    <testcase time="0.0359999999999996" classname="FilteredData" name="get_filter_overview_return_counts_based_on_reactive_filtering_by_ancestors"/>
    <testcase time="0.0630000000000006" classname="FilteredData" name="filter_panel_disable_removes_filter_states"/>
    <testcase time="0.0640000000000001" classname="FilteredData" name="filter_panel_enable_restores_filter_states"/>
    <testcase time="0.0920000000000005" classname="FilteredData" name="disable_enable_filter_panel_caches_and_restores_state"/>
    <testcase time="0.016" classname="FilteredData" name="disable_enable_filter_panel_caches_and_restores_state"/>
    <testcase time="0.00499999999999901" classname="FilteredData" name="disable_enable_filter_panel_caches_and_restores_state"/>
    <testcase time="0.0360000000000014" classname="FilteredData" name="disable_enable_filter_panel_caches_and_restores_state"/>
    <testcase time="0.00499999999999901" classname="FilteredData" name="disable_enable_filter_panel_caches_and_restores_state"/>
    <testcase time="0.00900000000000034" classname="FilteredData" name="disable_enable_filter_panel_caches_and_restores_state"/>
    <testcase time="0.0730000000000004" classname="FilteredData" name="switching_disable_enable_button_caches_and_restores_state"/>
    <testcase time="0.69" classname="FilteredData" name="switching_disable_enable_button_caches_and_restores_state"/>
    <testcase time="0.00600000000000023" classname="FilteredData" name="switching_disable_enable_button_caches_and_restores_state"/>
    <testcase time="0.743" classname="FilteredData" name="switching_disable_enable_button_caches_and_restores_state"/>
    <testcase time="0.00499999999999901" classname="FilteredData" name="switching_disable_enable_button_caches_and_restores_state"/>
    <testcase time="0.00900000000000034" classname="FilteredData" name="switching_disable_enable_button_caches_and_restores_state"/>
    <testcase time="0.0660000000000007" classname="FilteredData" name="active_datanames_in_srv_filter_panel_gets_resolved_to_valid_datanames"/>
    <testcase time="0.115" classname="FilteredData" name="active_datanames_in_srv_filter_panel_gets_resolved_to_valid_datanames"/>
    <testcase time="0.052999999999999" classname="FilteredData" name="active_datanames_fails_if_returns_dataname_which_isn_t_a_subset_of_available_datanames"/>
    <testcase time="0.624000000000001" classname="FilteredData" name="srv_active_output_teal_filters_count_returns_reactive_number_of_current_filters_applied"/>
    <testcase time="0.670999999999999" classname="FilteredData" name="srv_active_clicking_remove_all_button_clears_filters"/>
    <testcase time="0.0180000000000007" classname="FilteredData" name="turn_filed_by_default_equal_to_TRUE"/>
    <testcase time="0.00600000000000023" classname="FilteredData" name="get_filter_panel_ui_id_empty_when_no_shiny_session"/>
    <testcase time="0.0309999999999988" classname="FilteredData" name="get_filter_panel_ui_id_non_empty_when_in_shiny_session"/>
    <testcase time="0.0250000000000004" classname="FilteredData" name="get_filter_count_properly_tallies_active_filter_states"/>
    <testcase time="0.0429999999999993" classname="FilteredData" name="get_filter_count_properly_tallies_active_filter_states"/>
    <testcase time="0.0220000000000002" classname="FilteredData" name="get_filter_count_properly_tallies_active_filter_states_for_MAE_objects"/>
    <testcase time="0.0550000000000015" classname="FilteredData" name="get_filter_count_properly_tallies_active_filter_states_for_MAE_objects"/>
  </testsuite>
  <testsuite name="FilteredDataset" timestamp="2023-05-05T08:09:57Z" hostname="9466c6bbc1be" tests="13" skipped="0" failures="0" errors="0" time="0.125">
    <testcase time="0.00899999999999856" classname="FilteredDataset" name="constructor_creates_FilteredDataset_with_empty_filter_states"/>
    <testcase time="0.00300000000000011" classname="FilteredDataset" name="clear_filter_states_does_not_raise_errors_after_initializing_FilteredDataset"/>
    <testcase time="0.00300000000000011" classname="FilteredDataset" name="get_dataset_returns_the_dataset_passed_to_the_constructor"/>
    <testcase time="0.00300000000000011" classname="FilteredDataset" name="get_dataname_returns_the_dataname_passed_to_the_constructor"/>
    <testcase time="0.00300000000000011" classname="FilteredDataset" name="get_dataset_label_retruns_the_dataset_label_passed_to_the_constructor"/>
    <testcase time="0.00300000000000011" classname="FilteredDataset" name="get_keys_returns_the_keys_passed_to_the_constructor"/>
    <testcase time="0.00300000000000011" classname="FilteredDataset" name="get_metadata_returns_the_metadata_of_the_data_passed_to_the_constructor"/>
    <testcase time="0.00499999999999901" classname="FilteredDataset" name="get_metadata_returns_the_metadata_of_the_data_passed_to_the_constructor"/>
    <testcase time="0.0330000000000013" classname="FilteredDataset" name="get_formatted_filter_state_returns_a_string_representation_of_filters"/>
    <testcase time="0.0250000000000004" classname="FilteredDataset" name="get_call_returns_the_filter_call_of_the_dataset"/>
    <testcase time="0.0259999999999998" classname="FilteredDataset" name="get_filter_overview_returns_a_data_frame"/>
    <testcase time="0.00199999999999889" classname="FilteredDataset" name="get_filter_overview_returns_a_data_frame"/>
    <testcase time="0.00700000000000145" classname="FilteredDataset" name="ui_add_is_pure_virtual"/>
  </testsuite>
  <testsuite name="LogicalFilterState" timestamp="2023-05-05T08:09:58Z" hostname="9466c6bbc1be" tests="30" skipped="0" failures="0" errors="0" time="0.19">
    <testcase time="0.0119999999999987" classname="LogicalFilterState" name="constructor_accepts_logical_values"/>
    <testcase time="0.00500000000000078" classname="LogicalFilterState" name="constructor_accepts_logical_values"/>
    <testcase time="0.00699999999999967" classname="LogicalFilterState" name="constructor_raises_error_when_selection_is_not_logical"/>
    <testcase time="0.00799999999999912" classname="LogicalFilterState" name="set_state_selected_accepts_a_logical_or_coercible_of_length_1"/>
    <testcase time="0.00400000000000134" classname="LogicalFilterState" name="set_state_selected_accepts_a_logical_or_coercible_of_length_1"/>
    <testcase time="0.00300000000000011" classname="LogicalFilterState" name="set_state_selected_accepts_a_logical_or_coercible_of_length_1"/>
    <testcase time="0.00600000000000023" classname="LogicalFilterState" name="set_state_selected_accepts_a_logical_or_coercible_of_length_1"/>
    <testcase time="0.00699999999999967" classname="LogicalFilterState" name="set_state_selected_accepts_a_logical_or_coercible_of_length_1"/>
    <testcase time="0.00600000000000023" classname="LogicalFilterState" name="get_call_returns_FALSE_values_from_data_passed_to_selector"/>
    <testcase time="0.00499999999999901" classname="LogicalFilterState" name="get_call_returns_appropriate_call_depending_on_selection_state"/>
    <testcase time="0.00500000000000078" classname="LogicalFilterState" name="get_call_returns_appropriate_call_depending_on_selection_state"/>
    <testcase time="0.00399999999999956" classname="LogicalFilterState" name="get_call_returns_appropriate_call_depending_on_selection_state"/>
    <testcase time="0.00600000000000023" classname="LogicalFilterState" name="format_accepts_numeric_as_indent"/>
    <testcase time="0.00600000000000023" classname="LogicalFilterState" name="format_accepts_numeric_as_indent"/>
    <testcase time="0.00900000000000034" classname="LogicalFilterState" name="format_returns_a_string_representation_the_FilterState_object"/>
    <testcase time="0.00799999999999912" classname="LogicalFilterState" name="format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00200000000000067" classname="LogicalFilterState" name="format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00300000000000011" classname="LogicalFilterState" name="format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.00199999999999889" classname="LogicalFilterState" name="format_prepends_spaces_to_every_line_of_the_returned_string"/>
    <testcase time="0.011000000000001" classname="LogicalFilterState" name="is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.00600000000000023" classname="LogicalFilterState" name="is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.00600000000000023" classname="LogicalFilterState" name="is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.00699999999999967" classname="LogicalFilterState" name="is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.00699999999999967" classname="LogicalFilterState" name="is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.00699999999999967" classname="LogicalFilterState" name="is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.00999999999999979" classname="LogicalFilterState" name="is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.0080000000000009" classname="LogicalFilterState" name="is_any_filtered_works_properly_when_both_TRUE_and_FALSE_are_present"/>
    <testcase time="0.00900000000000034" classname="LogicalFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FALSE_when_disabled"/>
    <testcase time="0.00600000000000023" classname="LogicalFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FALSE_when_disabled"/>
    <testcase time="0.00499999999999901" classname="LogicalFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FALSE_when_disabled"/>
  </testsuite>
  <testsuite name="MAEFilterStates" timestamp="2023-05-05T08:09:58Z" hostname="9466c6bbc1be" tests="30" skipped="2" failures="0" errors="0" time="0.82">
    <testcase time="0.0660000000000007" classname="MAEFilterStates" name="constructor_accepts_a_MultiAssayExperiment"/>
    <testcase time="0.00699999999999967" classname="MAEFilterStates" name="constructor_accepts_a_MultiAssayExperiment"/>
    <testcase time="0.0080000000000009" classname="MAEFilterStates" name="constructor_initializes_state_list_with_one_element_named_y_"/>
    <testcase time="0.00199999999999889" classname="MAEFilterStates" name="constructor_initializes_state_list_with_one_element_named_y_"/>
    <testcase time="0.00600000000000023" classname="MAEFilterStates" name="constructor_initializes_state_list_with_one_element_named_y_"/>
    <testcase time="0.00399999999999956" classname="MAEFilterStates" name="get_fun_returns_MultiAssayExperiment_subsetByColData"/>
    <testcase time="0.00900000000000034" classname="MAEFilterStates" name="set_filter_state_only_accepts_teal_slices_"/>
    <testcase time="0.0350000000000001" classname="MAEFilterStates" name="set_filter_state_only_accepts_teal_slices_"/>
    <testcase time="0.0140000000000011" classname="MAEFilterStates" name="set_filter_state_adds_states_to_state_list"/>
    <testcase time="0.0229999999999997" classname="MAEFilterStates" name="set_filter_state_adds_states_to_state_list"/>
    <testcase time="0.0299999999999994" classname="MAEFilterStates" name="get_filter_state_returns_teal_slices_with_features_identical_those_used_to_set_state"/>
    <testcase time="0.00500000000000078" classname="MAEFilterStates" name="get_filter_state_returns_teal_slices_with_features_identical_those_used_to_set_state"/>
    <testcase time="0.000999999999999446" classname="MAEFilterStates" name="get_filter_state_returns_teal_slices_with_features_identical_those_used_to_set_state">
      <skipped message="Reason: temporary ('test-MAEFilterStates.R:107:3')"/>
    </testcase>
    <testcase time="0.0410000000000004" classname="MAEFilterStates" name="set_filter_state_updates_existing_filter_states"/>
    <testcase time="0.00300000000000011" classname="MAEFilterStates" name="set_filter_state_updates_existing_filter_states"/>
    <testcase time="0.00199999999999889" classname="MAEFilterStates" name="set_filter_state_updates_existing_filter_states">
      <skipped message="Reason: temporary ('test-MAEFilterStates.R:141:3')"/>
    </testcase>
    <testcase time="0.032" classname="MAEFilterStates" name="remove_filter_state_removes_filters"/>
    <testcase time="0.00400000000000134" classname="MAEFilterStates" name="remove_filter_state_removes_filters"/>
    <testcase time="0.00299999999999834" classname="MAEFilterStates" name="remove_filter_state_removes_filters"/>
    <testcase time="0.0250000000000004" classname="MAEFilterStates" name="remove_filter_state_raises_warning_when_name_is_not_in_FilterStates"/>
    <testcase time="0.00500000000000078" classname="MAEFilterStates" name="format_is_a_method_of_MAEFilterStates_that_accepts_numeric_indent_argument"/>
    <testcase time="0.0109999999999992" classname="MAEFilterStates" name="format_is_a_method_of_MAEFilterStates_that_accepts_numeric_indent_argument"/>
    <testcase time="0.027000000000001" classname="MAEFilterStates" name="format_concatenates_its_FilterState_elements_using_n_and_adds_header"/>
    <testcase time="0.00399999999999956" classname="MAEFilterStates" name="format_concatenates_its_FilterState_elements_using_n_and_adds_header"/>
    <testcase time="0.00399999999999956" classname="MAEFilterStates" name="format_concatenates_its_FilterState_elements_using_n_and_adds_header"/>
    <testcase time="0.00500000000000078" classname="MAEFilterStates" name="format_concatenates_its_FilterState_elements_using_n_and_adds_header"/>
    <testcase time="0.0179999999999989" classname="MAEFilterStates" name="get_call_returns_executable_subsetByColData_call_"/>
    <testcase time="0.393000000000001" classname="MAEFilterStates" name="get_call_returns_executable_subsetByColData_call_"/>
    <testcase time="0.0280000000000005" classname="MAEFilterStates" name="get_filter_count_returns_the_number_of_active_filter_states_MAEFilterStates"/>
    <testcase time="0.00499999999999901" classname="MAEFilterStates" name="get_filter_count_returns_the_number_of_active_filter_states_MAEFilterStates"/>
  </testsuite>
  <testsuite name="MAEFilteredDataset" timestamp="2023-05-05T08:09:59Z" hostname="9466c6bbc1be" tests="20" skipped="0" failures="0" errors="0" time="1.595">
    <testcase time="0.072000000000001" classname="MAEFilteredDataset" name="constructor_accepts_a_MultiAssayExperiment_object"/>
    <testcase time="0.00499999999999901" classname="MAEFilteredDataset" name="constructor_accepts_a_MultiAssayExperiment_object"/>
    <testcase time="0.00600000000000023" classname="MAEFilteredDataset" name="constructor_accepts_a_MultiAssayExperiment_object"/>
    <testcase time="0.0679999999999996" classname="MAEFilteredDataset" name="filter_states_list_is_initialized_with_names_of_experiments"/>
    <testcase time="0.0830000000000002" classname="MAEFilteredDataset" name="get_call_returns_NULL_when_no_filter_applied"/>
    <testcase time="0.114000000000001" classname="MAEFilteredDataset" name="get_call_returns_a_call_with_applying_filter"/>
    <testcase time="0.119999999999999" classname="MAEFilteredDataset" name="get_filter_overview_info_returns_overview_matrix_for_MAEFilteredDataset_without_filtering"/>
    <testcase time="0.333" classname="MAEFilteredDataset" name="get_filter_overview_info_returns_overview_matrix_for_MAEFilteredDataset_with_filtering"/>
    <testcase time="0.113" classname="MAEFilteredDataset" name="MAEFilteredDataset_set_filter_state_sets_filters_in_FilterStates_specified_by_teal_slices"/>
    <testcase time="0.072000000000001" classname="MAEFilteredDataset" name="MAEFilteredDataset_set_filter_state_only_acceps_teal_slices"/>
    <testcase time="0.109999999999999" classname="MAEFilteredDataset" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_used_to_set_state"/>
    <testcase time="0.00400000000000134" classname="MAEFilteredDataset" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_used_to_set_state"/>
    <testcase time="0.00300000000000011" classname="MAEFilteredDataset" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_used_to_set_state"/>
    <testcase time="0.00399999999999778" classname="MAEFilteredDataset" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_used_to_set_state"/>
    <testcase time="0.105" classname="MAEFilteredDataset" name="remove_filter_state_removes_filter_state_specified_by_teal_slices"/>
    <testcase time="0.00900000000000034" classname="MAEFilteredDataset" name="remove_filter_state_removes_filter_state_specified_by_teal_slices"/>
    <testcase time="0.00600000000000023" classname="MAEFilteredDataset" name="remove_filter_state_removes_filter_state_specified_by_teal_slices"/>
    <testcase time="0.0670000000000002" classname="MAEFilteredDataset" name="get_supported_filter_varnames_returns_character_0_"/>
    <testcase time="0.109000000000002" classname="MAEFilteredDataset" name="remove_filters_button_removes_all_filters"/>
    <testcase time="0.191999999999997" classname="MAEFilteredDataset" name="remove_filters_button_removes_all_filters"/>
  </testsuite>
  <testsuite name="MatrixFilterStates" timestamp="2023-05-05T08:10:00Z" hostname="9466c6bbc1be" tests="28" skipped="2" failures="0" errors="0" time="0.319">
    <testcase time="0.00800000000000267" classname="MatrixFilterStates" name="constructor_accepts_a_matrix"/>
    <testcase time="0.00499999999999901" classname="MatrixFilterStates" name="constructor_accepts_a_matrix"/>
    <testcase time="0.00600000000000023" classname="MatrixFilterStates" name="constructor_initializes_state_list_of_length_1"/>
    <testcase time="0.00700000000000145" classname="MatrixFilterStates" name="constructor_initializes_state_list_of_length_1"/>
    <testcase time="0.00299999999999656" classname="MatrixFilterStates" name="get_fun_returns_dplyr_filter"/>
    <testcase time="0.00700000000000145" classname="MatrixFilterStates" name="set_filter_state_only_accepts_teal_slices_"/>
    <testcase time="0.0109999999999992" classname="MatrixFilterStates" name="set_filter_state_only_accepts_teal_slices_"/>
    <testcase time="0.00400000000000134" classname="MatrixFilterStates" name="set_filter_state_adds_states_to_state_list"/>
    <testcase time="0.0120000000000005" classname="MatrixFilterStates" name="set_filter_state_adds_states_to_state_list"/>
    <testcase time="0.027000000000001" classname="MatrixFilterStates" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_used_to_set_state"/>
    <testcase time="0.00399999999999778" classname="MatrixFilterStates" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_used_to_set_state"/>
    <testcase time="0.00100000000000122" classname="MatrixFilterStates" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_used_to_set_state">
      <skipped message="Reason: temporary ('test-MatrixFilterStates.R:85:3')"/>
    </testcase>
    <testcase time="0.0489999999999995" classname="MatrixFilterStates" name="set_filter_state_updates_existing_filter_states"/>
    <testcase time="0.00400000000000134" classname="MatrixFilterStates" name="set_filter_state_updates_existing_filter_states"/>
    <testcase time="0.00300000000000011" classname="MatrixFilterStates" name="set_filter_state_updates_existing_filter_states"/>
    <testcase time="0.000999999999997669" classname="MatrixFilterStates" name="set_filter_state_updates_existing_filter_states">
      <skipped message="Reason: temporary ('test-MatrixFilterStates.R:121:3')"/>
    </testcase>
    <testcase time="0.0459999999999994" classname="MatrixFilterStates" name="remove_filter_state_removes_filters_from_state_list"/>
    <testcase time="0.0160000000000018" classname="MatrixFilterStates" name="remove_filter_state_raises_warning_when_state_id_is_not_in_state_list"/>
    <testcase time="0.00499999999999901" classname="MatrixFilterStates" name="format_is_a_method_of_MatrixFilterStates_that_accepts_numeric_indent_argument"/>
    <testcase time="0.0109999999999992" classname="MatrixFilterStates" name="format_is_a_method_of_MatrixFilterStates_that_accepts_numeric_indent_argument"/>
    <testcase time="0.0280000000000022" classname="MatrixFilterStates" name="format_concatenates_its_FilterState_elements_using_n_without_additional_indent"/>
    <testcase time="0.00399999999999778" classname="MatrixFilterStates" name="format_concatenates_its_FilterState_elements_using_n_without_additional_indent"/>
    <testcase time="0.00400000000000134" classname="MatrixFilterStates" name="format_concatenates_its_FilterState_elements_using_n_without_additional_indent"/>
    <testcase time="0.0150000000000006" classname="MatrixFilterStates" name="get_call_returns_executable_call_filtering_a_matrix_with_numeric_values"/>
    <testcase time="0.00499999999999901" classname="MatrixFilterStates" name="get_call_returns_executable_call_filtering_a_matrix_with_numeric_values"/>
    <testcase time="0.0249999999999986" classname="MatrixFilterStates" name="get_filter_count_returns_the_number_of_active_filter_states_MartixFilterStates"/>
    <testcase time="0.00400000000000134" classname="MatrixFilterStates" name="get_filter_count_returns_the_number_of_active_filter_states_MartixFilterStates"/>
    <testcase time="0.00400000000000134" classname="MatrixFilterStates" name="ui_add_returns_a_message_inside_a_div_when_data_has_no_rows_or_no_columns"/>
  </testsuite>
  <testsuite name="RangeFilterState" timestamp="2023-05-05T08:10:01Z" hostname="9466c6bbc1be" tests="40" skipped="2" failures="0" errors="0" time="0.385">
    <testcase time="0.0139999999999993" classname="RangeFilterState" name="constructor_accepts_numerical_values"/>
    <testcase time="0.00499999999999901" classname="RangeFilterState" name="constructor_accepts_numerical_values"/>
    <testcase time="0.0100000000000016" classname="RangeFilterState" name="constructor_accepts_infinite_values_but_not_infinite_only"/>
    <testcase time="0.00600000000000023" classname="RangeFilterState" name="constructor_accepts_infinite_values_but_not_infinite_only"/>
    <testcase time="0.00600000000000023" classname="RangeFilterState" name="constructor_accepts_infinite_values_but_not_infinite_only"/>
    <testcase time="0.0129999999999981" classname="RangeFilterState" name="constructor_initializes_keep_inf_TRUE_by_default_if_x_contains_Infs"/>
    <testcase time="0.0120000000000005" classname="RangeFilterState" name="constructor_initializes_keep_inf_TRUE_by_default_if_x_contains_Infs"/>
    <testcase time="0.0100000000000016" classname="RangeFilterState" name="constructor_raises_error_when_selected_is_not_sorted"/>
    <testcase time="0.00899999999999679" classname="RangeFilterState" name="constructor_raises_error_when_selection_is_not_numeric_or_coercible"/>
    <testcase time="0.0110000000000028" classname="RangeFilterState" name="constructor_raises_error_when_choices_is_out_of_range"/>
    <testcase time="0.00999999999999801" classname="RangeFilterState" name="constructor_raises_warning_when_choices_is_not_sorted"/>
    <testcase time="0.00700000000000145" classname="RangeFilterState" name="constructor_raises_error_when_choices_is_not_numeric_or_coercible"/>
    <testcase time="0.0129999999999981" classname="RangeFilterState" name="set_state_selected_accepts_vector_of_two_numbers_or_coercible"/>
    <testcase time="0.00600000000000023" classname="RangeFilterState" name="set_state_selected_accepts_vector_of_two_numbers_or_coercible"/>
    <testcase time="0.00400000000000134" classname="RangeFilterState" name="set_state_selected_accepts_vector_of_two_numbers_or_coercible"/>
    <testcase time="0.00700000000000145" classname="RangeFilterState" name="set_state_selected_accepts_vector_of_two_numbers_or_coercible"/>
    <testcase time="0.00499999999999901" classname="RangeFilterState" name="set_state_selected_accepts_vector_of_two_numbers_or_coercible"/>
    <testcase time="0.0109999999999992" classname="RangeFilterState" name="get_call_returns_call_encompassing_all_values_passed_to_constructor"/>
    <testcase time="0.0199999999999996" classname="RangeFilterState" name="get_call_returns_call_encompassing_all_values_passed_to_constructor"/>
    <testcase time="0.0139999999999993" classname="RangeFilterState" name="get_call_returns_call_encompassing_all_values_passed_in_set_selected"/>
    <testcase time="0.0120000000000005" classname="RangeFilterState" name="NA_and_Inf_can_both_be_included_by_call_returned_by_get_call"/>
    <testcase time="0.00499999999999901" classname="RangeFilterState" name="NA_and_Inf_can_both_be_included_by_call_returned_by_get_call"/>
    <testcase time="0.0150000000000006" classname="RangeFilterState" name="get_call_returns_valid_call_after_unsuccessfull_setting_of_selected"/>
    <testcase time="0.00200000000000244" classname="RangeFilterState" name="get_call_returns_valid_call_after_unsuccessfull_setting_of_selected"/>
    <testcase time="0.0129999999999981" classname="RangeFilterState" name="format_accepts_numeric_as_indent"/>
    <testcase time="0.00700000000000145" classname="RangeFilterState" name="format_accepts_numeric_as_indent"/>
    <testcase time="0.00199999999999889" classname="RangeFilterState" name="format_returns_a_string_representation_the_FilterState_object">
      <skipped message="Reason: temporary ('test-RangeFilterState.R:149:3')"/>
    </testcase>
    <testcase time="0.00999999999999801" classname="RangeFilterState" name="format_prepends_spaces_to_every_line_of_the_returned_string">
      <skipped message="Reason: temporary ('test-RangeFilterState.R:164:3')"/>
    </testcase>
    <testcase time="0.0229999999999997" classname="RangeFilterState" name="is_any_filtered_works_properly_when_NA_and_Inf_are_present_in_data"/>
    <testcase time="0.00700000000000145" classname="RangeFilterState" name="is_any_filtered_works_properly_when_NA_and_Inf_are_present_in_data"/>
    <testcase time="0.00700000000000145" classname="RangeFilterState" name="is_any_filtered_works_properly_when_NA_and_Inf_are_present_in_data"/>
    <testcase time="0.00799999999999912" classname="RangeFilterState" name="is_any_filtered_works_properly_when_NA_and_Inf_are_present_in_data"/>
    <testcase time="0.0069999999999979" classname="RangeFilterState" name="is_any_filtered_works_properly_when_NA_and_Inf_are_present_in_data"/>
    <testcase time="0.0160000000000018" classname="RangeFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FALSE_when_disabled"/>
    <testcase time="0.00600000000000023" classname="RangeFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FALSE_when_disabled"/>
    <testcase time="0.0069999999999979" classname="RangeFilterState" name="is_any_filtered_returns_TRUE_when_enabled_and_FALSE_when_disabled"/>
    <testcase time="0.0130000000000017" classname="RangeFilterState" name="is_any_filtered_reacts_to_choices"/>
    <testcase time="0.0129999999999981" classname="RangeFilterState" name="is_any_filtered_reacts_to_choices"/>
    <testcase time="0.0100000000000016" classname="RangeFilterState" name="private_get_pretty_range_step_returns_pretty_step_size"/>
    <testcase time="0.00900000000000034" classname="RangeFilterState" name="private_get_pretty_range_step_returns_pretty_step_size"/>
  </testsuite>
  <testsuite name="SEFilterStates" timestamp="2023-05-05T08:10:01Z" hostname="9466c6bbc1be" tests="40" skipped="2" failures="0" errors="0" time="0.799">
    <testcase time="0.0519999999999996" classname="SEFilterStates" name="constructor_accepts_a_SummarizedExperiment"/>
    <testcase time="0.00600000000000023" classname="SEFilterStates" name="constructor_accepts_a_SummarizedExperiment"/>
    <testcase time="0.0420000000000016" classname="SEFilterStates" name="constructor_initializes_state_list_with_two_elements_named_subset_and_select_"/>
    <testcase time="0.00199999999999889" classname="SEFilterStates" name="constructor_initializes_state_list_with_two_elements_named_subset_and_select_"/>
    <testcase time="0.0139999999999993" classname="SEFilterStates" name="constructor_initializes_state_list_with_two_elements_named_subset_and_select_"/>
    <testcase time="0.00300000000000011" classname="SEFilterStates" name="constructor_initializes_state_list_with_two_elements_named_subset_and_select_"/>
    <testcase time="0.00799999999999912" classname="SEFilterStates" name="constructor_initializes_state_list_with_two_elements_named_subset_and_select_"/>
    <testcase time="0.0240000000000009" classname="SEFilterStates" name="get_fun_method_returns_subset"/>
    <testcase time="0.0300000000000011" classname="SEFilterStates" name="set_filter_state_only_accepts_teal_slices_"/>
    <testcase time="0.0269999999999975" classname="SEFilterStates" name="set_filter_state_only_accepts_teal_slices_"/>
    <testcase time="0.0229999999999997" classname="SEFilterStates" name="set_filter_state_adds_states_to_state_list"/>
    <testcase time="0.00200000000000244" classname="SEFilterStates" name="set_filter_state_adds_states_to_state_list"/>
    <testcase time="0.0169999999999995" classname="SEFilterStates" name="set_filter_state_adds_states_to_state_list"/>
    <testcase time="0.00199999999999889" classname="SEFilterStates" name="set_filter_state_adds_states_to_state_list"/>
    <testcase time="0.0429999999999993" classname="SEFilterStates" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_used_to_set_state"/>
    <testcase time="0.00300000000000011" classname="SEFilterStates" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_used_to_set_state"/>
    <testcase time="0.00200000000000244" classname="SEFilterStates" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_used_to_set_state">
      <skipped message="Reason: temporary ('test-SEFilterStates.R:132:3')"/>
    </testcase>
    <testcase time="0.0589999999999975" classname="SEFilterStates" name="set_filter_state_updates_select_state_which_has_been_set_already"/>
    <testcase time="0.00400000000000134" classname="SEFilterStates" name="set_filter_state_updates_select_state_which_has_been_set_already"/>
    <testcase time="0.00100000000000122" classname="SEFilterStates" name="set_filter_state_updates_select_state_which_has_been_set_already">
      <skipped message="Reason: temporary ('test-SEFilterStates.R:158:3')"/>
    </testcase>
    <testcase time="0.0609999999999999" classname="SEFilterStates" name="remove_filter_state_removes_filters_specified_by_teal_slices_"/>
    <testcase time="0.00499999999999901" classname="SEFilterStates" name="remove_filter_state_removes_filters_specified_by_teal_slices_"/>
    <testcase time="0.00600000000000023" classname="SEFilterStates" name="remove_filter_state_removes_filters_specified_by_teal_slices_"/>
    <testcase time="0.00300000000000011" classname="SEFilterStates" name="remove_filter_state_removes_filters_specified_by_teal_slices_"/>
    <testcase time="0.0159999999999982" classname="SEFilterStates" name="remove_filter_state_removes_filters_specified_by_teal_slices_"/>
    <testcase time="0.0380000000000003" classname="SEFilterStates" name="remove_filter_state_raises_warning_when_non_existent_filter_state_specified"/>
    <testcase time="0.0229999999999997" classname="SEFilterStates" name="format_is_a_method_of_MAEFilterStates_that_accepts_numeric_indent_argument"/>
    <testcase time="0.0180000000000007" classname="SEFilterStates" name="format_is_a_method_of_MAEFilterStates_that_accepts_numeric_indent_argument"/>
    <testcase time="0.0429999999999993" classname="SEFilterStates" name="format_concatenates_its_FilterState_elements_using_n_and_adds_header"/>
    <testcase time="0.00600000000000023" classname="SEFilterStates" name="format_concatenates_its_FilterState_elements_using_n_and_adds_header"/>
    <testcase time="0.00600000000000023" classname="SEFilterStates" name="format_concatenates_its_FilterState_elements_using_n_and_adds_header"/>
    <testcase time="0.00500000000000256" classname="SEFilterStates" name="format_concatenates_its_FilterState_elements_using_n_and_adds_header"/>
    <testcase time="0.0259999999999998" classname="SEFilterStates" name="get_call_returns_NULL_if_no_states_added"/>
    <testcase time="0.0410000000000004" classname="SEFilterStates" name="get_call_returns_executable_subset_call_"/>
    <testcase time="0.0309999999999988" classname="SEFilterStates" name="get_call_returns_executable_subset_call_"/>
    <testcase time="0.00499999999999901" classname="SEFilterStates" name="get_call_returns_executable_subset_call_"/>
    <testcase time="0.0549999999999997" classname="SEFilterStates" name="get_filter_count_properly_tallies_multiple_state_lists_SEFilterStates"/>
    <testcase time="0.00600000000000023" classname="SEFilterStates" name="get_filter_count_properly_tallies_multiple_state_lists_SEFilterStates"/>
    <testcase time="0.0210000000000008" classname="SEFilterStates" name="ui_add_returns_a_message_inside_a_div_when_data_has_no_rows_or_no_columns"/>
    <testcase time="0.0199999999999996" classname="SEFilterStates" name="ui_add_returns_a_message_inside_a_div_when_data_has_no_rows_or_no_columns"/>
  </testsuite>
  <testsuite name="calls_combine_by" timestamp="2023-05-05T08:10:02Z" hostname="9466c6bbc1be" tests="9" skipped="0" failures="0" errors="0" time="0.031">
    <testcase time="0.00499999999999901" classname="calls_combine_by" name="calls_combine_by_different_operators"/>
    <testcase time="0.00200000000000244" classname="calls_combine_by" name="calls_combine_by_different_operators"/>
    <testcase time="0.000999999999997669" classname="calls_combine_by" name="calls_combine_by_different_operators"/>
    <testcase time="0.00500000000000256" classname="calls_combine_by" name="calls_combine_by_different_operators"/>
    <testcase time="0.00499999999999901" classname="calls_combine_by" name="calls_combine_by_different_operators"/>
    <testcase time="0.00199999999999889" classname="calls_combine_by" name="calls_combine_by_different_operators"/>
    <testcase time="0.00400000000000134" classname="calls_combine_by" name="calls_combine_by_different_forms_of_calls"/>
    <testcase time="0.000999999999997669" classname="calls_combine_by" name="calls_combine_by_different_forms_of_calls"/>
    <testcase time="0.00600000000000023" classname="calls_combine_by" name="calls_combine_by_different_forms_of_calls"/>
  </testsuite>
  <testsuite name="count_labels" timestamp="2023-05-05T08:10:02Z" hostname="9466c6bbc1be" tests="50" skipped="0" failures="0" errors="0" time="0.227">
    <testcase time="0.00500000000000256" classname="count_labels" name="make_count_text_requires_label_to_be_a_character_1_"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="make_count_text_requires_label_to_be_a_character_1_"/>
    <testcase time="0.00600000000000023" classname="count_labels" name="make_count_text_requires_label_to_be_a_character_1_"/>
    <testcase time="0.00199999999999889" classname="count_labels" name="make_count_text_requires_countmax_to_be_a_numeric_1_"/>
    <testcase time="0.00500000000000256" classname="count_labels" name="make_count_text_requires_countmax_to_be_a_numeric_1_"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="make_count_text_requires_countmax_to_be_a_numeric_1_"/>
    <testcase time="0.00199999999999889" classname="count_labels" name="make_count_text_requires_countnow_to_be_a_numeric_1_or_NULL"/>
    <testcase time="0.00100000000000122" classname="count_labels" name="make_count_text_requires_countnow_to_be_a_numeric_1_or_NULL"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="make_count_text_requires_countnow_to_be_a_numeric_1_or_NULL"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="make_count_text_requires_countnow_to_be_a_numeric_1_or_NULL"/>
    <testcase time="0.00300000000000011" classname="count_labels" name="make_count_text_returns_label_countnow_countmax_"/>
    <testcase time="0.00200000000000244" classname="count_labels" name="make_count_text_returns_label_countmax_when_countnow_is_NULL"/>
    <testcase time="0.00199999999999889" classname="count_labels" name="countBar_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBar_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBar_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00600000000000023" classname="count_labels" name="countBar_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00500000000000256" classname="count_labels" name="countBar_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00199999999999889" classname="count_labels" name="countBar_requires_label_to_be_a_character_1_"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBar_requires_label_to_be_a_character_1_"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBar_requires_label_to_be_a_character_1_"/>
    <testcase time="0.00500000000000256" classname="count_labels" name="countBar_requires_label_to_be_a_character_1_"/>
    <testcase time="0.00299999999999656" classname="count_labels" name="countBar_requires_countmax_to_be_a_numeric_1_"/>
    <testcase time="0.00500000000000256" classname="count_labels" name="countBar_requires_countmax_to_be_a_numeric_1_"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBar_requires_countmax_to_be_a_numeric_1_"/>
    <testcase time="0.00300000000000011" classname="count_labels" name="countBar_requires_counttotal_to_be_a_numeric_1_"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBar_requires_counttotal_to_be_a_numeric_1_"/>
    <testcase time="0.00500000000000256" classname="count_labels" name="countBar_requires_counttotal_to_be_a_numeric_1_"/>
    <testcase time="0.00300000000000011" classname="count_labels" name="countBar_requires_countnow_to_be_a_numeric_1_NULL"/>
    <testcase time="0.00199999999999889" classname="count_labels" name="countBar_requires_countnow_to_be_a_numeric_1_NULL"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBar_requires_countnow_to_be_a_numeric_1_NULL"/>
    <testcase time="0.00600000000000023" classname="count_labels" name="countBar_requires_countnow_to_be_a_numeric_1_NULL"/>
    <testcase time="0.00199999999999889" classname="count_labels" name="countBar_returns_a_div_with_class_and_two_progressbars"/>
    <testcase time="0.00300000000000011" classname="count_labels" name="countBars_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00600000000000023" classname="count_labels" name="countBars_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00500000000000256" classname="count_labels" name="countBars_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00599999999999667" classname="count_labels" name="countBars_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00500000000000256" classname="count_labels" name="countBars_requires_InputId_to_be_a_character_1_"/>
    <testcase time="0.00300000000000011" classname="count_labels" name="countBars_requires_choices_to_be_a_vector"/>
    <testcase time="0.00300000000000011" classname="count_labels" name="countBars_requires_choices_to_be_a_vector"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBars_requires_choices_to_be_a_vector"/>
    <testcase time="0.00300000000000011" classname="count_labels" name="countBars_requires_countsmax_to_be_a_numeric_of_the_same_length_as_choices"/>
    <testcase time="0.00600000000000023" classname="count_labels" name="countBars_requires_countsmax_to_be_a_numeric_of_the_same_length_as_choices"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBars_requires_countsmax_to_be_a_numeric_of_the_same_length_as_choices"/>
    <testcase time="0.0160000000000018" classname="count_labels" name="countBars_requires_countsmax_to_be_a_numeric_of_the_same_length_as_choices"/>
    <testcase time="0.00499999999999901" classname="count_labels" name="countBars_requires_counstnow_to_be_a_numeric_lower_than_countsmax_NULL"/>
    <testcase time="0.00300000000000011" classname="count_labels" name="countBars_requires_counstnow_to_be_a_numeric_lower_than_countsmax_NULL"/>
    <testcase time="0.00700000000000145" classname="count_labels" name="countBars_requires_counstnow_to_be_a_numeric_lower_than_countsmax_NULL"/>
    <testcase time="0.00599999999999667" classname="count_labels" name="countBars_requires_counstnow_to_be_a_numeric_lower_than_countsmax_NULL"/>
    <testcase time="0.00600000000000023" classname="count_labels" name="countBars_requires_counstnow_to_be_a_numeric_lower_than_countsmax_NULL"/>
    <testcase time="0.00400000000000134" classname="count_labels" name="countBars_returns_a_list_of_countBar_s_"/>
  </testsuite>
  <testsuite name="filter_panel_api" timestamp="2023-05-05T08:10:02Z" hostname="9466c6bbc1be" tests="35" skipped="0" failures="0" errors="0" time="0.973">
    <testcase time="0.0159999999999982" classname="filter_panel_api" name="FilterPanelAPI_constructor_accepts_a_FilteredData_object"/>
    <testcase time="0.00700000000000145" classname="filter_panel_api" name="FilterPanelAPI_constructor_accepts_a_FilteredData_object"/>
    <testcase time="0.00600000000000023" classname="filter_panel_api" name="FilterPanelAPI_constructor_accepts_a_FilteredData_object"/>
    <testcase time="0.0210000000000008" classname="filter_panel_api" name="FilterPanelAPI_set_filter_state_accepts_teal_slies_and_named_list_with_warning_"/>
    <testcase time="0.00799999999999912" classname="filter_panel_api" name="FilterPanelAPI_set_filter_state_accepts_teal_slies_and_named_list_with_warning_"/>
    <testcase time="0.00400000000000134" classname="filter_panel_api" name="FilterPanelAPI_set_filter_state_accepts_teal_slies_and_named_list_with_warning_"/>
    <testcase time="0.0120000000000005" classname="filter_panel_api" name="FilterPanelAPI_set_filter_state_adds_filter_states"/>
    <testcase time="0.0269999999999975" classname="filter_panel_api" name="get_filter_state_returns_teal_slices_with_features_identical_those_in_input_adds_format"/>
    <testcase time="0.00400000000000134" classname="filter_panel_api" name="get_filter_state_returns_teal_slices_with_features_identical_those_in_input_adds_format"/>
    <testcase time="0.00300000000000011" classname="filter_panel_api" name="get_filter_state_returns_teal_slices_with_features_identical_those_in_input_adds_format"/>
    <testcase time="0.0199999999999996" classname="filter_panel_api" name="FilterPanelAPI_remove_filter_state_removes_filter_states_specified_by_teal_slices_"/>
    <testcase time="0.0240000000000009" classname="filter_panel_api" name="FilterPanelAPI_clear_filter_states_removes_all_filters_of_datasets_in_FilterPanelAPI"/>
    <testcase time="0.0069999999999979" classname="filter_panel_api" name="FilterPanelAPI_clear_filter_states_removes_all_filters_of_datasets_in_FilterPanelAPI"/>
    <testcase time="0.0340000000000025" classname="filter_panel_api" name="FilterPanelAPI_clear_filter_states_remove_the_filters_of_the_desired_dataset_only"/>
    <testcase time="0.0139999999999993" classname="filter_panel_api" name="FilterPanelAPI_clear_filter_states_remove_the_filters_of_the_desired_dataset_only"/>
    <testcase time="0.00399999999999778" classname="filter_panel_api" name="FilterPanelAPI_clear_filter_states_remove_the_filters_of_the_desired_dataset_only"/>
    <testcase time="0.0440000000000005" classname="filter_panel_api" name="filter_panel_api_neutral_when_filter_panel_is_disabled"/>
    <testcase time="0.00200000000000244" classname="filter_panel_api" name="filter_panel_api_neutral_when_filter_panel_is_disabled"/>
    <testcase time="0.00499999999999901" classname="filter_panel_api" name="filter_panel_api_neutral_when_filter_panel_is_disabled"/>
    <testcase time="0.0569999999999986" classname="filter_panel_api" name="filter_panel_api_under_disable_enable_filter_panel"/>
    <testcase time="0.00200000000000244" classname="filter_panel_api" name="filter_panel_api_under_disable_enable_filter_panel"/>
    <testcase time="0.0389999999999979" classname="filter_panel_api" name="filter_panel_api_under_disable_enable_filter_panel"/>
    <testcase time="0.125" classname="filter_panel_api" name="set_filter_state_accepts_teal_slices_and_nested_list"/>
    <testcase time="0.0310000000000024" classname="filter_panel_api" name="set_filter_state_accepts_teal_slices_and_nested_list"/>
    <testcase time="0.0069999999999979" classname="filter_panel_api" name="set_filter_state_accepts_teal_slices_and_nested_list"/>
    <testcase time="0.135999999999999" classname="filter_panel_api" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_in_input"/>
    <testcase time="0.00400000000000134" classname="filter_panel_api" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_in_input"/>
    <testcase time="0.00400000000000134" classname="filter_panel_api" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_in_input"/>
    <testcase time="0.00399999999999778" classname="filter_panel_api" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_in_input"/>
    <testcase time="0.00400000000000134" classname="filter_panel_api" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_in_input"/>
    <testcase time="0.00300000000000011" classname="filter_panel_api" name="get_filter_state_returns_teal_slices_with_features_identical_to_those_in_input"/>
    <testcase time="0.140000000000001" classname="filter_panel_api" name="remove_filter_state_removes_filter_state_specified_by_teal_slices_"/>
    <testcase time="0.0129999999999981" classname="filter_panel_api" name="remove_filter_state_removes_filter_state_specified_by_teal_slices_"/>
    <testcase time="0.135000000000002" classname="filter_panel_api" name="clear_filter_states_removes_all_filter_states"/>
    <testcase time="0.0069999999999979" classname="filter_panel_api" name="clear_filter_states_removes_all_filter_states"/>
  </testsuite>
  <testsuite name="get_supported_filter_varnames" timestamp="2023-05-05T08:10:03Z" hostname="9466c6bbc1be" tests="5" skipped="0" failures="0" errors="0" time="0.014">
    <testcase time="0.00500000000000256" classname="get_supported_filter_varnames" name="get_supported_filter_varnames_returns_character_0_for_an_empty_matrix"/>
    <testcase time="0.00199999999999889" classname="get_supported_filter_varnames" name="get_supported_filter_varnames_returns_character_0_for_an_empty_data.frame"/>
    <testcase time="0.00199999999999889" classname="get_supported_filter_varnames" name="get_supported_filter_varnames_returns_character_0_for_a_single_column_numeric_matrix"/>
    <testcase time="0.00200000000000244" classname="get_supported_filter_varnames" name="get_supported_filter_varnames_returns_character_0_for_a_single_column_of_NA_values"/>
    <testcase time="0.00299999999999656" classname="get_supported_filter_varnames" name="get_supported_filter_varnames_returns_column_names_for_a_non_empty_data.frame"/>
  </testsuite>
  <testsuite name="init_filter_state" timestamp="2023-05-05T08:10:03Z" hostname="9466c6bbc1be" tests="37" skipped="0" failures="0" errors="0" time="0.226">
    <testcase time="0.0100000000000016" classname="init_filter_state" name="init_filter_state_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="init_filter_state" name="init_filter_state_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="init_filter_state" name="init_filter_state_checks_arguments"/>
    <testcase time="0.00500000000000256" classname="init_filter_state" name="init_filter_state_checks_arguments"/>
    <testcase time="0.00599999999999667" classname="init_filter_state" name="init_filter_state_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="init_filter_state" name="init_filter_state_checks_arguments"/>
    <testcase time="0.00500000000000256" classname="init_filter_state" name="init_filter_state_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="init_filter_state" name="init_filter_state_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="init_filter_state" name="init_filter_state_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="init_filter_state" name="init_filter_state_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="init_filter_state" name="init_filter_state_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="init_filter_state" name="init_filter_state_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="init_filter_state" name="init_filter_state_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="init_filter_state" name="init_filter_state_returns_an_EmptyFilterState_if_all_values_provided_are_NA"/>
    <testcase time="0.00700000000000145" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_a_numeric_of_length_1"/>
    <testcase time="0.0109999999999992" classname="init_filter_state" name="init_filter_state_returns_a_RangeFilterState_if_passed_a_longer_numeric"/>
    <testcase time="0.00700000000000145" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_object_if_passed_a_Date_object_of_length_1"/>
    <testcase time="0.0069999999999979" classname="init_filter_state" name="init_filter_state_returns_a_DateFilterState_object_if_passed_longer_a_Date_object"/>
    <testcase time="0.00600000000000023" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_object_if_passed_a_POSIXct_or_POSIXlt_of_length_1"/>
    <testcase time="0.00900000000000034" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_object_if_passed_a_POSIXct_or_POSIXlt_of_length_1"/>
    <testcase time="0.00700000000000145" classname="init_filter_state" name="init_filter_state_returns_a_DatetimeFilterState_object_if_passed_a_longer_POSIXct_or_POSIXlt"/>
    <testcase time="0.00900000000000034" classname="init_filter_state" name="init_filter_state_returns_a_DatetimeFilterState_object_if_passed_a_longer_POSIXct_or_POSIXlt"/>
    <testcase time="0.0109999999999992" classname="init_filter_state" name="init_filter_state_returns_a_RangeFilterState_if_passed_a_numeric_vector_containing_Inf"/>
    <testcase time="0.000999999999997669" classname="init_filter_state" name="init_filter_state_returns_a_RangeFilterState_if_passed_a_numeric_vector_containing_Inf"/>
    <testcase time="0.0190000000000019" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_fewer_than_five_non_NA_elements"/>
    <testcase time="0.00100000000000122" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_fewer_than_five_non_NA_elements"/>
    <testcase time="0.00799999999999912" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_a_character_vector_of_any_length"/>
    <testcase time="0.00199999999999889" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_a_character_vector_of_any_length"/>
    <testcase time="0.00600000000000023" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_a_character_vector_of_any_length"/>
    <testcase time="0.00199999999999889" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_a_character_vector_of_any_length"/>
    <testcase time="0.00700000000000145" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_a_factor_of_any_length"/>
    <testcase time="0.00100000000000122" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_a_factor_of_any_length"/>
    <testcase time="0.00600000000000023" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_a_factor_of_any_length"/>
    <testcase time="0.00199999999999889" classname="init_filter_state" name="init_filter_state_returns_a_ChoicesFilterState_if_passed_a_factor_of_any_length"/>
    <testcase time="0.0069999999999979" classname="init_filter_state" name="init_filter_state_return_a_LogicalFilterState_if_passed_a_logical_vector"/>
    <testcase time="0.00100000000000122" classname="init_filter_state" name="init_filter_state_return_a_LogicalFilterState_if_passed_a_logical_vector"/>
    <testcase time="0.00700000000000145" classname="init_filter_state" name="init_filter_state_default_accepts_a_list"/>
  </testsuite>
  <testsuite name="init_filter_states" timestamp="2023-05-05T08:10:03Z" hostname="9466c6bbc1be" tests="8" skipped="0" failures="0" errors="0" time="0.03">
    <testcase time="0.0069999999999979" classname="init_filter_states" name="init_filter_states_returns_a_DFFilterStates_object_if_passed_an_empty_data.frame"/>
    <testcase time="0.00400000000000134" classname="init_filter_states" name="init_filter_states_returns_a_DFFilterStates_object_if_passed_an_empty_data.frame"/>
    <testcase time="0.00300000000000011" classname="init_filter_states" name="init_filter_states_returns_a_MatrixFilterStates_object_if_passed_an_empty_matrix"/>
    <testcase time="0.00300000000000011" classname="init_filter_states" name="init_filter_states_returns_a_MatrixFilterStates_object_if_passed_an_empty_matrix"/>
    <testcase time="0.00300000000000011" classname="init_filter_states" name="init_filter_states_returns_an_MAEFilterStates_object_if_passed_an_object_of_class_MAE"/>
    <testcase time="0.00399999999999778" classname="init_filter_states" name="init_filter_states_returns_an_MAEFilterStates_object_if_passed_an_object_of_class_MAE"/>
    <testcase time="0.00300000000000011" classname="init_filter_states" name="init_filter_states_returns_an_SEFilterStates_object_if_passed_an_object_of_class_SE"/>
    <testcase time="0.00300000000000011" classname="init_filter_states" name="init_filter_states_returns_an_SEFilterStates_object_if_passed_an_object_of_class_SE"/>
  </testsuite>
  <testsuite name="init_filtered_data" timestamp="2023-05-05T08:10:03Z" hostname="9466c6bbc1be" tests="8" skipped="0" failures="0" errors="0" time="0.076">
    <testcase time="0.0250000000000021" classname="init_filtered_data" name="init_filtered_data_accepts_a_TealData_object"/>
    <testcase time="0.0159999999999982" classname="init_filtered_data" name="init_filtered_data_accepts_a_CDISCTealData_with_mixed_CDISC_and_Dataset"/>
    <testcase time="0.00500000000000256" classname="init_filtered_data" name="init_filtered_data_accepts_a_list_of_data.frame_objects"/>
    <testcase time="0.00600000000000023" classname="init_filtered_data" name="init_filtered_data.default_asserts_x_has_unique_names"/>
    <testcase time="0.00599999999999667" classname="init_filtered_data" name="init_filtered_data.default_asserts_code_is_CodeClass_"/>
    <testcase time="0.00500000000000256" classname="init_filtered_data" name="init_filtered_data.default_accepts_NULL_passed_to_code"/>
    <testcase time="0.0069999999999979" classname="init_filtered_data" name="init_filtered_data.default_asserts_join_keys_is_JoinKeys_"/>
    <testcase time="0.00600000000000023" classname="init_filtered_data" name="init_filtered_data.default_asserts_check_is_logical_1_"/>
  </testsuite>
  <testsuite name="init_filtered_dataset" timestamp="2023-05-05T08:10:03Z" hostname="9466c6bbc1be" tests="4" skipped="0" failures="0" errors="0" time="0.082">
    <testcase time="0.00700000000000145" classname="init_filtered_dataset" name="init_filtered_dataset_returns_a_DefaultFilteredDataset_when_passed_a_data.frame"/>
    <testcase time="0.00399999999999778" classname="init_filtered_dataset" name="init_filtered_dataset_returns_a_DefaultFilteredDataset_when_passed_a_data.frame"/>
    <testcase time="0.0670000000000002" classname="init_filtered_dataset" name="init_filtered_dataset_returns_an_MAEFilteredDataset_when_passed_an_MAE"/>
    <testcase time="0.00400000000000134" classname="init_filtered_dataset" name="init_filtered_dataset_returns_an_MAEFilteredDataset_when_passed_an_MAE"/>
  </testsuite>
  <testsuite name="teal_slice" timestamp="2023-05-05T08:10:03Z" hostname="9466c6bbc1be" tests="149" skipped="0" failures="1" errors="0" time="0.666">
    <testcase time="0.00700000000000145" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.000999999999997669" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00200000000000244" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00500000000000256" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00500000000000256" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00500000000000256" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00500000000000256" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="filter_var_checks_arguments"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="filter_var_returns_teal_slice_"/>
    <testcase time="0.00100000000000122" classname="teal_slice" name="filter_var_returns_teal_slice_"/>
    <testcase time="0.00700000000000145" classname="teal_slice" name="filter_var_returns_teal_slice_"/>
    <testcase time="0.000999999999997669" classname="teal_slice" name="filter_var_returns_teal_slice_"/>
    <testcase time="0.0440000000000005" classname="teal_slice" name="filter_settings_checks_arguments"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="filter_settings_checks_arguments"/>
    <testcase time="0.00700000000000145" classname="teal_slice" name="filter_settings_checks_arguments"/>
    <testcase time="0.00700000000000145" classname="teal_slice" name="filter_settings_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="filter_settings_checks_arguments"/>
    <testcase time="0.0069999999999979" classname="teal_slice" name="filter_settings_checks_arguments"/>
    <testcase time="0.00799999999999912" classname="teal_slice" name="filter_settings_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="filter_settings_checks_arguments"/>
    <testcase time="0.00200000000000244" classname="teal_slice" name="filter_settings_returns_teal_slices_"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="filter_settings_returns_teal_slices_"/>
    <testcase time="0.00700000000000145" classname="teal_slice" name="filter_settings_returns_teal_slices_"/>
    <testcase time="0.00399999999999778" classname="teal_slice" name="filter_settings_returns_teal_slices_"/>
    <testcase time="0.00400000000000134" classname="teal_slice" name="filter_settings_returns_teal_slices_"/>
    <testcase time="0.00399999999999778" classname="teal_slice" name="filter_settings_returns_teal_slices_"/>
    <testcase time="0.00200000000000244" classname="teal_slice" name="filter_settings_returns_teal_slices_"/>
    <testcase time="0.00399999999999778" classname="teal_slice" name="is_functions_work"/>
    <testcase time="0.00500000000000256" classname="teal_slice" name="is_functions_work"/>
    <testcase time="0.00399999999999778" classname="teal_slice" name="is_functions_work"/>
    <testcase time="0.00100000000000122" classname="teal_slice" name="is_functions_work"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="is_functions_work"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="is_functions_work"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="as.teal_slice_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="as.teal_slice_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="as.teal_slice_checks_arguments"/>
    <testcase time="0.00700000000000145" classname="teal_slice" name="as.teal_slice_checks_arguments"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="as.teal_slice_converts_list_to_teal_slice_"/>
    <testcase time="0.00100000000000122" classname="teal_slice" name="as.teal_slice_converts_list_to_teal_slice_"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="as.teal_slices_checks_arguments"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="as.teal_slices_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="as.teal_slices_checks_arguments"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="as.teal_slices_checks_arguments"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="as.teal_slices_checks_arguments"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="as.teal_slices_converts_list_to_teal_slices_"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="as.teal_slices_converts_list_to_teal_slices_"/>
    <testcase time="0.00100000000000122" classname="teal_slice" name="as.teal_slices_converts_list_to_teal_slices_"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00200000000000244" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00500000000000256" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00500000000000256" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00200000000000244" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="_.teal_slices_accepts_various_types_of_indices"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="_.teal_slices_subsets_properly"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_subsets_properly"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_subsets_properly"/>
    <testcase time="0.00200000000000244" classname="teal_slice" name="_.teal_slices_subsets_properly"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_subsets_properly"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_subsets_properly"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_subsets_properly"/>
    <testcase time="0.00200000000000244" classname="teal_slice" name="_.teal_slices_subsets_properly"/>
    <testcase time="0.00200000000000244" classname="teal_slice" name="_.teal_slices_subsets_properly"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_subsets_properly"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="_.teal_slices_also_subsets_the_exclude_varnames_attribute"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_also_subsets_the_exclude_varnames_attribute"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="_.teal_slices_also_subsets_the_exclude_varnames_attribute"/>
    <testcase time="0.00200000000000244" classname="teal_slice" name="_.teal_slices_also_subsets_the_exclude_varnames_attribute"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_also_subsets_the_exclude_varnames_attribute"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="_.teal_slices_also_subsets_the_exclude_varnames_attribute"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="_.teal_slices_also_subsets_the_exclude_varnames_attribute"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="_.teal_slices_preserves_count_type"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="c.teal_slice_adds_fields_to_teal_slice_"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="c.teal_slice_adds_fields_to_teal_slice_"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="c.teal_slice_adds_fields_to_teal_slice_"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="c.teal_slice_adds_fields_to_teal_slice_"/>
    <testcase time="0.00200000000000244" classname="teal_slice" name="c.teal_slice_adds_fields_to_teal_slice_"/>
    <testcase time="0.00199999999999889" classname="teal_slice" name="c.teal_slice_adds_fields_to_teal_slice_"/>
    <testcase time="0.00400000000000134" classname="teal_slice" name="c.teal_slices_concatenates_teal_slices_objects"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="c.teal_slices_concatenates_teal_slices_objects"/>
    <testcase time="0.0109999999999992" classname="teal_slice" name="c.teal_slices_concatenates_teal_slices_objects"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="c.teal_slices_concatenates_teal_slices_objects"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="c.teal_slices_handles_attributes"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="c.teal_slices_handles_attributes"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="c.teal_slices_handles_attributes"/>
    <testcase time="0.00799999999999912" classname="teal_slice" name="format.teal_slice_returns_a_character_string"/>
    <testcase time="0.00700000000000145" classname="teal_slice" name="format.teal_slice_returns_a_character_string"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="format.teal_slice_prints_teal_slice_header"/>
    <testcase time="0.00700000000000145" classname="teal_slice" name="format.teal_slice_prints_all_mandatory_fields_with_prefix_when_show_all_is_TRUE"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="format.teal_slice_prints_all_mandatory_fields_with_prefix_when_show_all_is_TRUE"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="format.teal_slice_prints_all_mandatory_fields_with_prefix_when_show_all_is_TRUE"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="format.teal_slice_prints_all_mandatory_fields_with_prefix_when_show_all_is_TRUE"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="format.teal_slice_prints_all_mandatory_fields_with_prefix_when_show_all_is_TRUE"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="format.teal_slice_prints_all_mandatory_fields_with_prefix_when_show_all_is_TRUE"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="format.teal_slice_prints_all_mandatory_fields_with_prefix_when_show_all_is_TRUE"/>
    <testcase time="0.00500000000000256" classname="teal_slice" name="format.teal_slice_prints_all_mandatory_fields_with_prefix_when_show_all_is_TRUE"/>
    <testcase time="0.0069999999999979" classname="teal_slice" name="format.teal_slice_skips_empty_mandatory_fields_show_all_is_FALSE"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="format.teal_slice_prints_additional_information_header"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="format.teal_slice_prints_optional_fields_with_prefix"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="format.teal_slice_prints_optional_fields_with_prefix"/>
    <testcase time="0.00700000000000145" classname="teal_slice" name="format.teal_slices_returns_a_character_string"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="format.teal_slices_prints_names_of_tesl_slice_s_if_any"/>
    <testcase time="0.00499999999999901" classname="teal_slice" name="format.teal_slices_prints_names_of_tesl_slice_s_if_any"/>
    <testcase time="0.00700000000000145" classname="teal_slice" name="format.teal_slices_prints_numerical_indices_of_tesl_slice_s_if_no_names"/>
    <testcase time="0.00399999999999778" classname="teal_slice" name="format.teal_slices_prints_numerical_indices_of_tesl_slice_s_if_no_names"/>
    <testcase time="0.00800000000000267" classname="teal_slice" name="format.teal_slices_contains_literal_formatted_representations_of_all_included_teal_slice_s"/>
    <testcase time="0.00399999999999778" classname="teal_slice" name="format.teal_slices_contains_literal_formatted_representations_of_all_included_teal_slice_s"/>
    <testcase time="0.00700000000000145" classname="teal_slice" name="format.teal_slices_prints_include_varnames_attribute_if_not_empty"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="format.teal_slices_prints_include_varnames_attribute_if_not_empty"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="format.teal_slices_prints_include_varnames_attribute_if_not_empty"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="format.teal_slices_prints_include_varnames_attribute_if_not_empty"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="format.teal_slices_prints_count_type_attribute_if_not_empty"/>
    <testcase time="0.00399999999999778" classname="teal_slice" name="slices_field_works"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="slices_field_works">
      <failure type="failure" message="`slices_field(fs)` did not throw an error. ('test-teal_slice.R:561:3')">`slices_field(fs)` did not throw an error.</failure>
    </testcase>
    <testcase time="0.0109999999999992" classname="teal_slice" name="slices_field_works"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="slices_field_works"/>
    <testcase time="0.00200000000000244" classname="teal_slice" name="slices_field_works"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="slices_field_works"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="slices_field_works"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="slices_field_works"/>
    <testcase time="0.00399999999999778" classname="teal_slice" name="slices_which_works"/>
    <testcase time="0.00600000000000023" classname="teal_slice" name="slices_which_works"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="slices_which_works"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="slices_which_works"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="slices_which_works"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="slices_which_works"/>
    <testcase time="0.00300000000000011" classname="teal_slice" name="slices_which_works"/>
  </testsuite>
  <testsuite name="utils" timestamp="2023-05-05T08:10:04Z" hostname="9466c6bbc1be" tests="35" skipped="0" failures="0" errors="0" time="0.165">
    <testcase time="0.00799999999999912" classname="utils" name="check_ellipsis_with_no_unused"/>
    <testcase time="0.00600000000000023" classname="utils" name="check_ellipsis_with_extra_unamed_arguments"/>
    <testcase time="0.00199999999999889" classname="utils" name="check_ellipsis_with_extra_unamed_arguments"/>
    <testcase time="0.00600000000000023" classname="utils" name="check_ellipsis_with_extra_named_arguments"/>
    <testcase time="0.00200000000000244" classname="utils" name="check_ellipsis_with_extra_named_arguments"/>
    <testcase time="0.00600000000000023" classname="utils" name="check_ellipsis_with_extra_named_and_unamed_arguments"/>
    <testcase time="0.000999999999997669" classname="utils" name="check_ellipsis_with_extra_named_and_unamed_arguments"/>
    <testcase time="0.0160000000000018" classname="utils" name="check_ellipsis_with_extra_named_and_unamed_arguments_in_wrong_order"/>
    <testcase time="0.00199999999999889" classname="utils" name="check_ellipsis_with_extra_named_and_unamed_arguments_in_wrong_order"/>
    <testcase time="0.00300000000000011" classname="utils" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00600000000000023" classname="utils" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00700000000000145" classname="utils" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00600000000000023" classname="utils" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00199999999999889" classname="utils" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.0069999999999979" classname="utils" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00300000000000011" classname="utils" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00200000000000244" classname="utils" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00199999999999889" classname="utils" name="check_ellipsis_with_allowed_args"/>
    <testcase time="0.00300000000000011" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00199999999999889" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00200000000000244" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00199999999999889" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00199999999999889" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00200000000000244" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00199999999999889" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00199999999999889" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00199999999999889" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00200000000000244" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00600000000000023" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00600000000000023" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.0069999999999979" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00600000000000023" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00499999999999901" classname="utils" name="check_simple_name_behaves_as_expected"/>
    <testcase time="0.00500000000000256" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.0219999999999985" classname="utils" name="get_teal_bs_theme"/>
  </testsuite>
</testsuites>
